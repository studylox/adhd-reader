{"ast":null,"code":"var _jsxFileName = \"D:\\\\adhd-read-helper\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport * as pdfjsLib from 'pdfjs-dist';\n\n// 确保使用正确的 worker 版本\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst workerSrc = require('pdfjs-dist/build/pdf.worker.entry');\npdfjsLib.GlobalWorkerOptions.workerSrc = workerSrc;\nfunction App() {\n  _s();\n  var _pages;\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const [pages, setPages] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const [fileName, setFileName] = useState('');\n  const [loading, setLoading] = useState(false);\n  const fileRef = useRef(null);\n\n  // 提取PDF页面中的文本和样式\n  const extractPageContent = async page => {\n    const textContent = await page.getTextContent();\n    const viewport = page.getViewport({\n      scale: 1.0\n    });\n\n    // 将文本内容转换为带格式的HTML\n    const content = textContent.items.map(item => {\n      const transform = item.transform;\n      const x = transform[4];\n      const y = viewport.height - transform[5];\n\n      // 计算字体大小和样式\n      const fontSize = Math.sqrt(transform[0] * transform[0] + transform[1] * transform[1]);\n      const fontFamily = item.fontName || 'Arial';\n      return {\n        text: item.str,\n        style: {\n          position: 'absolute',\n          left: `${x}px`,\n          top: `${y}px`,\n          fontSize: `${fontSize}px`,\n          fontFamily: fontFamily,\n          whiteSpace: 'pre'\n        }\n      };\n    });\n    return content;\n  };\n\n  // 处理PDF文件\n  const handlePdfFile = async file => {\n    try {\n      setLoading(true);\n      console.log('开始处理PDF文件:', file.name);\n      const fileArrayBuffer = await file.arrayBuffer();\n      const loadingTask = pdfjsLib.getDocument({\n        data: fileArrayBuffer,\n        cMapUrl: 'https://cdn.jsdelivr.net/npm/pdfjs-dist@3.11.174/cmaps/',\n        cMapPacked: true\n      });\n      const pdf = await loadingTask.promise;\n      console.log('PDF加载成功，总页数:', pdf.numPages);\n      setTotalPages(pdf.numPages);\n      fileRef.current = file;\n\n      // 加载第一页内容\n      const page = await pdf.getPage(1);\n      const content = await extractPageContent(page);\n      setPages([content]);\n      setLoading(false);\n    } catch (error) {\n      console.error('PDF处理错误:', error);\n      setLoading(false);\n      alert(`PDF处理失败: ${error.message}`);\n    }\n  };\n\n  // 加载指定页面\n  const loadPage = async pageNumber => {\n    if (!fileRef.current) return;\n    try {\n      setLoading(true);\n      const fileArrayBuffer = await fileRef.current.arrayBuffer();\n      const pdf = await pdfjsLib.getDocument({\n        data: fileArrayBuffer,\n        cMapUrl: 'https://cdn.jsdelivr.net/npm/pdfjs-dist@3.11.174/cmaps/',\n        cMapPacked: true\n      }).promise;\n      const page = await pdf.getPage(pageNumber);\n      const content = await extractPageContent(page);\n      setPages(prevPages => {\n        const newPages = [...prevPages];\n        newPages[pageNumber - 1] = content;\n        return newPages;\n      });\n      setLoading(false);\n    } catch (error) {\n      console.error('页面加载错误:', error);\n      setLoading(false);\n    }\n  };\n\n  // 文件上传处理\n  const handleFileUpload = async event => {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    // 检查文件大小（100MB限制）\n    if (file.size > 100 * 1024 * 1024) {\n      alert('文件大小不能超过100MB');\n      return;\n    }\n    setFileName(file.name);\n    setPages([]);\n    setCurrentPage(1);\n    console.log('文件类型:', file.type); // 调试日志\n\n    if (file.type === 'application/pdf') {\n      await handlePdfFile(file);\n    } else {\n      // 处理文本文件\n      try {\n        const text = await file.text();\n        const textPages = text.split('\\n\\n').filter(page => page.trim());\n        setPages(textPages);\n        setTotalPages(textPages.length);\n      } catch (error) {\n        console.error('文件读取失败:', error);\n        alert('文件读取失败，请重试');\n      }\n    }\n  };\n\n  // 翻页处理\n  const handlePageChange = direction => {\n    const newPage = direction === 'next' ? Math.min(currentPage + 1, totalPages) : Math.max(currentPage - 1, 1);\n    setCurrentPage(newPage);\n    if (!pages[newPage - 1]) {\n      loadPage(newPage);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `App ${isDarkMode ? 'dark' : 'light'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ADHD \\u9605\\u8BFB\\u52A9\\u624B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".txt,.md,.pdf\",\n          onChange: handleFileUpload,\n          id: \"file-upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file-upload\",\n          children: \"\\u9009\\u62E9\\u6587\\u4EF6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), fileName && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"file-name\",\n          children: [\"\\u5F53\\u524D\\u6587\\u4EF6: \", fileName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsDarkMode(!isDarkMode),\n          children: [\"\\u5207\\u6362\", isDarkMode ? '明亮' : '暗黑', \"\\u6A21\\u5F0F\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reader-container\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"\\u6B63\\u5728\\u52A0\\u8F7D\\u5185\\u5BB9\\uFF0C\\u8BF7\\u7A0D\\u5019...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this) : pages.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"book-view\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"page-btn prev\",\n          onClick: () => handlePageChange('prev'),\n          disabled: currentPage === 1,\n          children: \"\\u2039\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"page-content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pdf-page\",\n            children: (_pages = pages[currentPage - 1]) === null || _pages === void 0 ? void 0 : _pages.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: item.style,\n              children: item.text\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"page-btn next\",\n          onClick: () => handlePageChange('next'),\n          disabled: currentPage === totalPages,\n          children: \"\\u203A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"page-number\",\n          children: [currentPage, \" / \", totalPages]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-prompt\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u8BF7\\u4E0A\\u4F20\\u6587\\u4EF6\\u5F00\\u59CB\\u9605\\u8BFB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u652F\\u6301\\u7684\\u683C\\u5F0F: PDF, TXT, MD (\\u6700\\u5927100MB)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Z4KWbfzHOagHlo/IKUL9fJlUBjQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","pdfjsLib","jsxDEV","_jsxDEV","workerSrc","require","GlobalWorkerOptions","App","_s","_pages","isDarkMode","setIsDarkMode","pages","setPages","currentPage","setCurrentPage","totalPages","setTotalPages","fileName","setFileName","loading","setLoading","fileRef","extractPageContent","page","textContent","getTextContent","viewport","getViewport","scale","content","items","map","item","transform","x","y","height","fontSize","Math","sqrt","fontFamily","fontName","text","str","style","position","left","top","whiteSpace","handlePdfFile","file","console","log","name","fileArrayBuffer","arrayBuffer","loadingTask","getDocument","data","cMapUrl","cMapPacked","pdf","promise","numPages","current","getPage","error","alert","message","loadPage","pageNumber","prevPages","newPages","handleFileUpload","event","target","files","size","type","textPages","split","filter","trim","length","handlePageChange","direction","newPage","min","max","className","children","_jsxFileName","lineNumber","columnNumber","accept","onChange","id","htmlFor","onClick","disabled","index","_c","$RefreshReg$"],"sources":["D:/adhd-read-helper/src/App.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport * as pdfjsLib from 'pdfjs-dist';\r\n\r\n// 确保使用正确的 worker 版本\r\nconst workerSrc = require('pdfjs-dist/build/pdf.worker.entry');\r\npdfjsLib.GlobalWorkerOptions.workerSrc = workerSrc;\r\n\r\nfunction App() {\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n  const [pages, setPages] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const [fileName, setFileName] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const fileRef = useRef(null);\r\n\r\n  // 提取PDF页面中的文本和样式\r\n  const extractPageContent = async (page) => {\r\n    const textContent = await page.getTextContent();\r\n    const viewport = page.getViewport({ scale: 1.0 });\r\n    \r\n    // 将文本内容转换为带格式的HTML\r\n    const content = textContent.items.map(item => {\r\n      const transform = item.transform;\r\n      const x = transform[4];\r\n      const y = viewport.height - transform[5];\r\n      \r\n      // 计算字体大小和样式\r\n      const fontSize = Math.sqrt((transform[0] * transform[0]) + (transform[1] * transform[1]));\r\n      const fontFamily = item.fontName || 'Arial';\r\n      \r\n      return {\r\n        text: item.str,\r\n        style: {\r\n          position: 'absolute',\r\n          left: `${x}px`,\r\n          top: `${y}px`,\r\n          fontSize: `${fontSize}px`,\r\n          fontFamily: fontFamily,\r\n          whiteSpace: 'pre'\r\n        }\r\n      };\r\n    });\r\n\r\n    return content;\r\n  };\r\n\r\n  // 处理PDF文件\r\n  const handlePdfFile = async (file) => {\r\n    try {\r\n      setLoading(true);\r\n      console.log('开始处理PDF文件:', file.name);\r\n\r\n      const fileArrayBuffer = await file.arrayBuffer();\r\n      const loadingTask = pdfjsLib.getDocument({\r\n        data: fileArrayBuffer,\r\n        cMapUrl: 'https://cdn.jsdelivr.net/npm/pdfjs-dist@3.11.174/cmaps/',\r\n        cMapPacked: true,\r\n      });\r\n\r\n      const pdf = await loadingTask.promise;\r\n      console.log('PDF加载成功，总页数:', pdf.numPages);\r\n      \r\n      setTotalPages(pdf.numPages);\r\n      fileRef.current = file;\r\n\r\n      // 加载第一页内容\r\n      const page = await pdf.getPage(1);\r\n      const content = await extractPageContent(page);\r\n      setPages([content]);\r\n      \r\n      setLoading(false);\r\n\r\n    } catch (error) {\r\n      console.error('PDF处理错误:', error);\r\n      setLoading(false);\r\n      alert(`PDF处理失败: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  // 加载指定页面\r\n  const loadPage = async (pageNumber) => {\r\n    if (!fileRef.current) return;\r\n\r\n    try {\r\n      setLoading(true);\r\n      const fileArrayBuffer = await fileRef.current.arrayBuffer();\r\n      const pdf = await pdfjsLib.getDocument({\r\n        data: fileArrayBuffer,\r\n        cMapUrl: 'https://cdn.jsdelivr.net/npm/pdfjs-dist@3.11.174/cmaps/',\r\n        cMapPacked: true,\r\n      }).promise;\r\n\r\n      const page = await pdf.getPage(pageNumber);\r\n      const content = await extractPageContent(page);\r\n      \r\n      setPages(prevPages => {\r\n        const newPages = [...prevPages];\r\n        newPages[pageNumber - 1] = content;\r\n        return newPages;\r\n      });\r\n\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('页面加载错误:', error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 文件上传处理\r\n  const handleFileUpload = async (event) => {\r\n    const file = event.target.files[0];\r\n    if (!file) return;\r\n\r\n    // 检查文件大小（100MB限制）\r\n    if (file.size > 100 * 1024 * 1024) {\r\n      alert('文件大小不能超过100MB');\r\n      return;\r\n    }\r\n\r\n    setFileName(file.name);\r\n    setPages([]);\r\n    setCurrentPage(1);\r\n\r\n    console.log('文件类型:', file.type); // 调试日志\r\n\r\n    if (file.type === 'application/pdf') {\r\n      await handlePdfFile(file);\r\n    } else {\r\n      // 处理文本文件\r\n      try {\r\n        const text = await file.text();\r\n        const textPages = text.split('\\n\\n').filter(page => page.trim());\r\n        setPages(textPages);\r\n        setTotalPages(textPages.length);\r\n      } catch (error) {\r\n        console.error('文件读取失败:', error);\r\n        alert('文件读取失败，请重试');\r\n      }\r\n    }\r\n  };\r\n\r\n  // 翻页处理\r\n  const handlePageChange = (direction) => {\r\n    const newPage = direction === 'next' \r\n      ? Math.min(currentPage + 1, totalPages)\r\n      : Math.max(currentPage - 1, 1);\r\n    \r\n    setCurrentPage(newPage);\r\n    if (!pages[newPage - 1]) {\r\n      loadPage(newPage);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`App ${isDarkMode ? 'dark' : 'light'}`}>\r\n      <div className=\"app-header\">\r\n        <h1>ADHD 阅读助手</h1>\r\n        <div className=\"controls\">\r\n          <input\r\n            type=\"file\"\r\n            accept=\".txt,.md,.pdf\"\r\n            onChange={handleFileUpload}\r\n            id=\"file-upload\"\r\n          />\r\n          <label htmlFor=\"file-upload\">选择文件</label>\r\n          {fileName && <span className=\"file-name\">当前文件: {fileName}</span>}\r\n          <button onClick={() => setIsDarkMode(!isDarkMode)}>\r\n            切换{isDarkMode ? '明亮' : '暗黑'}模式\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"reader-container\">\r\n        {loading ? (\r\n          <div className=\"loading\">\r\n            <div className=\"loading-spinner\"></div>\r\n            <div>正在加载内容，请稍候...</div>\r\n          </div>\r\n        ) : pages.length > 0 ? (\r\n          <div className=\"book-view\">\r\n            <button \r\n              className=\"page-btn prev\" \r\n              onClick={() => handlePageChange('prev')}\r\n              disabled={currentPage === 1}\r\n            >\r\n              ‹\r\n            </button>\r\n            <div className=\"page-content\">\r\n              <div className=\"pdf-page\">\r\n                {pages[currentPage - 1]?.map((item, index) => (\r\n                  <div \r\n                    key={index}\r\n                    style={item.style}\r\n                  >\r\n                    {item.text}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n            <button \r\n              className=\"page-btn next\" \r\n              onClick={() => handlePageChange('next')}\r\n              disabled={currentPage === totalPages}\r\n            >\r\n              ›\r\n            </button>\r\n            <div className=\"page-number\">\r\n              {currentPage} / {totalPages}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"upload-prompt\">\r\n            <p>请上传文件开始阅读</p>\r\n            <p>支持的格式: PDF, TXT, MD (最大100MB)</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,OAAO,KAAKC,QAAQ,MAAM,YAAY;;AAEtC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,SAAS,GAAGC,OAAO,CAAC,mCAAmC,CAAC;AAC9DJ,QAAQ,CAACK,mBAAmB,CAACF,SAAS,GAAGA,SAAS;AAElD,SAASG,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,MAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACiB,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACmB,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACqB,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMuB,OAAO,GAAGtB,MAAM,CAAC,IAAI,CAAC;;EAE5B;EACA,MAAMuB,kBAAkB,GAAG,MAAOC,IAAI,IAAK;IACzC,MAAMC,WAAW,GAAG,MAAMD,IAAI,CAACE,cAAc,CAAC,CAAC;IAC/C,MAAMC,QAAQ,GAAGH,IAAI,CAACI,WAAW,CAAC;MAAEC,KAAK,EAAE;IAAI,CAAC,CAAC;;IAEjD;IACA,MAAMC,OAAO,GAAGL,WAAW,CAACM,KAAK,CAACC,GAAG,CAACC,IAAI,IAAI;MAC5C,MAAMC,SAAS,GAAGD,IAAI,CAACC,SAAS;MAChC,MAAMC,CAAC,GAAGD,SAAS,CAAC,CAAC,CAAC;MACtB,MAAME,CAAC,GAAGT,QAAQ,CAACU,MAAM,GAAGH,SAAS,CAAC,CAAC,CAAC;;MAExC;MACA,MAAMI,QAAQ,GAAGC,IAAI,CAACC,IAAI,CAAEN,SAAS,CAAC,CAAC,CAAC,GAAGA,SAAS,CAAC,CAAC,CAAC,GAAKA,SAAS,CAAC,CAAC,CAAC,GAAGA,SAAS,CAAC,CAAC,CAAE,CAAC;MACzF,MAAMO,UAAU,GAAGR,IAAI,CAACS,QAAQ,IAAI,OAAO;MAE3C,OAAO;QACLC,IAAI,EAAEV,IAAI,CAACW,GAAG;QACdC,KAAK,EAAE;UACLC,QAAQ,EAAE,UAAU;UACpBC,IAAI,EAAE,GAAGZ,CAAC,IAAI;UACda,GAAG,EAAE,GAAGZ,CAAC,IAAI;UACbE,QAAQ,EAAE,GAAGA,QAAQ,IAAI;UACzBG,UAAU,EAAEA,UAAU;UACtBQ,UAAU,EAAE;QACd;MACF,CAAC;IACH,CAAC,CAAC;IAEF,OAAOnB,OAAO;EAChB,CAAC;;EAED;EACA,MAAMoB,aAAa,GAAG,MAAOC,IAAI,IAAK;IACpC,IAAI;MACF9B,UAAU,CAAC,IAAI,CAAC;MAChB+B,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEF,IAAI,CAACG,IAAI,CAAC;MAEpC,MAAMC,eAAe,GAAG,MAAMJ,IAAI,CAACK,WAAW,CAAC,CAAC;MAChD,MAAMC,WAAW,GAAGxD,QAAQ,CAACyD,WAAW,CAAC;QACvCC,IAAI,EAAEJ,eAAe;QACrBK,OAAO,EAAE,yDAAyD;QAClEC,UAAU,EAAE;MACd,CAAC,CAAC;MAEF,MAAMC,GAAG,GAAG,MAAML,WAAW,CAACM,OAAO;MACrCX,OAAO,CAACC,GAAG,CAAC,cAAc,EAAES,GAAG,CAACE,QAAQ,CAAC;MAEzC/C,aAAa,CAAC6C,GAAG,CAACE,QAAQ,CAAC;MAC3B1C,OAAO,CAAC2C,OAAO,GAAGd,IAAI;;MAEtB;MACA,MAAM3B,IAAI,GAAG,MAAMsC,GAAG,CAACI,OAAO,CAAC,CAAC,CAAC;MACjC,MAAMpC,OAAO,GAAG,MAAMP,kBAAkB,CAACC,IAAI,CAAC;MAC9CX,QAAQ,CAAC,CAACiB,OAAO,CAAC,CAAC;MAEnBT,UAAU,CAAC,KAAK,CAAC;IAEnB,CAAC,CAAC,OAAO8C,KAAK,EAAE;MACdf,OAAO,CAACe,KAAK,CAAC,UAAU,EAAEA,KAAK,CAAC;MAChC9C,UAAU,CAAC,KAAK,CAAC;MACjB+C,KAAK,CAAC,YAAYD,KAAK,CAACE,OAAO,EAAE,CAAC;IACpC;EACF,CAAC;;EAED;EACA,MAAMC,QAAQ,GAAG,MAAOC,UAAU,IAAK;IACrC,IAAI,CAACjD,OAAO,CAAC2C,OAAO,EAAE;IAEtB,IAAI;MACF5C,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMkC,eAAe,GAAG,MAAMjC,OAAO,CAAC2C,OAAO,CAACT,WAAW,CAAC,CAAC;MAC3D,MAAMM,GAAG,GAAG,MAAM7D,QAAQ,CAACyD,WAAW,CAAC;QACrCC,IAAI,EAAEJ,eAAe;QACrBK,OAAO,EAAE,yDAAyD;QAClEC,UAAU,EAAE;MACd,CAAC,CAAC,CAACE,OAAO;MAEV,MAAMvC,IAAI,GAAG,MAAMsC,GAAG,CAACI,OAAO,CAACK,UAAU,CAAC;MAC1C,MAAMzC,OAAO,GAAG,MAAMP,kBAAkB,CAACC,IAAI,CAAC;MAE9CX,QAAQ,CAAC2D,SAAS,IAAI;QACpB,MAAMC,QAAQ,GAAG,CAAC,GAAGD,SAAS,CAAC;QAC/BC,QAAQ,CAACF,UAAU,GAAG,CAAC,CAAC,GAAGzC,OAAO;QAClC,OAAO2C,QAAQ;MACjB,CAAC,CAAC;MAEFpD,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,OAAO8C,KAAK,EAAE;MACdf,OAAO,CAACe,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;MAC/B9C,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAMqD,gBAAgB,GAAG,MAAOC,KAAK,IAAK;IACxC,MAAMxB,IAAI,GAAGwB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,IAAI,CAAC1B,IAAI,EAAE;;IAEX;IACA,IAAIA,IAAI,CAAC2B,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,EAAE;MACjCV,KAAK,CAAC,eAAe,CAAC;MACtB;IACF;IAEAjD,WAAW,CAACgC,IAAI,CAACG,IAAI,CAAC;IACtBzC,QAAQ,CAAC,EAAE,CAAC;IACZE,cAAc,CAAC,CAAC,CAAC;IAEjBqC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,IAAI,CAAC4B,IAAI,CAAC,CAAC,CAAC;;IAEjC,IAAI5B,IAAI,CAAC4B,IAAI,KAAK,iBAAiB,EAAE;MACnC,MAAM7B,aAAa,CAACC,IAAI,CAAC;IAC3B,CAAC,MAAM;MACL;MACA,IAAI;QACF,MAAMR,IAAI,GAAG,MAAMQ,IAAI,CAACR,IAAI,CAAC,CAAC;QAC9B,MAAMqC,SAAS,GAAGrC,IAAI,CAACsC,KAAK,CAAC,MAAM,CAAC,CAACC,MAAM,CAAC1D,IAAI,IAAIA,IAAI,CAAC2D,IAAI,CAAC,CAAC,CAAC;QAChEtE,QAAQ,CAACmE,SAAS,CAAC;QACnB/D,aAAa,CAAC+D,SAAS,CAACI,MAAM,CAAC;MACjC,CAAC,CAAC,OAAOjB,KAAK,EAAE;QACdf,OAAO,CAACe,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;QAC/BC,KAAK,CAAC,YAAY,CAAC;MACrB;IACF;EACF,CAAC;;EAED;EACA,MAAMiB,gBAAgB,GAAIC,SAAS,IAAK;IACtC,MAAMC,OAAO,GAAGD,SAAS,KAAK,MAAM,GAChC/C,IAAI,CAACiD,GAAG,CAAC1E,WAAW,GAAG,CAAC,EAAEE,UAAU,CAAC,GACrCuB,IAAI,CAACkD,GAAG,CAAC3E,WAAW,GAAG,CAAC,EAAE,CAAC,CAAC;IAEhCC,cAAc,CAACwE,OAAO,CAAC;IACvB,IAAI,CAAC3E,KAAK,CAAC2E,OAAO,GAAG,CAAC,CAAC,EAAE;MACvBjB,QAAQ,CAACiB,OAAO,CAAC;IACnB;EACF,CAAC;EAED,oBACEpF,OAAA;IAAKuF,SAAS,EAAE,OAAOhF,UAAU,GAAG,MAAM,GAAG,OAAO,EAAG;IAAAiF,QAAA,gBACrDxF,OAAA;MAAKuF,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBxF,OAAA;QAAAwF,QAAA,EAAI;MAAS;QAAAzE,QAAA,EAAA0E,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClB3F,OAAA;QAAKuF,SAAS,EAAC,UAAU;QAAAC,QAAA,gBACvBxF,OAAA;UACE4E,IAAI,EAAC,MAAM;UACXgB,MAAM,EAAC,eAAe;UACtBC,QAAQ,EAAEtB,gBAAiB;UAC3BuB,EAAE,EAAC;QAAa;UAAA/E,QAAA,EAAA0E,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjB,CAAC,eACF3F,OAAA;UAAO+F,OAAO,EAAC,aAAa;UAAAP,QAAA,EAAC;QAAI;UAAAzE,QAAA,EAAA0E,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,EACxC5E,QAAQ,iBAAIf,OAAA;UAAMuF,SAAS,EAAC,WAAW;UAAAC,QAAA,GAAC,4BAAM,EAACzE,QAAQ;QAAA;UAAAA,QAAA,EAAA0E,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAChE3F,OAAA;UAAQgG,OAAO,EAAEA,CAAA,KAAMxF,aAAa,CAAC,CAACD,UAAU,CAAE;UAAAiF,QAAA,GAAC,cAC/C,EAACjF,UAAU,GAAG,IAAI,GAAG,IAAI,EAAC,cAC9B;QAAA;UAAAQ,QAAA,EAAA0E,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAA5E,QAAA,EAAA0E,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAA5E,QAAA,EAAA0E,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEN3F,OAAA;MAAKuF,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAC9BvE,OAAO,gBACNjB,OAAA;QAAKuF,SAAS,EAAC,SAAS;QAAAC,QAAA,gBACtBxF,OAAA;UAAKuF,SAAS,EAAC;QAAiB;UAAAxE,QAAA,EAAA0E,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACvC3F,OAAA;UAAAwF,QAAA,EAAK;QAAa;UAAAzE,QAAA,EAAA0E,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAA5E,QAAA,EAAA0E,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB,CAAC,GACJlF,KAAK,CAACwE,MAAM,GAAG,CAAC,gBAClBjF,OAAA;QAAKuF,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACxBxF,OAAA;UACEuF,SAAS,EAAC,eAAe;UACzBS,OAAO,EAAEA,CAAA,KAAMd,gBAAgB,CAAC,MAAM,CAAE;UACxCe,QAAQ,EAAEtF,WAAW,KAAK,CAAE;UAAA6E,QAAA,EAC7B;QAED;UAAAzE,QAAA,EAAA0E,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT3F,OAAA;UAAKuF,SAAS,EAAC,cAAc;UAAAC,QAAA,eAC3BxF,OAAA;YAAKuF,SAAS,EAAC,UAAU;YAAAC,QAAA,GAAAlF,MAAA,GACtBG,KAAK,CAACE,WAAW,GAAG,CAAC,CAAC,cAAAL,MAAA,uBAAtBA,MAAA,CAAwBuB,GAAG,CAAC,CAACC,IAAI,EAAEoE,KAAK,kBACvClG,OAAA;cAEE0C,KAAK,EAAEZ,IAAI,CAACY,KAAM;cAAA8C,QAAA,EAEjB1D,IAAI,CAACU;YAAI,GAHL0D,KAAK;cAAAnF,QAAA,EAAA0E,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAIP,CACN;UAAC;YAAA5E,QAAA,EAAA0E,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC;QAAC;UAAA5E,QAAA,EAAA0E,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACN3F,OAAA;UACEuF,SAAS,EAAC,eAAe;UACzBS,OAAO,EAAEA,CAAA,KAAMd,gBAAgB,CAAC,MAAM,CAAE;UACxCe,QAAQ,EAAEtF,WAAW,KAAKE,UAAW;UAAA2E,QAAA,EACtC;QAED;UAAAzE,QAAA,EAAA0E,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT3F,OAAA;UAAKuF,SAAS,EAAC,aAAa;UAAAC,QAAA,GACzB7E,WAAW,EAAC,KAAG,EAACE,UAAU;QAAA;UAAAE,QAAA,EAAA0E,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB,CAAC;MAAA;QAAA5E,QAAA,EAAA0E,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,gBAEN3F,OAAA;QAAKuF,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5BxF,OAAA;UAAAwF,QAAA,EAAG;QAAS;UAAAzE,QAAA,EAAA0E,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAChB3F,OAAA;UAAAwF,QAAA,EAAG;QAA6B;UAAAzE,QAAA,EAAA0E,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAA5E,QAAA,EAAA0E,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC;IACN;MAAA5E,QAAA,EAAA0E,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAA5E,QAAA,EAAA0E,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACtF,EAAA,CArNQD,GAAG;AAAA+F,EAAA,GAAH/F,GAAG;AAuNZ,eAAeA,GAAG;AAAC,IAAA+F,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}