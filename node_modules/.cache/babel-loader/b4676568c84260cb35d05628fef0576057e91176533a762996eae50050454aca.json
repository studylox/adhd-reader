{"ast":null,"code":"var _jsxFileName = \"D:\\\\adhd-read-helper\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport * as pdfjsLib from 'pdfjs-dist';\nimport * as pdfjsViewer from 'pdfjs-dist/web/pdf_viewer';\nimport { marked } from 'marked'; // 需要安装: npm install marked\nimport './styles/Reader.css';\nimport { pdfjs } from 'pdfjs-dist';\n\n// 设置 PDF.js worker\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\npdfjsLib.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjsLib.version}/pdf.worker.min.js`;\n\n// 模拟NLP词性标注功能（实际应用中建议使用专业NLP库如nlp.js或调用API）\nconst tagPartsOfSpeech = text => {\n  // 使用简单的规则来标记常见名词\n  const commonNouns = ['书', '文章', '段落' /* 其他常见名词 */];\n  let highlightedText = text;\n  commonNouns.forEach(noun => {\n    const regex = new RegExp(noun, 'g');\n    highlightedText = highlightedText.replace(regex, `<span class=\"highlight\">${noun}</span>`);\n  });\n  return highlightedText;\n};\nconst App = () => {\n  _s();\n  // 状态定义\n  const [isDarkMode, setIsDarkMode] = useState(true);\n  const [pages, setPages] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const [fileName, setFileName] = useState('');\n  const [loading, setLoading] = useState(false);\n  const fileRef = useRef(null); // 添加文件引用\n  const [file, setFile] = useState(null);\n  const [pdfInstance, setPdfInstance] = useState(null);\n  const [extractedTextPages, setExtractedTextPages] = useState([]);\n  const [readingMode, setReadingMode] = useState('static'); // static, follow-mouse, auto-guide\n  const [highlightColor, setHighlightColor] = useState('#ffeb3b'); // 默认高亮颜色\n  const [highlightPOS, setHighlightPOS] = useState(['noun']); // 默认高亮词性\n  const [markdownContent, setMarkdownContent] = useState('');\n  const readerContainerRef = useRef(null);\n  const autoReadGuideRef = useRef(null);\n  const autoReadIntervalRef = useRef(null);\n  const [content, setContent] = useState('');\n  const [pdfDocument, setPdfDocument] = useState(null);\n\n  // 初始化PDF.js\n  useEffect(() => {\n    pdfjsLib.GlobalWorkerOptions.workerSrc = `https://cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjsLib.version}/pdf.worker.min.js`;\n\n    // 设置高亮颜色\n    document.documentElement.style.setProperty('--highlight-color', highlightColor);\n    return () => {\n      // 清理自动阅读定时器\n      if (autoReadIntervalRef.current) {\n        clearInterval(autoReadIntervalRef.current);\n      }\n    };\n  }, [highlightColor]);\n\n  // 当阅读模式改变时应用效果\n  useEffect(() => {\n    if (readingMode === 'auto-guide') {\n      startAutoReadGuide();\n    } else if (autoReadIntervalRef.current) {\n      clearInterval(autoReadIntervalRef.current);\n    }\n  }, [readingMode, markdownContent]);\n\n  // 处理PDF文件\n  const handlePdfFile = async file => {\n    try {\n      const fileURL = URL.createObjectURL(file);\n      const loadingTask = pdfjsLib.getDocument(fileURL);\n      const pdf = await loadingTask.promise;\n      setPdfDocument(pdf);\n      setTotalPages(pdf.numPages);\n      setCurrentPage(1);\n\n      // 加载第一页\n      await extractAndProcessPage(pdf, 1);\n    } catch (error) {\n      console.error('加载PDF时出错:', error);\n      alert('PDF加载失败，请尝试其他文件');\n    }\n  };\n\n  // 简单的文本处理函数，替代marked库\n  const simpleFormat = text => {\n    // 将文本分段，确保空白行被视为段落分隔符\n    const paragraphs = text.split('\\n\\n').map(p => p.trim()).filter(p => p.length > 0);\n\n    // 为每个段落添加适当的HTML标签\n    return paragraphs.map(p => `<p>${p}</p>`).join('');\n  };\n\n  // 改进PDF文本提取和段落保留逻辑\n  const extractAndProcessPage = async (pdf, pageNum) => {\n    try {\n      const page = await pdf.getPage(pageNum);\n      const textContent = await page.getTextContent();\n\n      // 对文本内容进行排序和处理\n      const textItems = textContent.items;\n\n      // 按y坐标排序，创建行\n      const sortedItems = [...textItems].sort((a, b) => {\n        // 首先按y坐标排序（PDF坐标系从底部向上）\n        const yDiff = b.transform[5] - a.transform[5];\n        // 如果y坐标接近，则按x坐标排序\n        if (Math.abs(yDiff) < 5) {\n          return a.transform[4] - b.transform[4];\n        }\n        return yDiff;\n      });\n\n      // 创建HTML内容\n      let htmlContent = '<div class=\"pdf-content adhd-friendly-text\">';\n      let currentY = null;\n      let currentLine = '';\n      sortedItems.forEach((item, index) => {\n        // 处理字体大小和位置\n        const fontSize = Math.sqrt(item.transform[0] * item.transform[0] + item.transform[1] * item.transform[1]);\n        const yPos = item.transform[5];\n\n        // 根据字体大小应用不同的间距\n        const charSpacing = fontSize * 0.3; // 根据字体大小动态计算字符间距\n\n        // 检查是否是新的一行\n        if (currentY === null || Math.abs(currentY - yPos) > 5) {\n          if (currentLine) {\n            htmlContent += `<div class=\"text-line\">${currentLine}</div>`;\n            currentLine = '';\n          }\n          currentY = yPos;\n        }\n\n        // 处理字符间距 - 在字符间添加细小空格\n        const spacedText = item.str.split('').join('\\u200A\\u200A');\n\n        // 根据字体大小应用不同的样式\n        let styleClass = 'normal-text';\n        if (fontSize > 14) styleClass = 'title-text';else if (fontSize > 12) styleClass = 'subtitle-text';\n\n        // 添加到当前行\n        currentLine += `<span class=\"${styleClass}\" style=\"letter-spacing: ${charSpacing}px;\">${spacedText}</span> `;\n      });\n\n      // 添加最后一行\n      if (currentLine) {\n        htmlContent += `<div class=\"text-line\">${currentLine}</div>`;\n      }\n      htmlContent += '</div>';\n      setContent(htmlContent);\n    } catch (error) {\n      console.error('处理PDF页面时出错:', error);\n      alert('无法处理PDF页面');\n    }\n  };\n\n  // 处理TXT文件\n  const handleTxtFile = async file => {\n    try {\n      setLoading(true);\n      const text = await file.text();\n      // 将文本分页处理\n      const pageTexts = text.split('\\n\\n').map(paragraph => [{\n        text: paragraph,\n        x: 40,\n        y: 40,\n        fontSize: 16,\n        fontFamily: 'serif'\n      }]);\n      setPages(pageTexts);\n      setTotalPages(pageTexts.length);\n      setCurrentPage(1);\n      setLoading(false);\n    } catch (error) {\n      console.error('TXT处理错误:', error);\n      setLoading(false);\n      alert('TXT文件处理失败，请重试');\n    }\n  };\n\n  // 文件上传处理\n  const handleFileUpload = async e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    if (file.type === 'application/pdf') {\n      await handlePdfFile(file);\n    } else if (file.type === 'text/plain') {\n      handleTxtFile(file);\n    } else {\n      alert('请上传PDF或TXT文件');\n    }\n  };\n\n  // 翻页函数\n  const changePage = async delta => {\n    const newPage = currentPage + delta;\n    if (newPage >= 1 && newPage <= totalPages && pdfDocument) {\n      setCurrentPage(newPage);\n      await extractAndProcessPage(pdfDocument, newPage);\n    }\n  };\n\n  // 设置鼠标跟随高亮\n  const setupMouseFollowHighlight = () => {\n    const pageContent = document.querySelector('.pdf-content');\n    if (!pageContent) return;\n    pageContent.addEventListener('mousemove', e => {\n      if (readingMode !== 'follow-mouse') return;\n\n      // 清除之前的高亮\n      const prevHighlighted = pageContent.querySelectorAll('.reading-line');\n      prevHighlighted.forEach(el => el.classList.remove('reading-line'));\n\n      // 获取鼠标所在的行\n      const lines = pageContent.querySelectorAll('.text-line');\n      lines.forEach(line => {\n        const rect = line.getBoundingClientRect();\n        if (e.clientY >= rect.top && e.clientY <= rect.bottom) {\n          line.classList.add('reading-line');\n        }\n      });\n    });\n  };\n\n  // 自动阅读引导\n  const startAutoReadGuide = () => {\n    if (autoReadIntervalRef.current) {\n      clearInterval(autoReadIntervalRef.current);\n    }\n\n    // 创建阅读指示点\n    if (!autoReadGuideRef.current) {\n      const guide = document.createElement('div');\n      guide.className = 'auto-read-guide';\n      document.querySelector('.page-content').appendChild(guide);\n      autoReadGuideRef.current = guide;\n    }\n\n    // 获取页面内所有段落\n    const paragraphs = document.querySelectorAll('.page-content p');\n    if (!paragraphs.length) return;\n    let currentParagraphIndex = 0;\n    let currentCharIndex = 0;\n    autoReadIntervalRef.current = setInterval(() => {\n      if (currentParagraphIndex >= paragraphs.length) {\n        clearInterval(autoReadIntervalRef.current);\n        return;\n      }\n      const paragraph = paragraphs[currentParagraphIndex];\n      const text = paragraph.textContent;\n      if (currentCharIndex >= text.length) {\n        currentParagraphIndex++;\n        currentCharIndex = 0;\n        return;\n      }\n\n      // 计算当前字符位置\n      const range = document.createRange();\n      const textNode = paragraph.firstChild;\n      if (textNode && textNode.nodeType === Node.TEXT_NODE) {\n        range.setStart(textNode, Math.min(currentCharIndex, textNode.length));\n        range.setStart(textNode, Math.min(currentCharIndex, textNode.length));\n        const rect = range.getBoundingClientRect();\n\n        // 更新指示点位置\n        if (autoReadGuideRef.current) {\n          const guide = autoReadGuideRef.current;\n          guide.style.left = `${rect.left}px`;\n          guide.style.top = `${rect.bottom + 5}px`;\n\n          // 闪烁效果\n          guide.style.opacity = 1;\n          setTimeout(() => {\n            guide.style.opacity = 0.5;\n          }, 100);\n        }\n      }\n      currentCharIndex += 1;\n    }, 200); // 每秒5个字符的速度\n  };\n\n  // 处理阅读模式切换\n  const handleReadingModeChange = mode => {\n    setReadingMode(mode);\n    if (mode === 'follow-mouse') {\n      setTimeout(setupMouseFollowHighlight, 100);\n    }\n  };\n  useEffect(() => {\n    // 当阅读模式为follow-mouse时，设置鼠标跟随高亮\n    if (readingMode === 'follow-mouse' && content) {\n      setTimeout(setupMouseFollowHighlight, 100);\n    }\n  }, [readingMode, content]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `App ${isDarkMode ? 'dark' : 'light'}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"ADHD \\u9605\\u8BFB\\u52A9\\u624B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"upload-btn\",\n            onClick: () => document.getElementById('fileInput').click(),\n            children: \"\\u9009\\u62E9\\u6587\\u4EF6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"fileInput\",\n            type: \"file\",\n            accept: \".pdf,.txt\",\n            style: {\n              display: 'none'\n            },\n            onChange: handleFileUpload\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"mode-btn\",\n            children: \"\\u5207\\u6362\\u660E\\u4EAE\\u6A21\\u5F0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"color-picker\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"\\u9AD8\\u4EAE\\u989C\\u8272:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"color\",\n              value: highlightColor,\n              onChange: e => setHighlightColor(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mode-selector\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              value: readingMode,\n              onChange: e => handleReadingModeChange(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"static\",\n                children: \"\\u9AD8\\u4EAE\\u9759\\u606F\\u6A21\\u5F0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"follow-mouse\",\n                children: \"\\u9F20\\u6807\\u8DDF\\u968F\\u9AD8\\u4EAE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"auto-guide\",\n                children: \"\\u81EA\\u52A8\\u9605\\u8BFB\\u5F15\\u5BFC\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pos-selector\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              value: highlightPOS,\n              onChange: e => {\n                const options = Array.from(e.target.selectedOptions, option => option.value);\n                setHighlightPOS(options);\n              },\n              multiple: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"noun\",\n                children: \"\\u540D\\u8BCD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"verb\",\n                children: \"\\u52A8\\u8BCD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"adj\",\n                children: \"\\u5F62\\u5BB9\\u8BCD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reader-container\",\n        ref: readerContainerRef,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"page-btn prev\",\n          onClick: () => changePage(-1),\n          disabled: currentPage <= 1,\n          children: \"\\u2190\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"page-content\",\n          children: !file && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload-hint\",\n            children: [\"\\u8BF7\\u4E0A\\u4F20\\u6587\\u4EF6\\u5F00\\u59CB\\u9605\\u8BFB\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 17\n            }, this), \"\\u652F\\u6301\\u7684\\u683C\\u5F0F: PDF, TXT (\\u6700\\u5927100MB)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"page-btn next\",\n          onClick: () => changePage(1),\n          disabled: currentPage >= totalPages,\n          children: \"\\u2192\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 9\n      }, this), file && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-info\",\n        children: [\"\\u7B2C \", currentPage, \" \\u9875 / \\u5171 \", totalPages, \" \\u9875\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 320,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"wDJqmWOfuu9dWXKlRgXxX2L9ihE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","pdfjsLib","pdfjsViewer","marked","pdfjs","jsxDEV","_jsxDEV","GlobalWorkerOptions","workerSrc","version","tagPartsOfSpeech","text","commonNouns","highlightedText","forEach","noun","regex","RegExp","replace","App","_s","isDarkMode","setIsDarkMode","pages","setPages","currentPage","setCurrentPage","totalPages","setTotalPages","fileName","setFileName","loading","setLoading","fileRef","file","setFile","pdfInstance","setPdfInstance","extractedTextPages","setExtractedTextPages","readingMode","setReadingMode","highlightColor","setHighlightColor","highlightPOS","setHighlightPOS","markdownContent","setMarkdownContent","readerContainerRef","autoReadGuideRef","autoReadIntervalRef","content","setContent","pdfDocument","setPdfDocument","document","documentElement","style","setProperty","current","clearInterval","startAutoReadGuide","handlePdfFile","fileURL","URL","createObjectURL","loadingTask","getDocument","pdf","promise","numPages","extractAndProcessPage","error","console","alert","simpleFormat","paragraphs","split","map","p","trim","filter","length","join","pageNum","page","getPage","textContent","getTextContent","textItems","items","sortedItems","sort","a","b","yDiff","transform","Math","abs","htmlContent","currentY","currentLine","item","index","fontSize","sqrt","yPos","charSpacing","spacedText","str","styleClass","handleTxtFile","pageTexts","paragraph","x","y","fontFamily","handleFileUpload","e","target","files","type","changePage","delta","newPage","setupMouseFollowHighlight","pageContent","querySelector","addEventListener","prevHighlighted","querySelectorAll","el","classList","remove","lines","line","rect","getBoundingClientRect","clientY","top","bottom","add","guide","createElement","className","appendChild","currentParagraphIndex","currentCharIndex","setInterval","range","createRange","textNode","firstChild","nodeType","Node","TEXT_NODE","setStart","min","left","opacity","setTimeout","handleReadingModeChange","mode","children","_jsxFileName","lineNumber","columnNumber","onClick","getElementById","click","id","accept","display","onChange","value","options","Array","from","selectedOptions","option","multiple","ref","disabled","_c","$RefreshReg$"],"sources":["D:/adhd-read-helper/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport * as pdfjsLib from 'pdfjs-dist';\nimport * as pdfjsViewer from 'pdfjs-dist/web/pdf_viewer';\nimport { marked } from 'marked'; // 需要安装: npm install marked\nimport './styles/Reader.css';\nimport { pdfjs } from 'pdfjs-dist';\n\n// 设置 PDF.js worker\npdfjsLib.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjsLib.version}/pdf.worker.min.js`;\n\n// 模拟NLP词性标注功能（实际应用中建议使用专业NLP库如nlp.js或调用API）\nconst tagPartsOfSpeech = (text) => {\n  // 使用简单的规则来标记常见名词\n  const commonNouns = ['书', '文章', '段落', /* 其他常见名词 */];\n  let highlightedText = text;\n  \n  commonNouns.forEach(noun => {\n    const regex = new RegExp(noun, 'g');\n    highlightedText = highlightedText.replace(regex, `<span class=\"highlight\">${noun}</span>`);\n  });\n  \n  return highlightedText;\n};\n\nconst App = () => {\n  // 状态定义\n  const [isDarkMode, setIsDarkMode] = useState(true);\n  const [pages, setPages] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const [fileName, setFileName] = useState('');\n  const [loading, setLoading] = useState(false);\n  const fileRef = useRef(null); // 添加文件引用\n  const [file, setFile] = useState(null);\n  const [pdfInstance, setPdfInstance] = useState(null);\n  const [extractedTextPages, setExtractedTextPages] = useState([]);\n  const [readingMode, setReadingMode] = useState('static'); // static, follow-mouse, auto-guide\n  const [highlightColor, setHighlightColor] = useState('#ffeb3b'); // 默认高亮颜色\n  const [highlightPOS, setHighlightPOS] = useState(['noun']); // 默认高亮词性\n  const [markdownContent, setMarkdownContent] = useState('');\n  const readerContainerRef = useRef(null);\n  const autoReadGuideRef = useRef(null);\n  const autoReadIntervalRef = useRef(null);\n  const [content, setContent] = useState('');\n  const [pdfDocument, setPdfDocument] = useState(null);\n\n  // 初始化PDF.js\n  useEffect(() => {\n    pdfjsLib.GlobalWorkerOptions.workerSrc = `https://cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjsLib.version}/pdf.worker.min.js`;\n    \n    // 设置高亮颜色\n    document.documentElement.style.setProperty('--highlight-color', highlightColor);\n    \n    return () => {\n      // 清理自动阅读定时器\n      if (autoReadIntervalRef.current) {\n        clearInterval(autoReadIntervalRef.current);\n      }\n    };\n  }, [highlightColor]);\n  \n  // 当阅读模式改变时应用效果\n  useEffect(() => {\n    if (readingMode === 'auto-guide') {\n      startAutoReadGuide();\n    } else if (autoReadIntervalRef.current) {\n      clearInterval(autoReadIntervalRef.current);\n    }\n  }, [readingMode, markdownContent]);\n\n  // 处理PDF文件\n  const handlePdfFile = async (file) => {\n    try {\n      const fileURL = URL.createObjectURL(file);\n      const loadingTask = pdfjsLib.getDocument(fileURL);\n      const pdf = await loadingTask.promise;\n      \n      setPdfDocument(pdf);\n      setTotalPages(pdf.numPages);\n      setCurrentPage(1);\n      \n      // 加载第一页\n      await extractAndProcessPage(pdf, 1);\n    } catch (error) {\n      console.error('加载PDF时出错:', error);\n      alert('PDF加载失败，请尝试其他文件');\n    }\n  };\n  \n  // 简单的文本处理函数，替代marked库\n  const simpleFormat = (text) => {\n    // 将文本分段，确保空白行被视为段落分隔符\n    const paragraphs = text.split('\\n\\n')\n      .map(p => p.trim())\n      .filter(p => p.length > 0);\n    \n    // 为每个段落添加适当的HTML标签\n    return paragraphs\n      .map(p => `<p>${p}</p>`)\n      .join('');\n  };\n\n  // 改进PDF文本提取和段落保留逻辑\n  const extractAndProcessPage = async (pdf, pageNum) => {\n    try {\n      const page = await pdf.getPage(pageNum);\n      const textContent = await page.getTextContent();\n      \n      // 对文本内容进行排序和处理\n      const textItems = textContent.items;\n      \n      // 按y坐标排序，创建行\n      const sortedItems = [...textItems].sort((a, b) => {\n        // 首先按y坐标排序（PDF坐标系从底部向上）\n        const yDiff = b.transform[5] - a.transform[5];\n        // 如果y坐标接近，则按x坐标排序\n        if (Math.abs(yDiff) < 5) {\n          return a.transform[4] - b.transform[4];\n        }\n        return yDiff;\n      });\n      \n      // 创建HTML内容\n      let htmlContent = '<div class=\"pdf-content adhd-friendly-text\">';\n      let currentY = null;\n      let currentLine = '';\n      \n      sortedItems.forEach((item, index) => {\n        // 处理字体大小和位置\n        const fontSize = Math.sqrt(item.transform[0] * item.transform[0] + item.transform[1] * item.transform[1]);\n        const yPos = item.transform[5];\n        \n        // 根据字体大小应用不同的间距\n        const charSpacing = fontSize * 0.3; // 根据字体大小动态计算字符间距\n        \n        // 检查是否是新的一行\n        if (currentY === null || Math.abs(currentY - yPos) > 5) {\n          if (currentLine) {\n            htmlContent += `<div class=\"text-line\">${currentLine}</div>`;\n            currentLine = '';\n          }\n          currentY = yPos;\n        }\n        \n        // 处理字符间距 - 在字符间添加细小空格\n        const spacedText = item.str.split('').join('\\u200A\\u200A');\n        \n        // 根据字体大小应用不同的样式\n        let styleClass = 'normal-text';\n        if (fontSize > 14) styleClass = 'title-text';\n        else if (fontSize > 12) styleClass = 'subtitle-text';\n        \n        // 添加到当前行\n        currentLine += `<span class=\"${styleClass}\" style=\"letter-spacing: ${charSpacing}px;\">${spacedText}</span> `;\n      });\n      \n      // 添加最后一行\n      if (currentLine) {\n        htmlContent += `<div class=\"text-line\">${currentLine}</div>`;\n      }\n      \n      htmlContent += '</div>';\n      setContent(htmlContent);\n    } catch (error) {\n      console.error('处理PDF页面时出错:', error);\n      alert('无法处理PDF页面');\n    }\n  };\n\n  // 处理TXT文件\n  const handleTxtFile = async (file) => {\n    try {\n      setLoading(true);\n      const text = await file.text();\n      // 将文本分页处理\n      const pageTexts = text.split('\\n\\n').map(paragraph => [{\n        text: paragraph,\n        x: 40,\n        y: 40,\n        fontSize: 16,\n        fontFamily: 'serif'\n      }]);\n      setPages(pageTexts);\n      setTotalPages(pageTexts.length);\n      setCurrentPage(1);\n      setLoading(false);\n    } catch (error) {\n      console.error('TXT处理错误:', error);\n      setLoading(false);\n      alert('TXT文件处理失败，请重试');\n    }\n  };\n\n  // 文件上传处理\n  const handleFileUpload = async (e) => {\n    const file = e.target.files[0];\n    if (!file) return;\n    \n    if (file.type === 'application/pdf') {\n      await handlePdfFile(file);\n    } else if (file.type === 'text/plain') {\n      handleTxtFile(file);\n    } else {\n      alert('请上传PDF或TXT文件');\n    }\n  };\n\n  // 翻页函数\n  const changePage = async (delta) => {\n    const newPage = currentPage + delta;\n    if (newPage >= 1 && newPage <= totalPages && pdfDocument) {\n      setCurrentPage(newPage);\n      await extractAndProcessPage(pdfDocument, newPage);\n    }\n  };\n\n  // 设置鼠标跟随高亮\n  const setupMouseFollowHighlight = () => {\n    const pageContent = document.querySelector('.pdf-content');\n    if (!pageContent) return;\n    \n    pageContent.addEventListener('mousemove', (e) => {\n      if (readingMode !== 'follow-mouse') return;\n      \n      // 清除之前的高亮\n      const prevHighlighted = pageContent.querySelectorAll('.reading-line');\n      prevHighlighted.forEach(el => el.classList.remove('reading-line'));\n      \n      // 获取鼠标所在的行\n      const lines = pageContent.querySelectorAll('.text-line');\n      lines.forEach(line => {\n        const rect = line.getBoundingClientRect();\n        if (e.clientY >= rect.top && e.clientY <= rect.bottom) {\n          line.classList.add('reading-line');\n        }\n      });\n    });\n  };\n  \n  // 自动阅读引导\n  const startAutoReadGuide = () => {\n    if (autoReadIntervalRef.current) {\n      clearInterval(autoReadIntervalRef.current);\n    }\n    \n    // 创建阅读指示点\n    if (!autoReadGuideRef.current) {\n      const guide = document.createElement('div');\n      guide.className = 'auto-read-guide';\n      document.querySelector('.page-content').appendChild(guide);\n      autoReadGuideRef.current = guide;\n    }\n    \n    // 获取页面内所有段落\n    const paragraphs = document.querySelectorAll('.page-content p');\n    if (!paragraphs.length) return;\n    \n    let currentParagraphIndex = 0;\n    let currentCharIndex = 0;\n    \n    autoReadIntervalRef.current = setInterval(() => {\n      if (currentParagraphIndex >= paragraphs.length) {\n        clearInterval(autoReadIntervalRef.current);\n        return;\n      }\n      \n      const paragraph = paragraphs[currentParagraphIndex];\n      const text = paragraph.textContent;\n      \n      if (currentCharIndex >= text.length) {\n        currentParagraphIndex++;\n        currentCharIndex = 0;\n        return;\n      }\n      \n      // 计算当前字符位置\n      const range = document.createRange();\n      const textNode = paragraph.firstChild;\n      \n      if (textNode && textNode.nodeType === Node.TEXT_NODE) {\n        range.setStart(textNode, Math.min(currentCharIndex, textNode.length));\n        range.setStart(textNode, Math.min(currentCharIndex, textNode.length));\n        \n        const rect = range.getBoundingClientRect();\n        \n        // 更新指示点位置\n        if (autoReadGuideRef.current) {\n          const guide = autoReadGuideRef.current;\n          guide.style.left = `${rect.left}px`;\n          guide.style.top = `${rect.bottom + 5}px`;\n          \n          // 闪烁效果\n          guide.style.opacity = 1;\n          setTimeout(() => {\n            guide.style.opacity = 0.5;\n          }, 100);\n        }\n      }\n      \n      currentCharIndex += 1;\n    }, 200); // 每秒5个字符的速度\n  };\n  \n  // 处理阅读模式切换\n  const handleReadingModeChange = (mode) => {\n    setReadingMode(mode);\n    if (mode === 'follow-mouse') {\n      setTimeout(setupMouseFollowHighlight, 100);\n    }\n  };\n\n  useEffect(() => {\n    // 当阅读模式为follow-mouse时，设置鼠标跟随高亮\n    if (readingMode === 'follow-mouse' && content) {\n      setTimeout(setupMouseFollowHighlight, 100);\n    }\n  }, [readingMode, content]);\n\n  return (\n    <div className={`App ${isDarkMode ? 'dark' : 'light'}`}>\n      <div className=\"app-container\">\n        <header className=\"header\">\n          <h1>ADHD 阅读助手</h1>\n          <div className=\"controls\">\n            <button \n              className=\"upload-btn\"\n              onClick={() => document.getElementById('fileInput').click()}\n            >\n              选择文件\n            </button>\n            <input\n              id=\"fileInput\"\n              type=\"file\"\n              accept=\".pdf,.txt\"\n              style={{ display: 'none' }}\n              onChange={handleFileUpload}\n            />\n            <button className=\"mode-btn\">\n              切换明亮模式\n            </button>\n            \n            {/* 高亮颜色选择 */}\n            <div className=\"color-picker\">\n              <label>高亮颜色:</label>\n              <input \n                type=\"color\" \n                value={highlightColor}\n                onChange={(e) => setHighlightColor(e.target.value)}\n              />\n            </div>\n            \n            {/* 阅读模式选择 */}\n            <div className=\"mode-selector\">\n              <select \n                value={readingMode}\n                onChange={(e) => handleReadingModeChange(e.target.value)}\n              >\n                <option value=\"static\">高亮静息模式</option>\n                <option value=\"follow-mouse\">鼠标跟随高亮</option>\n                <option value=\"auto-guide\">自动阅读引导</option>\n              </select>\n            </div>\n            \n            {/* 词性选择 */}\n            <div className=\"pos-selector\">\n              <select\n                value={highlightPOS}\n                onChange={(e) => {\n                  const options = Array.from(e.target.selectedOptions, option => option.value);\n                  setHighlightPOS(options);\n                }}\n                multiple\n              >\n                <option value=\"noun\">名词</option>\n                <option value=\"verb\">动词</option>\n                <option value=\"adj\">形容词</option>\n              </select>\n            </div>\n          </div>\n        </header>\n        \n        <div className=\"reader-container\" ref={readerContainerRef}>\n          <button \n            className=\"page-btn prev\"\n            onClick={() => changePage(-1)}\n            disabled={currentPage <= 1}\n          >\n            ←\n          </button>\n\n          <div className=\"page-content\">\n            {!file && (\n              <div className=\"upload-hint\">\n                请上传文件开始阅读\n                <br />\n                支持的格式: PDF, TXT (最大100MB)\n              </div>\n            )}\n          </div>\n\n          <button \n            className=\"page-btn next\"\n            onClick={() => changePage(1)}\n            disabled={currentPage >= totalPages}\n          >\n            →\n          </button>\n        </div>\n\n        {file && (\n          <div className=\"page-info\">\n            第 {currentPage} 页 / 共 {totalPages} 页\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAO,KAAKC,QAAQ,MAAM,YAAY;AACtC,OAAO,KAAKC,WAAW,MAAM,2BAA2B;AACxD,SAASC,MAAM,QAAQ,QAAQ,CAAC,CAAC;AACjC,OAAO,qBAAqB;AAC5B,SAASC,KAAK,QAAQ,YAAY;;AAElC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAL,QAAQ,CAACM,mBAAmB,CAACC,SAAS,GAAG,2CAA2CP,QAAQ,CAACQ,OAAO,oBAAoB;;AAExH;AACA,MAAMC,gBAAgB,GAAIC,IAAI,IAAK;EACjC;EACA,MAAMC,WAAW,GAAG,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAE,aAAa;EACnD,IAAIC,eAAe,GAAGF,IAAI;EAE1BC,WAAW,CAACE,OAAO,CAACC,IAAI,IAAI;IAC1B,MAAMC,KAAK,GAAG,IAAIC,MAAM,CAACF,IAAI,EAAE,GAAG,CAAC;IACnCF,eAAe,GAAGA,eAAe,CAACK,OAAO,CAACF,KAAK,EAAE,2BAA2BD,IAAI,SAAS,CAAC;EAC5F,CAAC,CAAC;EAEF,OAAOF,eAAe;AACxB,CAAC;AAED,MAAMM,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACyB,KAAK,EAAEC,QAAQ,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC2B,WAAW,EAAEC,cAAc,CAAC,GAAG5B,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAAC6B,UAAU,EAAEC,aAAa,CAAC,GAAG9B,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAAC+B,QAAQ,EAAEC,WAAW,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACiC,OAAO,EAAEC,UAAU,CAAC,GAAGlC,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMmC,OAAO,GAAGlC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;EAC9B,MAAM,CAACmC,IAAI,EAAEC,OAAO,CAAC,GAAGrC,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACsC,WAAW,EAAEC,cAAc,CAAC,GAAGvC,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACwC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGzC,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAM,CAAC0C,WAAW,EAAEC,cAAc,CAAC,GAAG3C,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;EAC1D,MAAM,CAAC4C,cAAc,EAAEC,iBAAiB,CAAC,GAAG7C,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;EACjE,MAAM,CAAC8C,YAAY,EAAEC,eAAe,CAAC,GAAG/C,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;EAC5D,MAAM,CAACgD,eAAe,EAAEC,kBAAkB,CAAC,GAAGjD,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAMkD,kBAAkB,GAAGjD,MAAM,CAAC,IAAI,CAAC;EACvC,MAAMkD,gBAAgB,GAAGlD,MAAM,CAAC,IAAI,CAAC;EACrC,MAAMmD,mBAAmB,GAAGnD,MAAM,CAAC,IAAI,CAAC;EACxC,MAAM,CAACoD,OAAO,EAAEC,UAAU,CAAC,GAAGtD,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACuD,WAAW,EAAEC,cAAc,CAAC,GAAGxD,QAAQ,CAAC,IAAI,CAAC;;EAEpD;EACAE,SAAS,CAAC,MAAM;IACdC,QAAQ,CAACM,mBAAmB,CAACC,SAAS,GAAG,iDAAiDP,QAAQ,CAACQ,OAAO,oBAAoB;;IAE9H;IACA8C,QAAQ,CAACC,eAAe,CAACC,KAAK,CAACC,WAAW,CAAC,mBAAmB,EAAEhB,cAAc,CAAC;IAE/E,OAAO,MAAM;MACX;MACA,IAAIQ,mBAAmB,CAACS,OAAO,EAAE;QAC/BC,aAAa,CAACV,mBAAmB,CAACS,OAAO,CAAC;MAC5C;IACF,CAAC;EACH,CAAC,EAAE,CAACjB,cAAc,CAAC,CAAC;;EAEpB;EACA1C,SAAS,CAAC,MAAM;IACd,IAAIwC,WAAW,KAAK,YAAY,EAAE;MAChCqB,kBAAkB,CAAC,CAAC;IACtB,CAAC,MAAM,IAAIX,mBAAmB,CAACS,OAAO,EAAE;MACtCC,aAAa,CAACV,mBAAmB,CAACS,OAAO,CAAC;IAC5C;EACF,CAAC,EAAE,CAACnB,WAAW,EAAEM,eAAe,CAAC,CAAC;;EAElC;EACA,MAAMgB,aAAa,GAAG,MAAO5B,IAAI,IAAK;IACpC,IAAI;MACF,MAAM6B,OAAO,GAAGC,GAAG,CAACC,eAAe,CAAC/B,IAAI,CAAC;MACzC,MAAMgC,WAAW,GAAGjE,QAAQ,CAACkE,WAAW,CAACJ,OAAO,CAAC;MACjD,MAAMK,GAAG,GAAG,MAAMF,WAAW,CAACG,OAAO;MAErCf,cAAc,CAACc,GAAG,CAAC;MACnBxC,aAAa,CAACwC,GAAG,CAACE,QAAQ,CAAC;MAC3B5C,cAAc,CAAC,CAAC,CAAC;;MAEjB;MACA,MAAM6C,qBAAqB,CAACH,GAAG,EAAE,CAAC,CAAC;IACrC,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;MACjCE,KAAK,CAAC,iBAAiB,CAAC;IAC1B;EACF,CAAC;;EAED;EACA,MAAMC,YAAY,GAAIhE,IAAI,IAAK;IAC7B;IACA,MAAMiE,UAAU,GAAGjE,IAAI,CAACkE,KAAK,CAAC,MAAM,CAAC,CAClCC,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAClBC,MAAM,CAACF,CAAC,IAAIA,CAAC,CAACG,MAAM,GAAG,CAAC,CAAC;;IAE5B;IACA,OAAON,UAAU,CACdE,GAAG,CAACC,CAAC,IAAI,MAAMA,CAAC,MAAM,CAAC,CACvBI,IAAI,CAAC,EAAE,CAAC;EACb,CAAC;;EAED;EACA,MAAMZ,qBAAqB,GAAG,MAAAA,CAAOH,GAAG,EAAEgB,OAAO,KAAK;IACpD,IAAI;MACF,MAAMC,IAAI,GAAG,MAAMjB,GAAG,CAACkB,OAAO,CAACF,OAAO,CAAC;MACvC,MAAMG,WAAW,GAAG,MAAMF,IAAI,CAACG,cAAc,CAAC,CAAC;;MAE/C;MACA,MAAMC,SAAS,GAAGF,WAAW,CAACG,KAAK;;MAEnC;MACA,MAAMC,WAAW,GAAG,CAAC,GAAGF,SAAS,CAAC,CAACG,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QAChD;QACA,MAAMC,KAAK,GAAGD,CAAC,CAACE,SAAS,CAAC,CAAC,CAAC,GAAGH,CAAC,CAACG,SAAS,CAAC,CAAC,CAAC;QAC7C;QACA,IAAIC,IAAI,CAACC,GAAG,CAACH,KAAK,CAAC,GAAG,CAAC,EAAE;UACvB,OAAOF,CAAC,CAACG,SAAS,CAAC,CAAC,CAAC,GAAGF,CAAC,CAACE,SAAS,CAAC,CAAC,CAAC;QACxC;QACA,OAAOD,KAAK;MACd,CAAC,CAAC;;MAEF;MACA,IAAII,WAAW,GAAG,8CAA8C;MAChE,IAAIC,QAAQ,GAAG,IAAI;MACnB,IAAIC,WAAW,GAAG,EAAE;MAEpBV,WAAW,CAAC7E,OAAO,CAAC,CAACwF,IAAI,EAAEC,KAAK,KAAK;QACnC;QACA,MAAMC,QAAQ,GAAGP,IAAI,CAACQ,IAAI,CAACH,IAAI,CAACN,SAAS,CAAC,CAAC,CAAC,GAAGM,IAAI,CAACN,SAAS,CAAC,CAAC,CAAC,GAAGM,IAAI,CAACN,SAAS,CAAC,CAAC,CAAC,GAAGM,IAAI,CAACN,SAAS,CAAC,CAAC,CAAC,CAAC;QACzG,MAAMU,IAAI,GAAGJ,IAAI,CAACN,SAAS,CAAC,CAAC,CAAC;;QAE9B;QACA,MAAMW,WAAW,GAAGH,QAAQ,GAAG,GAAG,CAAC,CAAC;;QAEpC;QACA,IAAIJ,QAAQ,KAAK,IAAI,IAAIH,IAAI,CAACC,GAAG,CAACE,QAAQ,GAAGM,IAAI,CAAC,GAAG,CAAC,EAAE;UACtD,IAAIL,WAAW,EAAE;YACfF,WAAW,IAAI,0BAA0BE,WAAW,QAAQ;YAC5DA,WAAW,GAAG,EAAE;UAClB;UACAD,QAAQ,GAAGM,IAAI;QACjB;;QAEA;QACA,MAAME,UAAU,GAAGN,IAAI,CAACO,GAAG,CAAChC,KAAK,CAAC,EAAE,CAAC,CAACM,IAAI,CAAC,cAAc,CAAC;;QAE1D;QACA,IAAI2B,UAAU,GAAG,aAAa;QAC9B,IAAIN,QAAQ,GAAG,EAAE,EAAEM,UAAU,GAAG,YAAY,CAAC,KACxC,IAAIN,QAAQ,GAAG,EAAE,EAAEM,UAAU,GAAG,eAAe;;QAEpD;QACAT,WAAW,IAAI,gBAAgBS,UAAU,4BAA4BH,WAAW,QAAQC,UAAU,UAAU;MAC9G,CAAC,CAAC;;MAEF;MACA,IAAIP,WAAW,EAAE;QACfF,WAAW,IAAI,0BAA0BE,WAAW,QAAQ;MAC9D;MAEAF,WAAW,IAAI,QAAQ;MACvB/C,UAAU,CAAC+C,WAAW,CAAC;IACzB,CAAC,CAAC,OAAO3B,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,aAAa,EAAEA,KAAK,CAAC;MACnCE,KAAK,CAAC,WAAW,CAAC;IACpB;EACF,CAAC;;EAED;EACA,MAAMqC,aAAa,GAAG,MAAO7E,IAAI,IAAK;IACpC,IAAI;MACFF,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMrB,IAAI,GAAG,MAAMuB,IAAI,CAACvB,IAAI,CAAC,CAAC;MAC9B;MACA,MAAMqG,SAAS,GAAGrG,IAAI,CAACkE,KAAK,CAAC,MAAM,CAAC,CAACC,GAAG,CAACmC,SAAS,IAAI,CAAC;QACrDtG,IAAI,EAAEsG,SAAS;QACfC,CAAC,EAAE,EAAE;QACLC,CAAC,EAAE,EAAE;QACLX,QAAQ,EAAE,EAAE;QACZY,UAAU,EAAE;MACd,CAAC,CAAC,CAAC;MACH5F,QAAQ,CAACwF,SAAS,CAAC;MACnBpF,aAAa,CAACoF,SAAS,CAAC9B,MAAM,CAAC;MAC/BxD,cAAc,CAAC,CAAC,CAAC;MACjBM,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,OAAOwC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,UAAU,EAAEA,KAAK,CAAC;MAChCxC,UAAU,CAAC,KAAK,CAAC;MACjB0C,KAAK,CAAC,eAAe,CAAC;IACxB;EACF,CAAC;;EAED;EACA,MAAM2C,gBAAgB,GAAG,MAAOC,CAAC,IAAK;IACpC,MAAMpF,IAAI,GAAGoF,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC9B,IAAI,CAACtF,IAAI,EAAE;IAEX,IAAIA,IAAI,CAACuF,IAAI,KAAK,iBAAiB,EAAE;MACnC,MAAM3D,aAAa,CAAC5B,IAAI,CAAC;IAC3B,CAAC,MAAM,IAAIA,IAAI,CAACuF,IAAI,KAAK,YAAY,EAAE;MACrCV,aAAa,CAAC7E,IAAI,CAAC;IACrB,CAAC,MAAM;MACLwC,KAAK,CAAC,cAAc,CAAC;IACvB;EACF,CAAC;;EAED;EACA,MAAMgD,UAAU,GAAG,MAAOC,KAAK,IAAK;IAClC,MAAMC,OAAO,GAAGnG,WAAW,GAAGkG,KAAK;IACnC,IAAIC,OAAO,IAAI,CAAC,IAAIA,OAAO,IAAIjG,UAAU,IAAI0B,WAAW,EAAE;MACxD3B,cAAc,CAACkG,OAAO,CAAC;MACvB,MAAMrD,qBAAqB,CAAClB,WAAW,EAAEuE,OAAO,CAAC;IACnD;EACF,CAAC;;EAED;EACA,MAAMC,yBAAyB,GAAGA,CAAA,KAAM;IACtC,MAAMC,WAAW,GAAGvE,QAAQ,CAACwE,aAAa,CAAC,cAAc,CAAC;IAC1D,IAAI,CAACD,WAAW,EAAE;IAElBA,WAAW,CAACE,gBAAgB,CAAC,WAAW,EAAGV,CAAC,IAAK;MAC/C,IAAI9E,WAAW,KAAK,cAAc,EAAE;;MAEpC;MACA,MAAMyF,eAAe,GAAGH,WAAW,CAACI,gBAAgB,CAAC,eAAe,CAAC;MACrED,eAAe,CAACnH,OAAO,CAACqH,EAAE,IAAIA,EAAE,CAACC,SAAS,CAACC,MAAM,CAAC,cAAc,CAAC,CAAC;;MAElE;MACA,MAAMC,KAAK,GAAGR,WAAW,CAACI,gBAAgB,CAAC,YAAY,CAAC;MACxDI,KAAK,CAACxH,OAAO,CAACyH,IAAI,IAAI;QACpB,MAAMC,IAAI,GAAGD,IAAI,CAACE,qBAAqB,CAAC,CAAC;QACzC,IAAInB,CAAC,CAACoB,OAAO,IAAIF,IAAI,CAACG,GAAG,IAAIrB,CAAC,CAACoB,OAAO,IAAIF,IAAI,CAACI,MAAM,EAAE;UACrDL,IAAI,CAACH,SAAS,CAACS,GAAG,CAAC,cAAc,CAAC;QACpC;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMhF,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,IAAIX,mBAAmB,CAACS,OAAO,EAAE;MAC/BC,aAAa,CAACV,mBAAmB,CAACS,OAAO,CAAC;IAC5C;;IAEA;IACA,IAAI,CAACV,gBAAgB,CAACU,OAAO,EAAE;MAC7B,MAAMmF,KAAK,GAAGvF,QAAQ,CAACwF,aAAa,CAAC,KAAK,CAAC;MAC3CD,KAAK,CAACE,SAAS,GAAG,iBAAiB;MACnCzF,QAAQ,CAACwE,aAAa,CAAC,eAAe,CAAC,CAACkB,WAAW,CAACH,KAAK,CAAC;MAC1D7F,gBAAgB,CAACU,OAAO,GAAGmF,KAAK;IAClC;;IAEA;IACA,MAAMlE,UAAU,GAAGrB,QAAQ,CAAC2E,gBAAgB,CAAC,iBAAiB,CAAC;IAC/D,IAAI,CAACtD,UAAU,CAACM,MAAM,EAAE;IAExB,IAAIgE,qBAAqB,GAAG,CAAC;IAC7B,IAAIC,gBAAgB,GAAG,CAAC;IAExBjG,mBAAmB,CAACS,OAAO,GAAGyF,WAAW,CAAC,MAAM;MAC9C,IAAIF,qBAAqB,IAAItE,UAAU,CAACM,MAAM,EAAE;QAC9CtB,aAAa,CAACV,mBAAmB,CAACS,OAAO,CAAC;QAC1C;MACF;MAEA,MAAMsD,SAAS,GAAGrC,UAAU,CAACsE,qBAAqB,CAAC;MACnD,MAAMvI,IAAI,GAAGsG,SAAS,CAAC1B,WAAW;MAElC,IAAI4D,gBAAgB,IAAIxI,IAAI,CAACuE,MAAM,EAAE;QACnCgE,qBAAqB,EAAE;QACvBC,gBAAgB,GAAG,CAAC;QACpB;MACF;;MAEA;MACA,MAAME,KAAK,GAAG9F,QAAQ,CAAC+F,WAAW,CAAC,CAAC;MACpC,MAAMC,QAAQ,GAAGtC,SAAS,CAACuC,UAAU;MAErC,IAAID,QAAQ,IAAIA,QAAQ,CAACE,QAAQ,KAAKC,IAAI,CAACC,SAAS,EAAE;QACpDN,KAAK,CAACO,QAAQ,CAACL,QAAQ,EAAEtD,IAAI,CAAC4D,GAAG,CAACV,gBAAgB,EAAEI,QAAQ,CAACrE,MAAM,CAAC,CAAC;QACrEmE,KAAK,CAACO,QAAQ,CAACL,QAAQ,EAAEtD,IAAI,CAAC4D,GAAG,CAACV,gBAAgB,EAAEI,QAAQ,CAACrE,MAAM,CAAC,CAAC;QAErE,MAAMsD,IAAI,GAAGa,KAAK,CAACZ,qBAAqB,CAAC,CAAC;;QAE1C;QACA,IAAIxF,gBAAgB,CAACU,OAAO,EAAE;UAC5B,MAAMmF,KAAK,GAAG7F,gBAAgB,CAACU,OAAO;UACtCmF,KAAK,CAACrF,KAAK,CAACqG,IAAI,GAAG,GAAGtB,IAAI,CAACsB,IAAI,IAAI;UACnChB,KAAK,CAACrF,KAAK,CAACkF,GAAG,GAAG,GAAGH,IAAI,CAACI,MAAM,GAAG,CAAC,IAAI;;UAExC;UACAE,KAAK,CAACrF,KAAK,CAACsG,OAAO,GAAG,CAAC;UACvBC,UAAU,CAAC,MAAM;YACflB,KAAK,CAACrF,KAAK,CAACsG,OAAO,GAAG,GAAG;UAC3B,CAAC,EAAE,GAAG,CAAC;QACT;MACF;MAEAZ,gBAAgB,IAAI,CAAC;IACvB,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;EACX,CAAC;;EAED;EACA,MAAMc,uBAAuB,GAAIC,IAAI,IAAK;IACxCzH,cAAc,CAACyH,IAAI,CAAC;IACpB,IAAIA,IAAI,KAAK,cAAc,EAAE;MAC3BF,UAAU,CAACnC,yBAAyB,EAAE,GAAG,CAAC;IAC5C;EACF,CAAC;EAED7H,SAAS,CAAC,MAAM;IACd;IACA,IAAIwC,WAAW,KAAK,cAAc,IAAIW,OAAO,EAAE;MAC7C6G,UAAU,CAACnC,yBAAyB,EAAE,GAAG,CAAC;IAC5C;EACF,CAAC,EAAE,CAACrF,WAAW,EAAEW,OAAO,CAAC,CAAC;EAE1B,oBACE7C,OAAA;IAAK0I,SAAS,EAAE,OAAO3H,UAAU,GAAG,MAAM,GAAG,OAAO,EAAG;IAAA8I,QAAA,eACrD7J,OAAA;MAAK0I,SAAS,EAAC,eAAe;MAAAmB,QAAA,gBAC5B7J,OAAA;QAAQ0I,SAAS,EAAC,QAAQ;QAAAmB,QAAA,gBACxB7J,OAAA;UAAA6J,QAAA,EAAI;QAAS;UAAAtI,QAAA,EAAAuI,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClBhK,OAAA;UAAK0I,SAAS,EAAC,UAAU;UAAAmB,QAAA,gBACvB7J,OAAA;YACE0I,SAAS,EAAC,YAAY;YACtBuB,OAAO,EAAEA,CAAA,KAAMhH,QAAQ,CAACiH,cAAc,CAAC,WAAW,CAAC,CAACC,KAAK,CAAC,CAAE;YAAAN,QAAA,EAC7D;UAED;YAAAtI,QAAA,EAAAuI,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACThK,OAAA;YACEoK,EAAE,EAAC,WAAW;YACdjD,IAAI,EAAC,MAAM;YACXkD,MAAM,EAAC,WAAW;YAClBlH,KAAK,EAAE;cAAEmH,OAAO,EAAE;YAAO,CAAE;YAC3BC,QAAQ,EAAExD;UAAiB;YAAAxF,QAAA,EAAAuI,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5B,CAAC,eACFhK,OAAA;YAAQ0I,SAAS,EAAC,UAAU;YAAAmB,QAAA,EAAC;UAE7B;YAAAtI,QAAA,EAAAuI,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAGThK,OAAA;YAAK0I,SAAS,EAAC,cAAc;YAAAmB,QAAA,gBAC3B7J,OAAA;cAAA6J,QAAA,EAAO;YAAK;cAAAtI,QAAA,EAAAuI,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACpBhK,OAAA;cACEmH,IAAI,EAAC,OAAO;cACZqD,KAAK,EAAEpI,cAAe;cACtBmI,QAAQ,EAAGvD,CAAC,IAAK3E,iBAAiB,CAAC2E,CAAC,CAACC,MAAM,CAACuD,KAAK;YAAE;cAAAjJ,QAAA,EAAAuI,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACpD,CAAC;UAAA;YAAAzI,QAAA,EAAAuI,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eAGNhK,OAAA;YAAK0I,SAAS,EAAC,eAAe;YAAAmB,QAAA,eAC5B7J,OAAA;cACEwK,KAAK,EAAEtI,WAAY;cACnBqI,QAAQ,EAAGvD,CAAC,IAAK2C,uBAAuB,CAAC3C,CAAC,CAACC,MAAM,CAACuD,KAAK,CAAE;cAAAX,QAAA,gBAEzD7J,OAAA;gBAAQwK,KAAK,EAAC,QAAQ;gBAAAX,QAAA,EAAC;cAAM;gBAAAtI,QAAA,EAAAuI,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACtChK,OAAA;gBAAQwK,KAAK,EAAC,cAAc;gBAAAX,QAAA,EAAC;cAAM;gBAAAtI,QAAA,EAAAuI,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAC5ChK,OAAA;gBAAQwK,KAAK,EAAC,YAAY;gBAAAX,QAAA,EAAC;cAAM;gBAAAtI,QAAA,EAAAuI,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAzI,QAAA,EAAAuI,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACpC;UAAC;YAAAzI,QAAA,EAAAuI,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,eAGNhK,OAAA;YAAK0I,SAAS,EAAC,cAAc;YAAAmB,QAAA,eAC3B7J,OAAA;cACEwK,KAAK,EAAElI,YAAa;cACpBiI,QAAQ,EAAGvD,CAAC,IAAK;gBACf,MAAMyD,OAAO,GAAGC,KAAK,CAACC,IAAI,CAAC3D,CAAC,CAACC,MAAM,CAAC2D,eAAe,EAAEC,MAAM,IAAIA,MAAM,CAACL,KAAK,CAAC;gBAC5EjI,eAAe,CAACkI,OAAO,CAAC;cAC1B,CAAE;cACFK,QAAQ;cAAAjB,QAAA,gBAER7J,OAAA;gBAAQwK,KAAK,EAAC,MAAM;gBAAAX,QAAA,EAAC;cAAE;gBAAAtI,QAAA,EAAAuI,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAChChK,OAAA;gBAAQwK,KAAK,EAAC,MAAM;gBAAAX,QAAA,EAAC;cAAE;gBAAAtI,QAAA,EAAAuI,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAChChK,OAAA;gBAAQwK,KAAK,EAAC,KAAK;gBAAAX,QAAA,EAAC;cAAG;gBAAAtI,QAAA,EAAAuI,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAzI,QAAA,EAAAuI,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC1B;UAAC;YAAAzI,QAAA,EAAAuI,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAAzI,QAAA,EAAAuI,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAzI,QAAA,EAAAuI,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eAEThK,OAAA;QAAK0I,SAAS,EAAC,kBAAkB;QAACqC,GAAG,EAAErI,kBAAmB;QAAAmH,QAAA,gBACxD7J,OAAA;UACE0I,SAAS,EAAC,eAAe;UACzBuB,OAAO,EAAEA,CAAA,KAAM7C,UAAU,CAAC,CAAC,CAAC,CAAE;UAC9B4D,QAAQ,EAAE7J,WAAW,IAAI,CAAE;UAAA0I,QAAA,EAC5B;QAED;UAAAtI,QAAA,EAAAuI,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAEThK,OAAA;UAAK0I,SAAS,EAAC,cAAc;UAAAmB,QAAA,EAC1B,CAACjI,IAAI,iBACJ5B,OAAA;YAAK0I,SAAS,EAAC,aAAa;YAAAmB,QAAA,GAAC,wDAE3B,eAAA7J,OAAA;cAAAuB,QAAA,EAAAuI,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,gEAER;UAAA;YAAAzI,QAAA,EAAAuI,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK;QACN;UAAAzI,QAAA,EAAAuI,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eAENhK,OAAA;UACE0I,SAAS,EAAC,eAAe;UACzBuB,OAAO,EAAEA,CAAA,KAAM7C,UAAU,CAAC,CAAC,CAAE;UAC7B4D,QAAQ,EAAE7J,WAAW,IAAIE,UAAW;UAAAwI,QAAA,EACrC;QAED;UAAAtI,QAAA,EAAAuI,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAzI,QAAA,EAAAuI,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,EAELpI,IAAI,iBACH5B,OAAA;QAAK0I,SAAS,EAAC,WAAW;QAAAmB,QAAA,GAAC,SACvB,EAAC1I,WAAW,EAAC,mBAAO,EAACE,UAAU,EAAC,SACpC;MAAA;QAAAE,QAAA,EAAAuI,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CACN;IAAA;MAAAzI,QAAA,EAAAuI,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAzI,QAAA,EAAAuI,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAClJ,EAAA,CAzYID,GAAG;AAAAoK,EAAA,GAAHpK,GAAG;AA2YT,eAAeA,GAAG;AAAC,IAAAoK,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}