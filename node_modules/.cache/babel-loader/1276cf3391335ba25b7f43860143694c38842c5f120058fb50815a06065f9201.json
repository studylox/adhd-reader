{"ast":null,"code":"var _jsxFileName = \"D:\\\\adhd-read-helper\\\\src\\\\components\\\\Reader.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Reader = ({\n  content,\n  isDarkMode\n}) => {\n  _s();\n  var _pages$currentPage;\n  const [readingMode, setReadingMode] = useState('highlight');\n  const [autoReadingEnabled, setAutoReadingEnabled] = useState(false);\n  const [currentPage, setCurrentPage] = useState(0);\n  const [currentSentenceIndex, setCurrentSentenceIndex] = useState(0);\n  const [pages, setPages] = useState([]);\n  const contentRef = useRef(null);\n\n  // 当content改变时，处理文本分页\n  useEffect(() => {\n    if (content) {\n      // 将文本按段落分割\n      const paragraphs = content.split(/\\n\\s*\\n/).filter(p => p.trim());\n\n      // 将段落组合成页面（这里简单处理，每页3个段落）\n      const pagesArray = [];\n      for (let i = 0; i < paragraphs.length; i += 3) {\n        pagesArray.push(paragraphs.slice(i, i + 3).join('\\n\\n'));\n      }\n      setPages(pagesArray);\n      setCurrentPage(0); // 重置到第一页\n      console.log('内容已分页:', pagesArray.length, '页'); // 调试用\n    }\n  }, [content]);\n\n  // 将当前页面的文本分割成句子\n  const sentences = ((_pages$currentPage = pages[currentPage]) === null || _pages$currentPage === void 0 ? void 0 : _pages$currentPage.split(/(?<=\\.|\\!|\\?)\\s+/)) || [];\n\n  // 自动阅读功能\n  useEffect(() => {\n    if (readingMode === 'dynamic' && autoReadingEnabled) {\n      const timer = setInterval(() => {\n        setCurrentSentenceIndex(prev => prev < sentences.length - 1 ? prev + 1 : prev);\n      }, 2000);\n      return () => clearInterval(timer);\n    }\n  }, [autoReadingEnabled, readingMode, sentences]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `reader-container ${isDarkMode ? 'dark' : 'light'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reader-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setReadingMode('highlight'),\n        children: readingMode === 'highlight' ? '✓ 静息高亮模式' : '静息高亮模式'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setReadingMode('dynamic'),\n        children: readingMode === 'dynamic' ? '✓ 动态阅读模式' : '动态阅读模式'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), readingMode === 'dynamic' && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setAutoReadingEnabled(!autoReadingEnabled),\n        children: autoReadingEnabled ? '关闭自动阅读' : '开启自动阅读'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: contentRef,\n      className: \"reader-content\",\n      children: pages.length > 0 ? readingMode === 'highlight' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-text\",\n        children: pages[currentPage].split('\\n').map((paragraph, idx) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: paragraph.trim()\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-text\",\n        children: sentences.map((sentence, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `sentence ${autoReadingEnabled && index === currentSentenceIndex ? 'active' : index < currentSentenceIndex ? 'read' : 'unread'}`,\n          children: [sentence, ' ']\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-content\",\n        children: \"\\u6B63\\u5728\\u52A0\\u8F7D\\u5185\\u5BB9...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), pages.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-navigation\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentPage(prev => Math.max(0, prev - 1)),\n        disabled: currentPage === 0,\n        children: \"\\u4E0A\\u4E00\\u9875\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"page-info\",\n        children: [\"\\u7B2C \", currentPage + 1, \" \\u9875 / \\u5171 \", pages.length, \" \\u9875\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentPage(prev => Math.min(pages.length - 1, prev + 1)),\n        disabled: currentPage === pages.length - 1,\n        children: \"\\u4E0B\\u4E00\\u9875\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(Reader, \"ciXmn7UKzw/WFBapHAH91Sn1jqE=\");\n_c = Reader;\nexport default Reader;\nvar _c;\n$RefreshReg$(_c, \"Reader\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Reader","content","isDarkMode","_s","_pages$currentPage","readingMode","setReadingMode","autoReadingEnabled","setAutoReadingEnabled","currentPage","setCurrentPage","currentSentenceIndex","setCurrentSentenceIndex","pages","setPages","contentRef","paragraphs","split","filter","p","trim","pagesArray","i","length","push","slice","join","console","log","sentences","timer","setInterval","prev","clearInterval","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","map","paragraph","idx","sentence","index","Math","max","disabled","min","_c","$RefreshReg$"],"sources":["D:/adhd-read-helper/src/components/Reader.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\n\r\nconst Reader = ({ content, isDarkMode }) => {\r\n  const [readingMode, setReadingMode] = useState('highlight');\r\n  const [autoReadingEnabled, setAutoReadingEnabled] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  const [currentSentenceIndex, setCurrentSentenceIndex] = useState(0);\r\n  const [pages, setPages] = useState([]);\r\n  const contentRef = useRef(null);\r\n\r\n  // 当content改变时，处理文本分页\r\n  useEffect(() => {\r\n    if (content) {\r\n      // 将文本按段落分割\r\n      const paragraphs = content.split(/\\n\\s*\\n/).filter(p => p.trim());\r\n      \r\n      // 将段落组合成页面（这里简单处理，每页3个段落）\r\n      const pagesArray = [];\r\n      for (let i = 0; i < paragraphs.length; i += 3) {\r\n        pagesArray.push(paragraphs.slice(i, i + 3).join('\\n\\n'));\r\n      }\r\n      \r\n      setPages(pagesArray);\r\n      setCurrentPage(0); // 重置到第一页\r\n      console.log('内容已分页:', pagesArray.length, '页'); // 调试用\r\n    }\r\n  }, [content]);\r\n\r\n  // 将当前页面的文本分割成句子\r\n  const sentences = pages[currentPage]?.split(/(?<=\\.|\\!|\\?)\\s+/) || [];\r\n\r\n  // 自动阅读功能\r\n  useEffect(() => {\r\n    if (readingMode === 'dynamic' && autoReadingEnabled) {\r\n      const timer = setInterval(() => {\r\n        setCurrentSentenceIndex(prev => \r\n          prev < sentences.length - 1 ? prev + 1 : prev\r\n        );\r\n      }, 2000);\r\n\r\n      return () => clearInterval(timer);\r\n    }\r\n  }, [autoReadingEnabled, readingMode, sentences]);\r\n\r\n  return (\r\n    <div className={`reader-container ${isDarkMode ? 'dark' : 'light'}`}>\r\n      <div className=\"reader-controls\">\r\n        <button onClick={() => setReadingMode('highlight')}>\r\n          {readingMode === 'highlight' ? '✓ 静息高亮模式' : '静息高亮模式'}\r\n        </button>\r\n        <button onClick={() => setReadingMode('dynamic')}>\r\n          {readingMode === 'dynamic' ? '✓ 动态阅读模式' : '动态阅读模式'}\r\n        </button>\r\n        {readingMode === 'dynamic' && (\r\n          <button onClick={() => setAutoReadingEnabled(!autoReadingEnabled)}>\r\n            {autoReadingEnabled ? '关闭自动阅读' : '开启自动阅读'}\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      <div \r\n        ref={contentRef}\r\n        className=\"reader-content\"\r\n      >\r\n        {pages.length > 0 ? (\r\n          readingMode === 'highlight' ? (\r\n            <div className=\"content-text\">\r\n              {pages[currentPage].split('\\n').map((paragraph, idx) => (\r\n                <p key={idx}>{paragraph.trim()}</p>\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            <div className=\"content-text\">\r\n              {sentences.map((sentence, index) => (\r\n                <span\r\n                  key={index}\r\n                  className={`sentence ${\r\n                    autoReadingEnabled && index === currentSentenceIndex\r\n                      ? 'active'\r\n                      : index < currentSentenceIndex\r\n                      ? 'read'\r\n                      : 'unread'\r\n                  }`}\r\n                >\r\n                  {sentence}{' '}\r\n                </span>\r\n              ))}\r\n            </div>\r\n          )\r\n        ) : (\r\n          <div className=\"no-content\">正在加载内容...</div>\r\n        )}\r\n      </div>\r\n\r\n      {pages.length > 0 && (\r\n        <div className=\"page-navigation\">\r\n          <button \r\n            onClick={() => setCurrentPage(prev => Math.max(0, prev - 1))}\r\n            disabled={currentPage === 0}\r\n          >\r\n            上一页\r\n          </button>\r\n          <span className=\"page-info\">\r\n            第 {currentPage + 1} 页 / 共 {pages.length} 页\r\n          </span>\r\n          <button \r\n            onClick={() => setCurrentPage(prev => \r\n              Math.min(pages.length - 1, prev + 1)\r\n            )}\r\n            disabled={currentPage === pages.length - 1}\r\n          >\r\n            下一页\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Reader; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}