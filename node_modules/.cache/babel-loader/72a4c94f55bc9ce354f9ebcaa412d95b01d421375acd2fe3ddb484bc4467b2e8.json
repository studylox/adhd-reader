{"ast":null,"code":"var _jsxFileName = \"D:\\\\adhd-read-helper\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport * as pdfjsLib from 'pdfjs-dist';\nimport * as pdfjsViewer from 'pdfjs-dist/web/pdf_viewer';\nimport './styles/Reader.css';\nimport { pdfjs } from 'pdfjs-dist';\n\n// 设置 PDF.js worker\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\npdfjsLib.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjsLib.version}/pdf.worker.min.js`;\nfunction App() {\n  _s();\n  var _pages;\n  // 状态定义\n  const [isDarkMode, setIsDarkMode] = useState(true);\n  const [pages, setPages] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const [fileName, setFileName] = useState('');\n  const [loading, setLoading] = useState(false);\n  const fileRef = useRef(null); // 添加文件引用\n\n  // 处理PDF文件\n  const handlePdfFile = async file => {\n    try {\n      const fileReader = new FileReader();\n      fileReader.onload = async function () {\n        const typedarray = new Uint8Array(this.result);\n\n        // 加载文档\n        const loadingTask = pdfjsLib.getDocument(typedarray);\n        const pdf = await loadingTask.promise;\n        console.log('PDF loaded'); // 调试日志\n\n        // 获取第一页\n        const page = await pdf.getPage(1);\n        console.log('Page loaded'); // 调试日志\n\n        // 设置视口\n        const viewport = page.getViewport({\n          scale: 1.5\n        });\n\n        // 准备canvas\n        const canvas = document.createElement('canvas');\n        const context = canvas.getContext('2d');\n        canvas.height = viewport.height;\n        canvas.width = viewport.width;\n\n        // 清除旧内容\n        const pageContainer = document.querySelector('.page-content');\n        if (pageContainer) {\n          pageContainer.innerHTML = '';\n          pageContainer.style.position = 'relative';\n          pageContainer.style.width = `${viewport.width}px`;\n          pageContainer.style.height = `${viewport.height}px`;\n          pageContainer.appendChild(canvas);\n        }\n        console.log('Starting render'); // 调试日志\n\n        // 渲染PDF页面\n        try {\n          await page.render({\n            canvasContext: context,\n            viewport: viewport\n          }).promise;\n          console.log('Render complete'); // 调试日志\n\n          // 获取文本内容\n          const textContent = await page.getTextContent();\n          console.log('Text content loaded', textContent); // 调试日志\n\n          // 创建文本层\n          const textLayerDiv = document.createElement('div');\n          textLayerDiv.className = 'textLayer';\n          textLayerDiv.style.width = `${viewport.width}px`;\n          textLayerDiv.style.height = `${viewport.height}px`;\n          pageContainer.appendChild(textLayerDiv);\n\n          // 渲染文本\n          const renderTextLayer = pdfjsLib.renderTextLayer({\n            textContent: textContent,\n            container: textLayerDiv,\n            viewport: viewport,\n            textDivs: []\n          });\n          await renderTextLayer.promise;\n          console.log('Text layer rendered'); // 调试日志\n\n          // 应用字间距\n          const textElements = textLayerDiv.querySelectorAll('span');\n          textElements.forEach(span => {\n            span.style.letterSpacing = '2em';\n            span.style.color = '#000';\n          });\n        } catch (renderError) {\n          console.error('Render error:', renderError);\n        }\n      };\n      fileReader.readAsArrayBuffer(file);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  // 处理TXT文件\n  const handleTxtFile = async file => {\n    try {\n      setLoading(true);\n      const text = await file.text();\n      // 将文本分页处理\n      const pageTexts = text.split('\\n\\n').map(paragraph => [{\n        text: paragraph,\n        x: 40,\n        y: 40,\n        fontSize: 16,\n        fontFamily: 'serif'\n      }]);\n      setPages(pageTexts);\n      setTotalPages(pageTexts.length);\n      setCurrentPage(1);\n      setLoading(false);\n    } catch (error) {\n      console.error('TXT处理错误:', error);\n      setLoading(false);\n      alert('TXT文件处理失败，请重试');\n    }\n  };\n\n  // 文件上传处理\n  const handleFileUpload = async event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    if (file.size > 100 * 1024 * 1024) {\n      alert('文件大小不能超过100MB');\n      return;\n    }\n    setFileName(file.name);\n    setPages([]); // 清空现有页面\n\n    if (file.type === 'application/pdf') {\n      await handlePdfFile(file);\n    } else if (file.type === 'text/plain' || file.name.endsWith('.txt')) {\n      await handleTxtFile(file);\n    }\n  };\n\n  // 加载指定页面\n  const loadPage = async pageNum => {\n    if (!fileRef.current) return;\n    try {\n      setLoading(true);\n      const fileArrayBuffer = await fileRef.current.arrayBuffer();\n      const pdf = await pdfjsLib.getDocument({\n        data: fileArrayBuffer\n      }).promise;\n      const page = await pdf.getPage(pageNum);\n      const viewport = page.getViewport({\n        scale: 1.0\n      });\n      const textContent = await page.getTextContent();\n      const pageText = textContent.items.map(item => ({\n        text: item.str,\n        x: item.transform[4],\n        y: viewport.height - item.transform[5],\n        fontSize: Math.sqrt(item.transform[0] * item.transform[0] + item.transform[1] * item.transform[1]),\n        fontFamily: item.fontName || 'serif'\n      }));\n      setPages(prev => {\n        const newPages = [...prev];\n        newPages[pageNum - 1] = {\n          content: pageText,\n          width: viewport.width,\n          height: viewport.height\n        };\n        return newPages;\n      });\n      setLoading(false);\n    } catch (error) {\n      console.error('页面加载错误:', error);\n      setLoading(false);\n    }\n  };\n\n  // 处理翻页\n  const handlePageChange = direction => {\n    const newPage = direction === 'next' ? Math.min(currentPage + 1, totalPages) : Math.max(currentPage - 1, 1);\n    setCurrentPage(newPage);\n    if (!pages[newPage - 1]) {\n      loadPage(newPage);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `App ${isDarkMode ? 'dark' : 'light'}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"app-title\",\n        children: \"ADHD \\u9605\\u8BFB\\u52A9\\u624B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".txt,.pdf\",\n          onChange: handleFileUpload,\n          id: \"file-upload\",\n          className: \"file-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file-upload\",\n          className: \"control-btn\",\n          children: \"\\u9009\\u62E9\\u6587\\u4EF6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), fileName && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"file-info\",\n          children: [\"\\u5F53\\u524D\\u6587\\u4EF6: \", fileName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"control-btn\",\n          onClick: () => setIsDarkMode(prev => !prev),\n          children: [\"\\u5207\\u6362\", isDarkMode ? '明亮' : '暗黑', \"\\u6A21\\u5F0F\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reader-container\",\n        children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"\\u6B63\\u5728\\u52A0\\u8F7D\\u5185\\u5BB9\\uFF0C\\u8BF7\\u7A0D\\u5019...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this) : pages.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"book-view\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"page-btn prev\",\n            onClick: () => handlePageChange('prev'),\n            disabled: currentPage === 1,\n            children: \"\\u2039\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"page-content\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"page-layout\",\n              children: (_pages = pages[currentPage - 1]) === null || _pages === void 0 ? void 0 : _pages.content.map((item, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  position: 'absolute',\n                  left: `${item.x}px`,\n                  top: `${item.y}px`,\n                  fontSize: `${item.fontSize}px`,\n                  fontFamily: item.fontFamily,\n                  letterSpacing: `${item.letterSpacing}px`,\n                  whiteSpace: 'pre',\n                  color: isDarkMode ? '#e0e0e0' : '#2c2c2c',\n                  textRendering: 'optimizeLegibility',\n                  WebkitFontSmoothing: 'antialiased',\n                  MozOsxFontSmoothing: 'grayscale'\n                },\n                children: item.text\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"page-btn next\",\n            onClick: () => handlePageChange('next'),\n            disabled: currentPage === totalPages,\n            children: \"\\u203A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"page-number\",\n            children: [currentPage, \" / \", totalPages]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-prompt\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u8BF7\\u4E0A\\u4F20\\u6587\\u4EF6\\u5F00\\u59CB\\u9605\\u8BFB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"supported-formats\",\n            children: \"\\u652F\\u6301\\u7684\\u683C\\u5F0F: PDF, TXT (\\u6700\\u5927100MB)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"33W9fwd8fBofazOqC/ExBA5ozao=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","pdfjsLib","pdfjsViewer","pdfjs","jsxDEV","_jsxDEV","GlobalWorkerOptions","workerSrc","version","App","_s","_pages","isDarkMode","setIsDarkMode","pages","setPages","currentPage","setCurrentPage","totalPages","setTotalPages","fileName","setFileName","loading","setLoading","fileRef","handlePdfFile","file","fileReader","FileReader","onload","typedarray","Uint8Array","result","loadingTask","getDocument","pdf","promise","console","log","page","getPage","viewport","getViewport","scale","canvas","document","createElement","context","getContext","height","width","pageContainer","querySelector","innerHTML","style","position","appendChild","render","canvasContext","textContent","getTextContent","textLayerDiv","className","renderTextLayer","container","textDivs","textElements","querySelectorAll","forEach","span","letterSpacing","color","renderError","error","readAsArrayBuffer","handleTxtFile","text","pageTexts","split","map","paragraph","x","y","fontSize","fontFamily","length","alert","handleFileUpload","event","target","files","size","name","type","endsWith","loadPage","pageNum","current","fileArrayBuffer","arrayBuffer","data","pageText","items","item","str","transform","Math","sqrt","fontName","prev","newPages","content","handlePageChange","direction","newPage","min","max","children","_jsxFileName","lineNumber","columnNumber","accept","onChange","id","htmlFor","onClick","disabled","index","left","top","whiteSpace","textRendering","WebkitFontSmoothing","MozOsxFontSmoothing","_c","$RefreshReg$"],"sources":["D:/adhd-read-helper/src/App.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport * as pdfjsLib from 'pdfjs-dist';\r\nimport * as pdfjsViewer from 'pdfjs-dist/web/pdf_viewer';\r\nimport './styles/Reader.css';\r\nimport { pdfjs } from 'pdfjs-dist';\r\n\r\n// 设置 PDF.js worker\r\npdfjsLib.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjsLib.version}/pdf.worker.min.js`;\r\n\r\nfunction App() {\r\n  // 状态定义\r\n  const [isDarkMode, setIsDarkMode] = useState(true);\r\n  const [pages, setPages] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const [fileName, setFileName] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const fileRef = useRef(null); // 添加文件引用\r\n\r\n  // 处理PDF文件\r\n  const handlePdfFile = async (file) => {\r\n    try {\r\n      const fileReader = new FileReader();\r\n      fileReader.onload = async function() {\r\n        const typedarray = new Uint8Array(this.result);\r\n        \r\n        // 加载文档\r\n        const loadingTask = pdfjsLib.getDocument(typedarray);\r\n        const pdf = await loadingTask.promise;\r\n        console.log('PDF loaded'); // 调试日志\r\n        \r\n        // 获取第一页\r\n        const page = await pdf.getPage(1);\r\n        console.log('Page loaded'); // 调试日志\r\n        \r\n        // 设置视口\r\n        const viewport = page.getViewport({ scale: 1.5 });\r\n        \r\n        // 准备canvas\r\n        const canvas = document.createElement('canvas');\r\n        const context = canvas.getContext('2d');\r\n        canvas.height = viewport.height;\r\n        canvas.width = viewport.width;\r\n        \r\n        // 清除旧内容\r\n        const pageContainer = document.querySelector('.page-content');\r\n        if (pageContainer) {\r\n          pageContainer.innerHTML = '';\r\n          pageContainer.style.position = 'relative';\r\n          pageContainer.style.width = `${viewport.width}px`;\r\n          pageContainer.style.height = `${viewport.height}px`;\r\n          pageContainer.appendChild(canvas);\r\n        }\r\n        \r\n        console.log('Starting render'); // 调试日志\r\n        \r\n        // 渲染PDF页面\r\n        try {\r\n          await page.render({\r\n            canvasContext: context,\r\n            viewport: viewport\r\n          }).promise;\r\n          \r\n          console.log('Render complete'); // 调试日志\r\n          \r\n          // 获取文本内容\r\n          const textContent = await page.getTextContent();\r\n          console.log('Text content loaded', textContent); // 调试日志\r\n          \r\n          // 创建文本层\r\n          const textLayerDiv = document.createElement('div');\r\n          textLayerDiv.className = 'textLayer';\r\n          textLayerDiv.style.width = `${viewport.width}px`;\r\n          textLayerDiv.style.height = `${viewport.height}px`;\r\n          pageContainer.appendChild(textLayerDiv);\r\n          \r\n          // 渲染文本\r\n          const renderTextLayer = pdfjsLib.renderTextLayer({\r\n            textContent: textContent,\r\n            container: textLayerDiv,\r\n            viewport: viewport,\r\n            textDivs: []\r\n          });\r\n          \r\n          await renderTextLayer.promise;\r\n          console.log('Text layer rendered'); // 调试日志\r\n          \r\n          // 应用字间距\r\n          const textElements = textLayerDiv.querySelectorAll('span');\r\n          textElements.forEach(span => {\r\n            span.style.letterSpacing = '2em';\r\n            span.style.color = '#000';\r\n          });\r\n          \r\n        } catch (renderError) {\r\n          console.error('Render error:', renderError);\r\n        }\r\n      };\r\n      \r\n      fileReader.readAsArrayBuffer(file);\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    }\r\n  };\r\n\r\n  // 处理TXT文件\r\n  const handleTxtFile = async (file) => {\r\n    try {\r\n      setLoading(true);\r\n      const text = await file.text();\r\n      // 将文本分页处理\r\n      const pageTexts = text.split('\\n\\n').map(paragraph => [{\r\n        text: paragraph,\r\n        x: 40,\r\n        y: 40,\r\n        fontSize: 16,\r\n        fontFamily: 'serif'\r\n      }]);\r\n      setPages(pageTexts);\r\n      setTotalPages(pageTexts.length);\r\n      setCurrentPage(1);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('TXT处理错误:', error);\r\n      setLoading(false);\r\n      alert('TXT文件处理失败，请重试');\r\n    }\r\n  };\r\n\r\n  // 文件上传处理\r\n  const handleFileUpload = async (event) => {\r\n    const file = event.target.files[0];\r\n    if (!file) return;\r\n\r\n    if (file.size > 100 * 1024 * 1024) {\r\n      alert('文件大小不能超过100MB');\r\n      return;\r\n    }\r\n\r\n    setFileName(file.name);\r\n    setPages([]); // 清空现有页面\r\n\r\n    if (file.type === 'application/pdf') {\r\n      await handlePdfFile(file);\r\n    } else if (file.type === 'text/plain' || file.name.endsWith('.txt')) {\r\n      await handleTxtFile(file);\r\n    }\r\n  };\r\n\r\n  // 加载指定页面\r\n  const loadPage = async (pageNum) => {\r\n    if (!fileRef.current) return;\r\n\r\n    try {\r\n      setLoading(true);\r\n      const fileArrayBuffer = await fileRef.current.arrayBuffer();\r\n      const pdf = await pdfjsLib.getDocument({\r\n        data: fileArrayBuffer,\r\n      }).promise;\r\n\r\n      const page = await pdf.getPage(pageNum);\r\n      const viewport = page.getViewport({ scale: 1.0 });\r\n      const textContent = await page.getTextContent();\r\n\r\n      const pageText = textContent.items.map(item => ({\r\n        text: item.str,\r\n        x: item.transform[4],\r\n        y: viewport.height - item.transform[5],\r\n        fontSize: Math.sqrt((item.transform[0] * item.transform[0]) + (item.transform[1] * item.transform[1])),\r\n        fontFamily: item.fontName || 'serif'\r\n      }));\r\n\r\n      setPages(prev => {\r\n        const newPages = [...prev];\r\n        newPages[pageNum - 1] = { content: pageText, width: viewport.width, height: viewport.height };\r\n        return newPages;\r\n      });\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('页面加载错误:', error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 处理翻页\r\n  const handlePageChange = (direction) => {\r\n    const newPage = direction === 'next' \r\n      ? Math.min(currentPage + 1, totalPages)\r\n      : Math.max(currentPage - 1, 1);\r\n    \r\n    setCurrentPage(newPage);\r\n    if (!pages[newPage - 1]) {\r\n      loadPage(newPage);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`App ${isDarkMode ? 'dark' : 'light'}`}>\r\n      <div className=\"app-container\">\r\n        <h1 className=\"app-title\">ADHD 阅读助手</h1>\r\n        \r\n        <div className=\"control-panel\">\r\n          <input\r\n            type=\"file\"\r\n            accept=\".txt,.pdf\"\r\n            onChange={handleFileUpload}\r\n            id=\"file-upload\"\r\n            className=\"file-input\"\r\n          />\r\n          <label htmlFor=\"file-upload\" className=\"control-btn\">\r\n            选择文件\r\n          </label>\r\n          \r\n          {fileName && (\r\n            <span className=\"file-info\">\r\n              当前文件: {fileName}\r\n            </span>\r\n          )}\r\n          \r\n          <button \r\n            className=\"control-btn\"\r\n            onClick={() => setIsDarkMode(prev => !prev)}\r\n          >\r\n            切换{isDarkMode ? '明亮' : '暗黑'}模式\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"reader-container\">\r\n          {loading ? (\r\n            <div className=\"loading\">\r\n              <div className=\"loading-spinner\"></div>\r\n              <div>正在加载内容，请稍候...</div>\r\n            </div>\r\n          ) : pages.length > 0 ? (\r\n            <div className=\"book-view\">\r\n              <button \r\n                className=\"page-btn prev\" \r\n                onClick={() => handlePageChange('prev')}\r\n                disabled={currentPage === 1}\r\n              >\r\n                ‹\r\n              </button>\r\n              \r\n              <div className=\"page-content\">\r\n                <div className=\"page-layout\">\r\n                  {pages[currentPage - 1]?.content.map((item, index) => (\r\n                    <span\r\n                      key={index}\r\n                      style={{\r\n                        position: 'absolute',\r\n                        left: `${item.x}px`,\r\n                        top: `${item.y}px`,\r\n                        fontSize: `${item.fontSize}px`,\r\n                        fontFamily: item.fontFamily,\r\n                        letterSpacing: `${item.letterSpacing}px`,\r\n                        whiteSpace: 'pre',\r\n                        color: isDarkMode ? '#e0e0e0' : '#2c2c2c',\r\n                        textRendering: 'optimizeLegibility',\r\n                        WebkitFontSmoothing: 'antialiased',\r\n                        MozOsxFontSmoothing: 'grayscale',\r\n                      }}\r\n                    >\r\n                      {item.text}\r\n                    </span>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n\r\n              <button \r\n                className=\"page-btn next\" \r\n                onClick={() => handlePageChange('next')}\r\n                disabled={currentPage === totalPages}\r\n              >\r\n                ›\r\n              </button>\r\n\r\n              <div className=\"page-number\">\r\n                {currentPage} / {totalPages}\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"upload-prompt\">\r\n              <p>请上传文件开始阅读</p>\r\n              <p className=\"supported-formats\">支持的格式: PDF, TXT (最大100MB)</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}