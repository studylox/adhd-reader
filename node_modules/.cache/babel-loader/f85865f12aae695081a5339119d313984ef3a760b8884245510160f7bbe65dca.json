{"ast":null,"code":"var _jsxFileName = \"D:\\\\adhd-read-helper\\\\src\\\\components\\\\TextDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Box, Typography } from '@mui/material';\nimport ReactMarkdown from 'react-markdown';\nimport nlp from 'compromise';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextDisplay = ({\n  text,\n  highlightColor,\n  readingMode,\n  highlightedWords,\n  setHighlightedWords,\n  selectedPos\n}) => {\n  _s();\n  const containerRef = useRef(null);\n  const [currentLine, setCurrentLine] = useState(0);\n  const [lines, setLines] = useState([]);\n  const [mousePosition, setMousePosition] = useState({\n    x: 0,\n    y: 0\n  });\n  useEffect(() => {\n    if (text) {\n      // 使用compromise进行词性分析\n      const doc = nlp(text);\n      const words = doc.terms().out('array');\n      const pos = doc.terms().out('tags');\n\n      // 根据选择的词性筛选需要高亮的词\n      const wordsToHighlight = words.filter((word, index) => selectedPos.some(pos => pos.includes(pos[index])));\n      setHighlightedWords(wordsToHighlight);\n\n      // 将文本分割成行\n      setLines(text.split('\\n'));\n    }\n  }, [text, selectedPos, setHighlightedWords]);\n  useEffect(() => {\n    if (readingMode === 'dynamic') {\n      const interval = setInterval(() => {\n        setCurrentLine(prev => (prev + 1) % lines.length);\n      }, 2000); // 每2秒切换一行\n\n      return () => clearInterval(interval);\n    }\n  }, [readingMode, lines.length]);\n  const handleMouseMove = e => {\n    if (readingMode === 'dynamic') {\n      const rect = containerRef.current.getBoundingClientRect();\n      setMousePosition({\n        x: e.clientX - rect.left,\n        y: e.clientY - rect.top\n      });\n    }\n  };\n  const renderText = (line, index) => {\n    if (!line) return null;\n    const isHighlighted = readingMode === 'static' || readingMode === 'dynamic' && index === currentLine;\n    const words = line.split(' ');\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        position: 'relative',\n        opacity: isHighlighted ? 1 : 0.3,\n        transition: 'opacity 0.3s ease',\n        '&:hover': {\n          opacity: 1\n        }\n      },\n      children: words.map((word, wordIndex) => /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          backgroundColor: highlightedWords.includes(word) ? highlightColor : 'transparent',\n          padding: '0 2px',\n          borderRadius: '2px',\n          transition: 'background-color 0.3s ease'\n        },\n        children: [word, ' ']\n      }, wordIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this))\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    ref: containerRef,\n    onMouseMove: handleMouseMove,\n    sx: {\n      position: 'relative',\n      minHeight: '400px',\n      maxHeight: '600px',\n      overflowY: 'auto',\n      p: 2\n    },\n    children: [text ? /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n      children: lines.map((line, index) => renderText(line, index))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      color: \"text.secondary\",\n      children: \"\\u8BF7\\u4E0A\\u4F20\\u6587\\u672C\\u6587\\u4EF6\\u5F00\\u59CB\\u9605\\u8BFB\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this), readingMode === 'dynamic' && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        position: 'absolute',\n        left: 0,\n        top: `${currentLine * 24}px`,\n        // 假设每行高度为24px\n        width: '100%',\n        height: '24px',\n        backgroundColor: 'rgba(255, 255, 0, 0.1)',\n        pointerEvents: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(TextDisplay, \"HgrVyROlcqDbUhQi7SQx46/y7SM=\");\n_c = TextDisplay;\nexport default TextDisplay;\nvar _c;\n$RefreshReg$(_c, \"TextDisplay\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Box","Typography","ReactMarkdown","nlp","jsxDEV","_jsxDEV","TextDisplay","text","highlightColor","readingMode","highlightedWords","setHighlightedWords","selectedPos","_s","containerRef","currentLine","setCurrentLine","lines","setLines","mousePosition","setMousePosition","x","y","doc","words","terms","out","pos","wordsToHighlight","filter","word","index","some","includes","split","interval","setInterval","prev","length","clearInterval","handleMouseMove","e","rect","current","getBoundingClientRect","clientX","left","clientY","top","renderText","line","isHighlighted","sx","position","opacity","transition","children","map","wordIndex","style","backgroundColor","padding","borderRadius","fileName","_jsxFileName","lineNumber","columnNumber","ref","onMouseMove","minHeight","maxHeight","overflowY","p","variant","color","width","height","pointerEvents","_c","$RefreshReg$"],"sources":["D:/adhd-read-helper/src/components/TextDisplay.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { Box, Typography } from '@mui/material';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport nlp from 'compromise';\r\n\r\nconst TextDisplay = ({\r\n  text,\r\n  highlightColor,\r\n  readingMode,\r\n  highlightedWords,\r\n  setHighlightedWords,\r\n  selectedPos\r\n}) => {\r\n  const containerRef = useRef(null);\r\n  const [currentLine, setCurrentLine] = useState(0);\r\n  const [lines, setLines] = useState([]);\r\n  const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 });\r\n\r\n  useEffect(() => {\r\n    if (text) {\r\n      // 使用compromise进行词性分析\r\n      const doc = nlp(text);\r\n      const words = doc.terms().out('array');\r\n      const pos = doc.terms().out('tags');\r\n      \r\n      // 根据选择的词性筛选需要高亮的词\r\n      const wordsToHighlight = words.filter((word, index) => \r\n        selectedPos.some(pos => pos.includes(pos[index]))\r\n      );\r\n      \r\n      setHighlightedWords(wordsToHighlight);\r\n      \r\n      // 将文本分割成行\r\n      setLines(text.split('\\n'));\r\n    }\r\n  }, [text, selectedPos, setHighlightedWords]);\r\n\r\n  useEffect(() => {\r\n    if (readingMode === 'dynamic') {\r\n      const interval = setInterval(() => {\r\n        setCurrentLine(prev => (prev + 1) % lines.length);\r\n      }, 2000); // 每2秒切换一行\r\n\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [readingMode, lines.length]);\r\n\r\n  const handleMouseMove = (e) => {\r\n    if (readingMode === 'dynamic') {\r\n      const rect = containerRef.current.getBoundingClientRect();\r\n      setMousePosition({\r\n        x: e.clientX - rect.left,\r\n        y: e.clientY - rect.top\r\n      });\r\n    }\r\n  };\r\n\r\n  const renderText = (line, index) => {\r\n    if (!line) return null;\r\n\r\n    const isHighlighted = readingMode === 'static' || \r\n      (readingMode === 'dynamic' && index === currentLine);\r\n\r\n    const words = line.split(' ');\r\n    return (\r\n      <Box\r\n        key={index}\r\n        sx={{\r\n          position: 'relative',\r\n          opacity: isHighlighted ? 1 : 0.3,\r\n          transition: 'opacity 0.3s ease',\r\n          '&:hover': {\r\n            opacity: 1\r\n          }\r\n        }}\r\n      >\r\n        {words.map((word, wordIndex) => (\r\n          <span\r\n            key={wordIndex}\r\n            style={{\r\n              backgroundColor: highlightedWords.includes(word) ? highlightColor : 'transparent',\r\n              padding: '0 2px',\r\n              borderRadius: '2px',\r\n              transition: 'background-color 0.3s ease'\r\n            }}\r\n          >\r\n            {word}{' '}\r\n          </span>\r\n        ))}\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      ref={containerRef}\r\n      onMouseMove={handleMouseMove}\r\n      sx={{\r\n        position: 'relative',\r\n        minHeight: '400px',\r\n        maxHeight: '600px',\r\n        overflowY: 'auto',\r\n        p: 2\r\n      }}\r\n    >\r\n      {text ? (\r\n        <ReactMarkdown>\r\n          {lines.map((line, index) => renderText(line, index))}\r\n        </ReactMarkdown>\r\n      ) : (\r\n        <Typography variant=\"body1\" color=\"text.secondary\">\r\n          请上传文本文件开始阅读\r\n        </Typography>\r\n      )}\r\n      \r\n      {readingMode === 'dynamic' && (\r\n        <Box\r\n          sx={{\r\n            position: 'absolute',\r\n            left: 0,\r\n            top: `${currentLine * 24}px`, // 假设每行高度为24px\r\n            width: '100%',\r\n            height: '24px',\r\n            backgroundColor: 'rgba(255, 255, 0, 0.1)',\r\n            pointerEvents: 'none'\r\n          }}\r\n        />\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TextDisplay; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}