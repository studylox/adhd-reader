{"ast":null,"code":"var _jsxFileName = \"D:\\\\adhd-read-helper\\\\src\\\\components\\\\TextDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Box, Typography } from '@mui/material';\nimport nlp from 'compromise';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextDisplay = ({\n  text,\n  highlightColor,\n  readingMode,\n  highlightedWords,\n  setHighlightedWords,\n  selectedPos\n}) => {\n  _s();\n  const containerRef = useRef(null);\n  const [currentLine, setCurrentLine] = useState(0);\n  const [lines, setLines] = useState([]);\n  const [mousePosition, setMousePosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [autoReadingSpeed, setAutoReadingSpeed] = useState(2000);\n  const [isAutoReading, setIsAutoReading] = useState(false);\n  useEffect(() => {\n    if (text) {\n      // 使用compromise进行词性分析\n      const doc = nlp(text);\n      const words = doc.terms().out('array');\n      const pos = doc.terms().out('tags');\n\n      // 根据选择的词性筛选需要高亮的词\n      const wordsToHighlight = words.filter((word, index) => selectedPos.some(pos => pos.includes(pos[index])));\n      setHighlightedWords(wordsToHighlight);\n\n      // 将文本分割成行，保留空行\n      setLines(text.split('\\n'));\n    }\n  }, [text, selectedPos, setHighlightedWords]);\n  useEffect(() => {\n    let interval;\n    if (readingMode === 'dynamic' && isAutoReading) {\n      interval = setInterval(() => {\n        setCurrentLine(prev => (prev + 1) % lines.length);\n      }, autoReadingSpeed);\n    }\n    return () => clearInterval(interval);\n  }, [readingMode, lines.length, isAutoReading, autoReadingSpeed]);\n  const handleMouseMove = e => {\n    if (readingMode === 'dynamic' && !isAutoReading) {\n      const rect = containerRef.current.getBoundingClientRect();\n      const y = e.clientY - rect.top;\n      const lineHeight = 24;\n      const newLine = Math.floor(y / lineHeight);\n      if (newLine >= 0 && newLine < lines.length) {\n        setCurrentLine(newLine);\n      }\n      setMousePosition({\n        x: e.clientX - rect.left,\n        y: y\n      });\n    }\n  };\n  const handleSpeedChange = e => {\n    const speed = parseInt(e.target.value);\n    setAutoReadingSpeed(speed);\n  };\n  const renderText = (line, index) => {\n    if (!line) return /*#__PURE__*/_jsxDEV(\"br\", {}, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 23\n    }, this);\n    const isHighlighted = readingMode === 'static' || readingMode === 'dynamic' && index === currentLine;\n    const words = line.split(' ');\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        position: 'relative',\n        opacity: isHighlighted ? 1 : 0.3,\n        transition: 'opacity 0.3s ease',\n        '&:hover': {\n          opacity: 1\n        },\n        lineHeight: '24px'\n      },\n      children: words.map((word, wordIndex) => /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          backgroundColor: highlightedWords.includes(word) ? highlightColor : 'transparent',\n          padding: '0 2px',\n          borderRadius: '2px',\n          transition: 'background-color 0.3s ease'\n        },\n        children: [word, ' ']\n      }, wordIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this))\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    ref: containerRef,\n    onMouseMove: handleMouseMove,\n    sx: {\n      position: 'relative',\n      minHeight: '400px',\n      maxHeight: '600px',\n      overflowY: 'auto',\n      p: 2\n    },\n    children: [readingMode === 'dynamic' && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 2,\n        display: 'flex',\n        gap: 2,\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        children: \"\\u52A8\\u6001\\u9605\\u8BFB\\u6A21\\u5F0F\\uFF1A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsAutoReading(!isAutoReading),\n        style: {\n          padding: '8px 16px',\n          backgroundColor: isAutoReading ? '#f44336' : '#4caf50',\n          color: 'white',\n          border: 'none',\n          borderRadius: '4px',\n          cursor: 'pointer'\n        },\n        children: isAutoReading ? '停止自动阅读' : '开始自动阅读'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), isAutoReading && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          children: \"\\u9605\\u8BFB\\u901F\\u5EA6\\uFF1A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"1000\",\n          max: \"5000\",\n          step: \"500\",\n          value: autoReadingSpeed,\n          onChange: handleSpeedChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [autoReadingSpeed / 1000, \"\\u79D2/\\u884C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this), text ? /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        whiteSpace: 'pre-wrap'\n      },\n      children: lines.map((line, index) => renderText(line, index))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      color: \"text.secondary\",\n      children: \"\\u8BF7\\u4E0A\\u4F20\\u6587\\u672C\\u6587\\u4EF6\\u5F00\\u59CB\\u9605\\u8BFB\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }, this), readingMode === 'dynamic' && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        position: 'absolute',\n        left: 0,\n        top: `${currentLine * 24}px`,\n        width: '100%',\n        height: '24px',\n        backgroundColor: 'rgba(255, 255, 0, 0.1)',\n        pointerEvents: 'none',\n        transition: 'top 0.3s ease'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_s(TextDisplay, \"juX5gvUBeRt3kk23AuzFjciUEfE=\");\n_c = TextDisplay;\nexport default TextDisplay;\nvar _c;\n$RefreshReg$(_c, \"TextDisplay\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Box","Typography","nlp","jsxDEV","_jsxDEV","TextDisplay","text","highlightColor","readingMode","highlightedWords","setHighlightedWords","selectedPos","_s","containerRef","currentLine","setCurrentLine","lines","setLines","mousePosition","setMousePosition","x","y","autoReadingSpeed","setAutoReadingSpeed","isAutoReading","setIsAutoReading","doc","words","terms","out","pos","wordsToHighlight","filter","word","index","some","includes","split","interval","setInterval","prev","length","clearInterval","handleMouseMove","e","rect","current","getBoundingClientRect","clientY","top","lineHeight","newLine","Math","floor","clientX","left","handleSpeedChange","speed","parseInt","target","value","renderText","line","fileName","_jsxFileName","lineNumber","columnNumber","isHighlighted","sx","position","opacity","transition","children","map","wordIndex","style","backgroundColor","padding","borderRadius","ref","onMouseMove","minHeight","maxHeight","overflowY","p","mb","display","gap","alignItems","variant","onClick","color","border","cursor","type","min","max","step","onChange","whiteSpace","width","height","pointerEvents","_c","$RefreshReg$"],"sources":["D:/adhd-read-helper/src/components/TextDisplay.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { Box, Typography } from '@mui/material';\r\nimport nlp from 'compromise';\r\n\r\nconst TextDisplay = ({\r\n  text,\r\n  highlightColor,\r\n  readingMode,\r\n  highlightedWords,\r\n  setHighlightedWords,\r\n  selectedPos\r\n}) => {\r\n  const containerRef = useRef(null);\r\n  const [currentLine, setCurrentLine] = useState(0);\r\n  const [lines, setLines] = useState([]);\r\n  const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 });\r\n  const [autoReadingSpeed, setAutoReadingSpeed] = useState(2000);\r\n  const [isAutoReading, setIsAutoReading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (text) {\r\n      // 使用compromise进行词性分析\r\n      const doc = nlp(text);\r\n      const words = doc.terms().out('array');\r\n      const pos = doc.terms().out('tags');\r\n      \r\n      // 根据选择的词性筛选需要高亮的词\r\n      const wordsToHighlight = words.filter((word, index) => \r\n        selectedPos.some(pos => pos.includes(pos[index]))\r\n      );\r\n      \r\n      setHighlightedWords(wordsToHighlight);\r\n      \r\n      // 将文本分割成行，保留空行\r\n      setLines(text.split('\\n'));\r\n    }\r\n  }, [text, selectedPos, setHighlightedWords]);\r\n\r\n  useEffect(() => {\r\n    let interval;\r\n    if (readingMode === 'dynamic' && isAutoReading) {\r\n      interval = setInterval(() => {\r\n        setCurrentLine(prev => (prev + 1) % lines.length);\r\n      }, autoReadingSpeed);\r\n    }\r\n    return () => clearInterval(interval);\r\n  }, [readingMode, lines.length, isAutoReading, autoReadingSpeed]);\r\n\r\n  const handleMouseMove = (e) => {\r\n    if (readingMode === 'dynamic' && !isAutoReading) {\r\n      const rect = containerRef.current.getBoundingClientRect();\r\n      const y = e.clientY - rect.top;\r\n      const lineHeight = 24;\r\n      const newLine = Math.floor(y / lineHeight);\r\n      if (newLine >= 0 && newLine < lines.length) {\r\n        setCurrentLine(newLine);\r\n      }\r\n      setMousePosition({\r\n        x: e.clientX - rect.left,\r\n        y: y\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleSpeedChange = (e) => {\r\n    const speed = parseInt(e.target.value);\r\n    setAutoReadingSpeed(speed);\r\n  };\r\n\r\n  const renderText = (line, index) => {\r\n    if (!line) return <br key={index} />;\r\n\r\n    const isHighlighted = readingMode === 'static' || \r\n      (readingMode === 'dynamic' && index === currentLine);\r\n\r\n    const words = line.split(' ');\r\n    return (\r\n      <Box\r\n        key={index}\r\n        sx={{\r\n          position: 'relative',\r\n          opacity: isHighlighted ? 1 : 0.3,\r\n          transition: 'opacity 0.3s ease',\r\n          '&:hover': {\r\n            opacity: 1\r\n          },\r\n          lineHeight: '24px'\r\n        }}\r\n      >\r\n        {words.map((word, wordIndex) => (\r\n          <span\r\n            key={wordIndex}\r\n            style={{\r\n              backgroundColor: highlightedWords.includes(word) ? highlightColor : 'transparent',\r\n              padding: '0 2px',\r\n              borderRadius: '2px',\r\n              transition: 'background-color 0.3s ease'\r\n            }}\r\n          >\r\n            {word}{' '}\r\n          </span>\r\n        ))}\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      ref={containerRef}\r\n      onMouseMove={handleMouseMove}\r\n      sx={{\r\n        position: 'relative',\r\n        minHeight: '400px',\r\n        maxHeight: '600px',\r\n        overflowY: 'auto',\r\n        p: 2\r\n      }}\r\n    >\r\n      {readingMode === 'dynamic' && (\r\n        <Box sx={{ mb: 2, display: 'flex', gap: 2, alignItems: 'center' }}>\r\n          <Typography variant=\"subtitle1\">动态阅读模式：</Typography>\r\n          <button\r\n            onClick={() => setIsAutoReading(!isAutoReading)}\r\n            style={{\r\n              padding: '8px 16px',\r\n              backgroundColor: isAutoReading ? '#f44336' : '#4caf50',\r\n              color: 'white',\r\n              border: 'none',\r\n              borderRadius: '4px',\r\n              cursor: 'pointer'\r\n            }}\r\n          >\r\n            {isAutoReading ? '停止自动阅读' : '开始自动阅读'}\r\n          </button>\r\n          {isAutoReading && (\r\n            <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n              <Typography>阅读速度：</Typography>\r\n              <input\r\n                type=\"range\"\r\n                min=\"1000\"\r\n                max=\"5000\"\r\n                step=\"500\"\r\n                value={autoReadingSpeed}\r\n                onChange={handleSpeedChange}\r\n              />\r\n              <Typography>{autoReadingSpeed / 1000}秒/行</Typography>\r\n            </Box>\r\n          )}\r\n        </Box>\r\n      )}\r\n\r\n      {text ? (\r\n        <Box sx={{ whiteSpace: 'pre-wrap' }}>\r\n          {lines.map((line, index) => renderText(line, index))}\r\n        </Box>\r\n      ) : (\r\n        <Typography variant=\"body1\" color=\"text.secondary\">\r\n          请上传文本文件开始阅读\r\n        </Typography>\r\n      )}\r\n      \r\n      {readingMode === 'dynamic' && (\r\n        <Box\r\n          sx={{\r\n            position: 'absolute',\r\n            left: 0,\r\n            top: `${currentLine * 24}px`,\r\n            width: '100%',\r\n            height: '24px',\r\n            backgroundColor: 'rgba(255, 255, 0, 0.1)',\r\n            pointerEvents: 'none',\r\n            transition: 'top 0.3s ease'\r\n          }}\r\n        />\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TextDisplay; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}