{"ast":null,"code":"var _jsxFileName = \"D:\\\\adhd-read-helper\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport * as pdfjsLib from 'pdfjs-dist';\nimport './styles/Reader.css';\n\n// 确保使用正确的 worker 版本\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst workerSrc = require('pdfjs-dist/build/pdf.worker.entry');\npdfjsLib.GlobalWorkerOptions.workerSrc = workerSrc;\nfunction App() {\n  _s();\n  var _pages;\n  // 状态定义\n  const [isDarkMode, setIsDarkMode] = useState(true);\n  const [pages, setPages] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const [fileName, setFileName] = useState('');\n  const [loading, setLoading] = useState(false);\n  const fileRef = useRef(null); // 添加文件引用\n\n  // 处理PDF文件\n  const handlePdfFile = async file => {\n    try {\n      setLoading(true);\n      fileRef.current = file;\n      const fileArrayBuffer = await file.arrayBuffer();\n      const pdf = await pdfjsLib.getDocument({\n        data: fileArrayBuffer\n      }).promise;\n      setTotalPages(pdf.numPages);\n\n      // 获取第一页\n      const page = await pdf.getPage(1);\n      const viewport = page.getViewport({\n        scale: 1.0\n      });\n      const textContent = await page.getTextContent();\n\n      // 保存原始页面尺寸\n      const pageWidth = viewport.width;\n      const pageHeight = viewport.height;\n\n      // 处理文本内容，保持原始位置信息\n      const pageText = textContent.items.map(item => ({\n        text: item.str,\n        x: item.transform[4],\n        y: viewport.height - item.transform[5],\n        fontSize: Math.sqrt(item.transform[0] * item.transform[0] + item.transform[1] * item.transform[1]),\n        fontFamily: item.fontName || 'serif'\n      }));\n      setPages([{\n        content: pageText,\n        width: pageWidth,\n        height: pageHeight\n      }]);\n      setCurrentPage(1);\n      setLoading(false);\n    } catch (error) {\n      console.error('PDF处理错误:', error);\n      setLoading(false);\n      alert('PDF文件处理失败，请重试');\n    }\n  };\n\n  // 处理TXT文件\n  const handleTxtFile = async file => {\n    try {\n      setLoading(true);\n      const text = await file.text();\n      // 将文本分页处理\n      const pageTexts = text.split('\\n\\n').map(paragraph => [{\n        text: paragraph,\n        x: 40,\n        y: 40,\n        fontSize: 16,\n        fontFamily: 'serif'\n      }]);\n      setPages(pageTexts);\n      setTotalPages(pageTexts.length);\n      setCurrentPage(1);\n      setLoading(false);\n    } catch (error) {\n      console.error('TXT处理错误:', error);\n      setLoading(false);\n      alert('TXT文件处理失败，请重试');\n    }\n  };\n\n  // 文件上传处理\n  const handleFileUpload = async event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    if (file.size > 100 * 1024 * 1024) {\n      alert('文件大小不能超过100MB');\n      return;\n    }\n    setFileName(file.name);\n    setPages([]); // 清空现有页面\n\n    if (file.type === 'application/pdf') {\n      await handlePdfFile(file);\n    } else if (file.type === 'text/plain' || file.name.endsWith('.txt')) {\n      await handleTxtFile(file);\n    }\n  };\n\n  // 加载指定页面\n  const loadPage = async pageNum => {\n    if (!fileRef.current) return;\n    try {\n      setLoading(true);\n      const fileArrayBuffer = await fileRef.current.arrayBuffer();\n      const pdf = await pdfjsLib.getDocument({\n        data: fileArrayBuffer\n      }).promise;\n      const page = await pdf.getPage(pageNum);\n      const viewport = page.getViewport({\n        scale: 1.0\n      });\n      const textContent = await page.getTextContent();\n      const pageText = textContent.items.map(item => ({\n        text: item.str,\n        x: item.transform[4],\n        y: viewport.height - item.transform[5],\n        fontSize: Math.sqrt(item.transform[0] * item.transform[0] + item.transform[1] * item.transform[1]),\n        fontFamily: item.fontName || 'serif'\n      }));\n      setPages(prev => {\n        const newPages = [...prev];\n        newPages[pageNum - 1] = {\n          content: pageText,\n          width: viewport.width,\n          height: viewport.height\n        };\n        return newPages;\n      });\n      setLoading(false);\n    } catch (error) {\n      console.error('页面加载错误:', error);\n      setLoading(false);\n    }\n  };\n\n  // 处理翻页\n  const handlePageChange = direction => {\n    const newPage = direction === 'next' ? Math.min(currentPage + 1, totalPages) : Math.max(currentPage - 1, 1);\n    setCurrentPage(newPage);\n    if (!pages[newPage - 1]) {\n      loadPage(newPage);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `App ${isDarkMode ? 'dark' : 'light'}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"app-title\",\n        children: \"ADHD \\u9605\\u8BFB\\u52A9\\u624B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".txt,.pdf\",\n          onChange: handleFileUpload,\n          id: \"file-upload\",\n          className: \"file-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file-upload\",\n          className: \"control-btn\",\n          children: \"\\u9009\\u62E9\\u6587\\u4EF6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), fileName && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"file-info\",\n          children: [\"\\u5F53\\u524D\\u6587\\u4EF6: \", fileName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"control-btn\",\n          onClick: () => setIsDarkMode(prev => !prev),\n          children: [\"\\u5207\\u6362\", isDarkMode ? '明亮' : '暗黑', \"\\u6A21\\u5F0F\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reader-container\",\n        children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"\\u6B63\\u5728\\u52A0\\u8F7D\\u5185\\u5BB9\\uFF0C\\u8BF7\\u7A0D\\u5019...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this) : pages.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"book-view\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"page-btn prev\",\n            onClick: () => handlePageChange('prev'),\n            disabled: currentPage === 1,\n            children: \"\\u2039\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"page-content\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"page-layout\",\n              children: (_pages = pages[currentPage - 1]) === null || _pages === void 0 ? void 0 : _pages.content.map((item, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  position: 'absolute',\n                  left: `${item.x}px`,\n                  top: `${item.y}px`,\n                  fontSize: `${item.fontSize}px`,\n                  fontFamily: item.fontFamily,\n                  whiteSpace: 'pre',\n                  color: isDarkMode ? '#e0e0e0' : '#2c2c2c',\n                  letterSpacing: '0.08em',\n                  wordSpacing: '0.1em',\n                  transform: 'scaleX(1.05)',\n                  transformOrigin: 'left',\n                  textRendering: 'optimizeLegibility',\n                  WebkitFontSmoothing: 'antialiased',\n                  MozOsxFontSmoothing: 'grayscale'\n                },\n                children: item.text\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"page-btn next\",\n            onClick: () => handlePageChange('next'),\n            disabled: currentPage === totalPages,\n            children: \"\\u203A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"page-number\",\n            children: [currentPage, \" / \", totalPages]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-prompt\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u8BF7\\u4E0A\\u4F20\\u6587\\u4EF6\\u5F00\\u59CB\\u9605\\u8BFB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"supported-formats\",\n            children: \"\\u652F\\u6301\\u7684\\u683C\\u5F0F: PDF, TXT (\\u6700\\u5927100MB)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"33W9fwd8fBofazOqC/ExBA5ozao=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","pdfjsLib","jsxDEV","_jsxDEV","workerSrc","require","GlobalWorkerOptions","App","_s","_pages","isDarkMode","setIsDarkMode","pages","setPages","currentPage","setCurrentPage","totalPages","setTotalPages","fileName","setFileName","loading","setLoading","fileRef","handlePdfFile","file","current","fileArrayBuffer","arrayBuffer","pdf","getDocument","data","promise","numPages","page","getPage","viewport","getViewport","scale","textContent","getTextContent","pageWidth","width","pageHeight","height","pageText","items","map","item","text","str","x","transform","y","fontSize","Math","sqrt","fontFamily","fontName","content","error","console","alert","handleTxtFile","pageTexts","split","paragraph","length","handleFileUpload","event","target","files","size","name","type","endsWith","loadPage","pageNum","prev","newPages","handlePageChange","direction","newPage","min","max","className","children","_jsxFileName","lineNumber","columnNumber","accept","onChange","id","htmlFor","onClick","disabled","index","style","position","left","top","whiteSpace","color","letterSpacing","wordSpacing","transformOrigin","textRendering","WebkitFontSmoothing","MozOsxFontSmoothing","_c","$RefreshReg$"],"sources":["D:/adhd-read-helper/src/App.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport * as pdfjsLib from 'pdfjs-dist';\r\nimport './styles/Reader.css';\r\n\r\n// 确保使用正确的 worker 版本\r\nconst workerSrc = require('pdfjs-dist/build/pdf.worker.entry');\r\npdfjsLib.GlobalWorkerOptions.workerSrc = workerSrc;\r\n\r\nfunction App() {\r\n  // 状态定义\r\n  const [isDarkMode, setIsDarkMode] = useState(true);\r\n  const [pages, setPages] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const [fileName, setFileName] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const fileRef = useRef(null); // 添加文件引用\r\n\r\n  // 处理PDF文件\r\n  const handlePdfFile = async (file) => {\r\n    try {\r\n      setLoading(true);\r\n      fileRef.current = file;\r\n\r\n      const fileArrayBuffer = await file.arrayBuffer();\r\n      const pdf = await pdfjsLib.getDocument({\r\n        data: fileArrayBuffer,\r\n      }).promise;\r\n\r\n      setTotalPages(pdf.numPages);\r\n\r\n      // 获取第一页\r\n      const page = await pdf.getPage(1);\r\n      const viewport = page.getViewport({ scale: 1.0 });\r\n      const textContent = await page.getTextContent();\r\n\r\n      // 保存原始页面尺寸\r\n      const pageWidth = viewport.width;\r\n      const pageHeight = viewport.height;\r\n\r\n      // 处理文本内容，保持原始位置信息\r\n      const pageText = textContent.items.map(item => ({\r\n        text: item.str,\r\n        x: item.transform[4],\r\n        y: viewport.height - item.transform[5],\r\n        fontSize: Math.sqrt((item.transform[0] * item.transform[0]) + (item.transform[1] * item.transform[1])),\r\n        fontFamily: item.fontName || 'serif'\r\n      }));\r\n\r\n      setPages([{ content: pageText, width: pageWidth, height: pageHeight }]);\r\n      setCurrentPage(1);\r\n      setLoading(false);\r\n\r\n    } catch (error) {\r\n      console.error('PDF处理错误:', error);\r\n      setLoading(false);\r\n      alert('PDF文件处理失败，请重试');\r\n    }\r\n  };\r\n\r\n  // 处理TXT文件\r\n  const handleTxtFile = async (file) => {\r\n    try {\r\n      setLoading(true);\r\n      const text = await file.text();\r\n      // 将文本分页处理\r\n      const pageTexts = text.split('\\n\\n').map(paragraph => [{\r\n        text: paragraph,\r\n        x: 40,\r\n        y: 40,\r\n        fontSize: 16,\r\n        fontFamily: 'serif'\r\n      }]);\r\n      setPages(pageTexts);\r\n      setTotalPages(pageTexts.length);\r\n      setCurrentPage(1);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('TXT处理错误:', error);\r\n      setLoading(false);\r\n      alert('TXT文件处理失败，请重试');\r\n    }\r\n  };\r\n\r\n  // 文件上传处理\r\n  const handleFileUpload = async (event) => {\r\n    const file = event.target.files[0];\r\n    if (!file) return;\r\n\r\n    if (file.size > 100 * 1024 * 1024) {\r\n      alert('文件大小不能超过100MB');\r\n      return;\r\n    }\r\n\r\n    setFileName(file.name);\r\n    setPages([]); // 清空现有页面\r\n\r\n    if (file.type === 'application/pdf') {\r\n      await handlePdfFile(file);\r\n    } else if (file.type === 'text/plain' || file.name.endsWith('.txt')) {\r\n      await handleTxtFile(file);\r\n    }\r\n  };\r\n\r\n  // 加载指定页面\r\n  const loadPage = async (pageNum) => {\r\n    if (!fileRef.current) return;\r\n\r\n    try {\r\n      setLoading(true);\r\n      const fileArrayBuffer = await fileRef.current.arrayBuffer();\r\n      const pdf = await pdfjsLib.getDocument({\r\n        data: fileArrayBuffer,\r\n      }).promise;\r\n\r\n      const page = await pdf.getPage(pageNum);\r\n      const viewport = page.getViewport({ scale: 1.0 });\r\n      const textContent = await page.getTextContent();\r\n\r\n      const pageText = textContent.items.map(item => ({\r\n        text: item.str,\r\n        x: item.transform[4],\r\n        y: viewport.height - item.transform[5],\r\n        fontSize: Math.sqrt((item.transform[0] * item.transform[0]) + (item.transform[1] * item.transform[1])),\r\n        fontFamily: item.fontName || 'serif'\r\n      }));\r\n\r\n      setPages(prev => {\r\n        const newPages = [...prev];\r\n        newPages[pageNum - 1] = { content: pageText, width: viewport.width, height: viewport.height };\r\n        return newPages;\r\n      });\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('页面加载错误:', error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 处理翻页\r\n  const handlePageChange = (direction) => {\r\n    const newPage = direction === 'next' \r\n      ? Math.min(currentPage + 1, totalPages)\r\n      : Math.max(currentPage - 1, 1);\r\n    \r\n    setCurrentPage(newPage);\r\n    if (!pages[newPage - 1]) {\r\n      loadPage(newPage);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`App ${isDarkMode ? 'dark' : 'light'}`}>\r\n      <div className=\"app-container\">\r\n        <h1 className=\"app-title\">ADHD 阅读助手</h1>\r\n        \r\n        <div className=\"control-panel\">\r\n          <input\r\n            type=\"file\"\r\n            accept=\".txt,.pdf\"\r\n            onChange={handleFileUpload}\r\n            id=\"file-upload\"\r\n            className=\"file-input\"\r\n          />\r\n          <label htmlFor=\"file-upload\" className=\"control-btn\">\r\n            选择文件\r\n          </label>\r\n          \r\n          {fileName && (\r\n            <span className=\"file-info\">\r\n              当前文件: {fileName}\r\n            </span>\r\n          )}\r\n          \r\n          <button \r\n            className=\"control-btn\"\r\n            onClick={() => setIsDarkMode(prev => !prev)}\r\n          >\r\n            切换{isDarkMode ? '明亮' : '暗黑'}模式\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"reader-container\">\r\n          {loading ? (\r\n            <div className=\"loading\">\r\n              <div className=\"loading-spinner\"></div>\r\n              <div>正在加载内容，请稍候...</div>\r\n            </div>\r\n          ) : pages.length > 0 ? (\r\n            <div className=\"book-view\">\r\n              <button \r\n                className=\"page-btn prev\" \r\n                onClick={() => handlePageChange('prev')}\r\n                disabled={currentPage === 1}\r\n              >\r\n                ‹\r\n              </button>\r\n              \r\n              <div className=\"page-content\">\r\n                <div className=\"page-layout\">\r\n                  {pages[currentPage - 1]?.content.map((item, index) => (\r\n                    <span\r\n                      key={index}\r\n                      style={{\r\n                        position: 'absolute',\r\n                        left: `${item.x}px`,\r\n                        top: `${item.y}px`,\r\n                        fontSize: `${item.fontSize}px`,\r\n                        fontFamily: item.fontFamily,\r\n                        whiteSpace: 'pre',\r\n                        color: isDarkMode ? '#e0e0e0' : '#2c2c2c',\r\n                        letterSpacing: '0.08em',\r\n                        wordSpacing: '0.1em',\r\n                        transform: 'scaleX(1.05)',\r\n                        transformOrigin: 'left',\r\n                        textRendering: 'optimizeLegibility',\r\n                        WebkitFontSmoothing: 'antialiased',\r\n                        MozOsxFontSmoothing: 'grayscale',\r\n                      }}\r\n                    >\r\n                      {item.text}\r\n                    </span>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n\r\n              <button \r\n                className=\"page-btn next\" \r\n                onClick={() => handlePageChange('next')}\r\n                disabled={currentPage === totalPages}\r\n              >\r\n                ›\r\n              </button>\r\n\r\n              <div className=\"page-number\">\r\n                {currentPage} / {totalPages}\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"upload-prompt\">\r\n              <p>请上传文件开始阅读</p>\r\n              <p className=\"supported-formats\">支持的格式: PDF, TXT (最大100MB)</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}