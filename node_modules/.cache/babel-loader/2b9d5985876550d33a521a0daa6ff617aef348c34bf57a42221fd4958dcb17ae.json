{"ast":null,"code":"var _jsxFileName = \"D:\\\\adhd-read-helper\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport * as pdfjsLib from 'pdfjs-dist';\nimport './styles/Reader.css';\n\n// 确保使用正确的 worker 版本\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst workerSrc = require('pdfjs-dist/build/pdf.worker.entry');\npdfjsLib.GlobalWorkerOptions.workerSrc = workerSrc;\nfunction App() {\n  _s();\n  const [isDarkMode, setIsDarkMode] = useState(true);\n  const [pages, setPages] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const [fileName, setFileName] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [fileType, setFileType] = useState(null); // 新增：跟踪文件类型\n  const fileRef = useRef(null);\n\n  // 提取PDF页面中的文本和样式\n  const extractPageContent = async page => {\n    const textContent = await page.getTextContent();\n    const viewport = page.getViewport({\n      scale: 1.0\n    });\n\n    // 将文本内容转换为带格式的HTML\n    const content = textContent.items.map(item => {\n      const transform = item.transform;\n      const x = transform[4];\n      const y = viewport.height - transform[5];\n\n      // 计算字体大小和样式\n      const fontSize = Math.sqrt(transform[0] * transform[0] + transform[1] * transform[1]);\n      const fontFamily = item.fontName || 'Arial';\n      return {\n        text: item.str,\n        style: {\n          position: 'absolute',\n          left: `${x}px`,\n          top: `${y}px`,\n          fontSize: `${fontSize}px`,\n          fontFamily: fontFamily,\n          whiteSpace: 'pre'\n        }\n      };\n    });\n    return content;\n  };\n\n  // 处理PDF文件\n  const handlePdfFile = async file => {\n    try {\n      setLoading(true);\n      const fileArrayBuffer = await file.arrayBuffer();\n      const pdf = await pdfjsLib.getDocument({\n        data: fileArrayBuffer,\n        cMapUrl: 'https://cdn.jsdelivr.net/npm/pdfjs-dist@3.11.174/cmaps/',\n        cMapPacked: true\n      }).promise;\n      setTotalPages(pdf.numPages);\n      fileRef.current = file;\n\n      // 加载第一页内容\n      const page = await pdf.getPage(1);\n      const textContent = await page.getTextContent();\n\n      // 提取文本内容\n      const pageText = textContent.items.map(item => item.str).join(' ');\n      setPages([pageText]); // 存储为纯文本\n      setFileType('pdf'); // 设置文件类型\n      setLoading(false);\n    } catch (error) {\n      console.error('PDF处理错误:', error);\n      setLoading(false);\n      alert(`PDF处理失败: ${error.message}`);\n    }\n  };\n\n  // 加载指定页面\n  const loadPage = async pageNumber => {\n    if (!fileRef.current) return;\n    try {\n      setLoading(true);\n      const fileArrayBuffer = await fileRef.current.arrayBuffer();\n      const pdf = await pdfjsLib.getDocument({\n        data: fileArrayBuffer,\n        cMapUrl: 'https://cdn.jsdelivr.net/npm/pdfjs-dist@3.11.174/cmaps/',\n        cMapPacked: true\n      }).promise;\n      const page = await pdf.getPage(pageNumber);\n      const content = await extractPageContent(page);\n      setPages(prevPages => {\n        const newPages = [...prevPages];\n        newPages[pageNumber - 1] = content;\n        return newPages;\n      });\n      setLoading(false);\n    } catch (error) {\n      console.error('页面加载错误:', error);\n      setLoading(false);\n    }\n  };\n\n  // 处理TXT文件\n  const handleTxtFile = async file => {\n    try {\n      setLoading(true);\n      const text = await file.text();\n\n      // 将文本分割成适合一页显示的内容\n      const wordsPerPage = 500; // 每页大约500字\n      const textArray = text.split('');\n      const pages = [];\n      for (let i = 0; i < textArray.length; i += wordsPerPage) {\n        pages.push(textArray.slice(i, i + wordsPerPage).join(''));\n      }\n      setPages(pages);\n      setTotalPages(pages.length);\n      setFileType('txt');\n      setLoading(false);\n    } catch (error) {\n      console.error('TXT处理错误:', error);\n      setLoading(false);\n      alert(`TXT文件处理失败: ${error.message}`);\n    }\n  };\n\n  // 文件上传处理\n  const handleFileUpload = async event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    if (file.size > 100 * 1024 * 1024) {\n      alert('文件大小不能超过100MB');\n      return;\n    }\n    setFileName(file.name);\n    setPages([]);\n    setCurrentPage(1);\n    if (file.type === 'application/pdf') {\n      await handlePdfFile(file);\n    } else if (file.type === 'text/plain' || file.name.endsWith('.txt')) {\n      await handleTxtFile(file);\n    }\n  };\n\n  // 翻页处理\n  const handlePageChange = direction => {\n    const newPage = direction === 'next' ? Math.min(currentPage + 1, totalPages) : Math.max(currentPage - 1, 1);\n    setCurrentPage(newPage);\n  };\n\n  // 渲染页面内容\n  const renderPageContent = pageContent => {\n    var _pageContent$, _pageContent$$style;\n    // 如果是PDF内容（数组中包含position样式）\n    if ((pageContent === null || pageContent === void 0 ? void 0 : (_pageContent$ = pageContent[0]) === null || _pageContent$ === void 0 ? void 0 : (_pageContent$$style = _pageContent$.style) === null || _pageContent$$style === void 0 ? void 0 : _pageContent$$style.position) === 'absolute') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pdf-page\",\n        children: pageContent.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: item.style,\n          children: item.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this);\n    }\n    // 如果是TXT内容\n    else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"txt-page\",\n        children: pageContent === null || pageContent === void 0 ? void 0 : pageContent.map((item, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          style: item.style,\n          children: item.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App dark\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"app-title\",\n        children: \"ADHD \\u9605\\u8BFB\\u52A9\\u624B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".txt,.pdf\",\n          onChange: handleFileUpload,\n          id: \"file-upload\",\n          className: \"file-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file-upload\",\n          className: \"control-btn\",\n          children: \"\\u9009\\u62E9\\u6587\\u4EF6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), fileName && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"file-info\",\n          children: [\"\\u5F53\\u524D\\u6587\\u4EF6: \", fileName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"control-btn\",\n          onClick: () => setIsDarkMode(!isDarkMode),\n          children: \"\\u5207\\u6362\\u9605\\u8BFB\\u6A21\\u5F0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reader-container\",\n        children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"\\u6B63\\u5728\\u52A0\\u8F7D\\u5185\\u5BB9\\uFF0C\\u8BF7\\u7A0D\\u5019...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this) : pages.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"book-view\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"page-content\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-content\",\n              children: renderPageContent(pages[currentPage - 1])\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this), totalPages > 1 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"page-btn prev\",\n              onClick: () => handlePageChange('prev'),\n              disabled: currentPage === 1,\n              children: \"\\u2039\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"page-btn next\",\n              onClick: () => handlePageChange('next'),\n              disabled: currentPage === totalPages,\n              children: \"\\u203A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"page-number\",\n              children: [currentPage, \" / \", totalPages]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-prompt\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u8BF7\\u4E0A\\u4F20\\u6587\\u4EF6\\u5F00\\u59CB\\u9605\\u8BFB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"supported-formats\",\n            children: \"\\u652F\\u6301\\u7684\\u683C\\u5F0F: PDF, TXT (\\u6700\\u5927100MB)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5/h3QQ3eERRqx19sPm9F4NZWo5I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","pdfjsLib","jsxDEV","_jsxDEV","Fragment","_Fragment","workerSrc","require","GlobalWorkerOptions","App","_s","isDarkMode","setIsDarkMode","pages","setPages","currentPage","setCurrentPage","totalPages","setTotalPages","fileName","setFileName","loading","setLoading","fileType","setFileType","fileRef","extractPageContent","page","textContent","getTextContent","viewport","getViewport","scale","content","items","map","item","transform","x","y","height","fontSize","Math","sqrt","fontFamily","fontName","text","str","style","position","left","top","whiteSpace","handlePdfFile","file","fileArrayBuffer","arrayBuffer","pdf","getDocument","data","cMapUrl","cMapPacked","promise","numPages","current","getPage","pageText","join","error","console","alert","message","loadPage","pageNumber","prevPages","newPages","handleTxtFile","wordsPerPage","textArray","split","i","length","push","slice","handleFileUpload","event","target","files","size","name","type","endsWith","handlePageChange","direction","newPage","min","max","renderPageContent","pageContent","_pageContent$","_pageContent$$style","className","children","index","_jsxFileName","lineNumber","columnNumber","accept","onChange","id","htmlFor","onClick","disabled","_c","$RefreshReg$"],"sources":["D:/adhd-read-helper/src/App.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport * as pdfjsLib from 'pdfjs-dist';\r\nimport './styles/Reader.css';\r\n\r\n// 确保使用正确的 worker 版本\r\nconst workerSrc = require('pdfjs-dist/build/pdf.worker.entry');\r\npdfjsLib.GlobalWorkerOptions.workerSrc = workerSrc;\r\n\r\nfunction App() {\r\n  const [isDarkMode, setIsDarkMode] = useState(true);\r\n  const [pages, setPages] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const [fileName, setFileName] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [fileType, setFileType] = useState(null); // 新增：跟踪文件类型\r\n  const fileRef = useRef(null);\r\n\r\n  // 提取PDF页面中的文本和样式\r\n  const extractPageContent = async (page) => {\r\n    const textContent = await page.getTextContent();\r\n    const viewport = page.getViewport({ scale: 1.0 });\r\n    \r\n    // 将文本内容转换为带格式的HTML\r\n    const content = textContent.items.map(item => {\r\n      const transform = item.transform;\r\n      const x = transform[4];\r\n      const y = viewport.height - transform[5];\r\n      \r\n      // 计算字体大小和样式\r\n      const fontSize = Math.sqrt((transform[0] * transform[0]) + (transform[1] * transform[1]));\r\n      const fontFamily = item.fontName || 'Arial';\r\n      \r\n      return {\r\n        text: item.str,\r\n        style: {\r\n          position: 'absolute',\r\n          left: `${x}px`,\r\n          top: `${y}px`,\r\n          fontSize: `${fontSize}px`,\r\n          fontFamily: fontFamily,\r\n          whiteSpace: 'pre'\r\n        }\r\n      };\r\n    });\r\n\r\n    return content;\r\n  };\r\n\r\n  // 处理PDF文件\r\n  const handlePdfFile = async (file) => {\r\n    try {\r\n      setLoading(true);\r\n      const fileArrayBuffer = await file.arrayBuffer();\r\n      const pdf = await pdfjsLib.getDocument({\r\n        data: fileArrayBuffer,\r\n        cMapUrl: 'https://cdn.jsdelivr.net/npm/pdfjs-dist@3.11.174/cmaps/',\r\n        cMapPacked: true,\r\n      }).promise;\r\n\r\n      setTotalPages(pdf.numPages);\r\n      fileRef.current = file;\r\n\r\n      // 加载第一页内容\r\n      const page = await pdf.getPage(1);\r\n      const textContent = await page.getTextContent();\r\n      \r\n      // 提取文本内容\r\n      const pageText = textContent.items.map(item => item.str).join(' ');\r\n      setPages([pageText]); // 存储为纯文本\r\n      setFileType('pdf'); // 设置文件类型\r\n      setLoading(false);\r\n\r\n    } catch (error) {\r\n      console.error('PDF处理错误:', error);\r\n      setLoading(false);\r\n      alert(`PDF处理失败: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  // 加载指定页面\r\n  const loadPage = async (pageNumber) => {\r\n    if (!fileRef.current) return;\r\n\r\n    try {\r\n      setLoading(true);\r\n      const fileArrayBuffer = await fileRef.current.arrayBuffer();\r\n      const pdf = await pdfjsLib.getDocument({\r\n        data: fileArrayBuffer,\r\n        cMapUrl: 'https://cdn.jsdelivr.net/npm/pdfjs-dist@3.11.174/cmaps/',\r\n        cMapPacked: true,\r\n      }).promise;\r\n\r\n      const page = await pdf.getPage(pageNumber);\r\n      const content = await extractPageContent(page);\r\n      \r\n      setPages(prevPages => {\r\n        const newPages = [...prevPages];\r\n        newPages[pageNumber - 1] = content;\r\n        return newPages;\r\n      });\r\n\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('页面加载错误:', error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 处理TXT文件\r\n  const handleTxtFile = async (file) => {\r\n    try {\r\n      setLoading(true);\r\n      const text = await file.text();\r\n      \r\n      // 将文本分割成适合一页显示的内容\r\n      const wordsPerPage = 500; // 每页大约500字\r\n      const textArray = text.split('');\r\n      const pages = [];\r\n      \r\n      for (let i = 0; i < textArray.length; i += wordsPerPage) {\r\n        pages.push(textArray.slice(i, i + wordsPerPage).join(''));\r\n      }\r\n\r\n      setPages(pages);\r\n      setTotalPages(pages.length);\r\n      setFileType('txt');\r\n      setLoading(false);\r\n\r\n    } catch (error) {\r\n      console.error('TXT处理错误:', error);\r\n      setLoading(false);\r\n      alert(`TXT文件处理失败: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  // 文件上传处理\r\n  const handleFileUpload = async (event) => {\r\n    const file = event.target.files[0];\r\n    if (!file) return;\r\n\r\n    if (file.size > 100 * 1024 * 1024) {\r\n      alert('文件大小不能超过100MB');\r\n      return;\r\n    }\r\n\r\n    setFileName(file.name);\r\n    setPages([]);\r\n    setCurrentPage(1);\r\n\r\n    if (file.type === 'application/pdf') {\r\n      await handlePdfFile(file);\r\n    } else if (file.type === 'text/plain' || file.name.endsWith('.txt')) {\r\n      await handleTxtFile(file);\r\n    }\r\n  };\r\n\r\n  // 翻页处理\r\n  const handlePageChange = (direction) => {\r\n    const newPage = direction === 'next' \r\n      ? Math.min(currentPage + 1, totalPages)\r\n      : Math.max(currentPage - 1, 1);\r\n    setCurrentPage(newPage);\r\n  };\r\n\r\n  // 渲染页面内容\r\n  const renderPageContent = (pageContent) => {\r\n    // 如果是PDF内容（数组中包含position样式）\r\n    if (pageContent?.[0]?.style?.position === 'absolute') {\r\n      return (\r\n        <div className=\"pdf-page\">\r\n          {pageContent.map((item, index) => (\r\n            <div key={index} style={item.style}>\r\n              {item.text}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      );\r\n    }\r\n    // 如果是TXT内容\r\n    else {\r\n      return (\r\n        <div className=\"txt-page\">\r\n          {pageContent?.map((item, index) => (\r\n            <p key={index} style={item.style}>\r\n              {item.text}\r\n            </p>\r\n          ))}\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App dark\">\r\n      <div className=\"app-container\">\r\n        <h1 className=\"app-title\">ADHD 阅读助手</h1>\r\n        \r\n        <div className=\"control-panel\">\r\n          <input\r\n            type=\"file\"\r\n            accept=\".txt,.pdf\"\r\n            onChange={handleFileUpload}\r\n            id=\"file-upload\"\r\n            className=\"file-input\"\r\n          />\r\n          <label htmlFor=\"file-upload\" className=\"control-btn\">\r\n            选择文件\r\n          </label>\r\n          \r\n          {fileName && (\r\n            <span className=\"file-info\">\r\n              当前文件: {fileName}\r\n            </span>\r\n          )}\r\n          \r\n          <button \r\n            className=\"control-btn\"\r\n            onClick={() => setIsDarkMode(!isDarkMode)}\r\n          >\r\n            切换阅读模式\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"reader-container\">\r\n          {loading ? (\r\n            <div className=\"loading\">\r\n              <div className=\"loading-spinner\"></div>\r\n              <div>正在加载内容，请稍候...</div>\r\n            </div>\r\n          ) : pages.length > 0 ? (\r\n            <div className=\"book-view\">\r\n              <div className=\"page-content\">\r\n                <div className=\"text-content\">\r\n                  {renderPageContent(pages[currentPage - 1])}\r\n                </div>\r\n              </div>\r\n              \r\n              {totalPages > 1 && (\r\n                <>\r\n                  <button \r\n                    className=\"page-btn prev\" \r\n                    onClick={() => handlePageChange('prev')}\r\n                    disabled={currentPage === 1}\r\n                  >\r\n                    ‹\r\n                  </button>\r\n                  <button \r\n                    className=\"page-btn next\" \r\n                    onClick={() => handlePageChange('next')}\r\n                    disabled={currentPage === totalPages}\r\n                  >\r\n                    ›\r\n                  </button>\r\n                  <div className=\"page-number\">\r\n                    {currentPage} / {totalPages}\r\n                  </div>\r\n                </>\r\n              )}\r\n            </div>\r\n          ) : (\r\n            <div className=\"upload-prompt\">\r\n              <p>请上传文件开始阅读</p>\r\n              <p className=\"supported-formats\">支持的格式: PDF, TXT (最大100MB)</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}