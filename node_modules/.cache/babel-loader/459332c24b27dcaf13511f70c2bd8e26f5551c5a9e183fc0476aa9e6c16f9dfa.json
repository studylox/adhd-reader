{"ast":null,"code":"var _jsxFileName = \"D:\\\\adhd-read-helper\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport * as pdfjsLib from 'pdfjs-dist';\nimport * as pdfjsViewer from 'pdfjs-dist/web/pdf_viewer';\nimport './styles/Reader.css';\nimport { pdfjs } from 'pdfjs-dist';\n\n// 设置 PDF.js worker\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\npdfjsLib.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjsLib.version}/pdf.worker.min.js`;\nconst App = () => {\n  _s();\n  // 状态定义\n  const [isDarkMode, setIsDarkMode] = useState(true);\n  const [pages, setPages] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const [fileName, setFileName] = useState('');\n  const [loading, setLoading] = useState(false);\n  const fileRef = useRef(null); // 添加文件引用\n  const [file, setFile] = useState(null);\n  const [pdfInstance, setPdfInstance] = useState(null);\n  const [extractedTextPages, setExtractedTextPages] = useState([]);\n\n  // 初始化PDF.js\n  useEffect(() => {\n    // 确保Worker正确加载\n    pdfjsLib.GlobalWorkerOptions.workerSrc = `https://cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjsLib.version}/pdf.worker.min.js`;\n  }, []);\n\n  // 处理PDF文件\n  const handlePdfFile = async file => {\n    try {\n      console.log(\"开始处理PDF文件\");\n      const fileReader = new FileReader();\n      fileReader.onload = async function () {\n        console.log(\"文件已读取\");\n        const typedarray = new Uint8Array(this.result);\n\n        // 加载PDF文档\n        const loadingTask = pdfjsLib.getDocument(typedarray);\n        const pdf = await loadingTask.promise;\n        console.log(`PDF加载完成，共${pdf.numPages}页`);\n        setPdfInstance(pdf);\n        setTotalPages(pdf.numPages);\n        // 初始化显示第一页\n        renderPage(pdf, 1);\n      };\n      fileReader.readAsArrayBuffer(file);\n    } catch (error) {\n      console.error('PDF处理错误:', error);\n    }\n  };\n  const renderPage = async (pdf, pageNumber) => {\n    try {\n      console.log(`渲染第${pageNumber}页`);\n      const page = await pdf.getPage(pageNumber);\n\n      // 获取文本内容\n      const textContent = await page.getTextContent();\n      console.log(\"获取到文本内容\", textContent.items.length);\n      const pageContainer = document.querySelector('.page-content');\n      if (!pageContainer) {\n        console.error(\"找不到页面容器\");\n        return;\n      }\n\n      // 清空页面容器\n      pageContainer.innerHTML = '';\n\n      // 创建文本容器\n      const textDiv = document.createElement('div');\n      textDiv.className = 'book-page';\n\n      // 分析文本布局\n      let lastY = null;\n      let currentParagraph = null;\n\n      // 按y坐标排序，从上到下\n      const sortedItems = [...textContent.items].sort((a, b) => b.transform[5] - a.transform[5]);\n      sortedItems.forEach(item => {\n        const text = item.str;\n        const y = Math.round(item.transform[5]);\n\n        // 判断是否新段落\n        if (lastY === null || Math.abs(y - lastY) > 12) {\n          // 创建新段落\n          currentParagraph = document.createElement('p');\n          textDiv.appendChild(currentParagraph);\n        }\n\n        // 添加文本\n        if (currentParagraph) {\n          // 在段落中添加文本和空格\n          if (currentParagraph.textContent && !currentParagraph.textContent.endsWith(' ')) {\n            currentParagraph.textContent += ' ';\n          }\n          currentParagraph.textContent += text;\n        }\n        lastY = y;\n      });\n      pageContainer.appendChild(textDiv);\n      console.log(\"页面渲染完成\");\n    } catch (error) {\n      console.error('渲染页面错误:', error);\n    }\n  };\n\n  // 处理TXT文件\n  const handleTxtFile = async file => {\n    try {\n      setLoading(true);\n      const text = await file.text();\n      // 将文本分页处理\n      const pageTexts = text.split('\\n\\n').map(paragraph => [{\n        text: paragraph,\n        x: 40,\n        y: 40,\n        fontSize: 16,\n        fontFamily: 'serif'\n      }]);\n      setPages(pageTexts);\n      setTotalPages(pageTexts.length);\n      setCurrentPage(1);\n      setLoading(false);\n    } catch (error) {\n      console.error('TXT处理错误:', error);\n      setLoading(false);\n      alert('TXT文件处理失败，请重试');\n    }\n  };\n\n  // 文件上传处理\n  const handleFileUpload = async event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    if (file.size > 100 * 1024 * 1024) {\n      alert('文件大小不能超过100MB');\n      return;\n    }\n    setFileName(file.name);\n    setPages([]); // 清空现有页面\n\n    if (file.type === 'application/pdf') {\n      await handlePdfFile(file);\n    } else if (file.type === 'text/plain' || file.name.endsWith('.txt')) {\n      await handleTxtFile(file);\n    }\n  };\n\n  // 翻页函数\n  const changePage = delta => {\n    const newPage = currentPage + delta;\n    if (newPage >= 1 && newPage <= totalPages && pdfInstance) {\n      console.log(`切换到第${newPage}页`);\n      setCurrentPage(newPage);\n      renderPage(pdfInstance, newPage);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `App ${isDarkMode ? 'dark' : 'light'}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"ADHD \\u9605\\u8BFB\\u52A9\\u624B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"upload-btn\",\n            onClick: () => document.getElementById('fileInput').click(),\n            children: \"\\u9009\\u62E9\\u6587\\u4EF6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"fileInput\",\n            type: \"file\",\n            accept: \".pdf,.txt\",\n            style: {\n              display: 'none'\n            },\n            onChange: e => {\n              const file = e.target.files[0];\n              if (file) {\n                console.log(\"选择了文件:\", file.name);\n                setFile(file);\n                setCurrentPage(1);\n                handlePdfFile(file);\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"mode-btn\",\n            children: \"\\u5207\\u6362\\u660E\\u4EAE\\u6A21\\u5F0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reader-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"page-btn prev\",\n          onClick: () => changePage(-1),\n          disabled: currentPage <= 1,\n          children: \"\\u2190\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"page-content\",\n          children: !file && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload-hint\",\n            children: [\"\\u8BF7\\u4E0A\\u4F20\\u6587\\u4EF6\\u5F00\\u59CB\\u9605\\u8BFB\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this), \"\\u652F\\u6301\\u7684\\u683C\\u5F0F: PDF, TXT (\\u6700\\u5927100MB)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"page-btn next\",\n          onClick: () => changePage(1),\n          disabled: currentPage >= totalPages,\n          children: \"\\u2192\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), file && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-info\",\n        children: [\"\\u7B2C \", currentPage, \" \\u9875 / \\u5171 \", totalPages, \" \\u9875\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"iK2DDD9M1ylV/uALPdC87CQFNeo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","pdfjsLib","pdfjsViewer","pdfjs","jsxDEV","_jsxDEV","GlobalWorkerOptions","workerSrc","version","App","_s","isDarkMode","setIsDarkMode","pages","setPages","currentPage","setCurrentPage","totalPages","setTotalPages","fileName","setFileName","loading","setLoading","fileRef","file","setFile","pdfInstance","setPdfInstance","extractedTextPages","setExtractedTextPages","handlePdfFile","console","log","fileReader","FileReader","onload","typedarray","Uint8Array","result","loadingTask","getDocument","pdf","promise","numPages","renderPage","readAsArrayBuffer","error","pageNumber","page","getPage","textContent","getTextContent","items","length","pageContainer","document","querySelector","innerHTML","textDiv","createElement","className","lastY","currentParagraph","sortedItems","sort","a","b","transform","forEach","item","text","str","y","Math","round","abs","appendChild","endsWith","handleTxtFile","pageTexts","split","map","paragraph","x","fontSize","fontFamily","alert","handleFileUpload","event","target","files","size","name","type","changePage","delta","newPage","children","_jsxFileName","lineNumber","columnNumber","onClick","getElementById","click","id","accept","style","display","onChange","e","disabled","_c","$RefreshReg$"],"sources":["D:/adhd-read-helper/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport * as pdfjsLib from 'pdfjs-dist';\nimport * as pdfjsViewer from 'pdfjs-dist/web/pdf_viewer';\nimport './styles/Reader.css';\nimport { pdfjs } from 'pdfjs-dist';\n\n// 设置 PDF.js worker\npdfjsLib.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjsLib.version}/pdf.worker.min.js`;\n\nconst App = () => {\n  // 状态定义\n  const [isDarkMode, setIsDarkMode] = useState(true);\n  const [pages, setPages] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const [fileName, setFileName] = useState('');\n  const [loading, setLoading] = useState(false);\n  const fileRef = useRef(null); // 添加文件引用\n  const [file, setFile] = useState(null);\n  const [pdfInstance, setPdfInstance] = useState(null);\n  const [extractedTextPages, setExtractedTextPages] = useState([]);\n\n  // 初始化PDF.js\n  useEffect(() => {\n    // 确保Worker正确加载\n    pdfjsLib.GlobalWorkerOptions.workerSrc = `https://cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjsLib.version}/pdf.worker.min.js`;\n  }, []);\n\n  // 处理PDF文件\n  const handlePdfFile = async (file) => {\n    try {\n      console.log(\"开始处理PDF文件\");\n      const fileReader = new FileReader();\n      \n      fileReader.onload = async function() {\n        console.log(\"文件已读取\");\n        const typedarray = new Uint8Array(this.result);\n        \n        // 加载PDF文档\n        const loadingTask = pdfjsLib.getDocument(typedarray);\n        const pdf = await loadingTask.promise;\n        console.log(`PDF加载完成，共${pdf.numPages}页`);\n        \n        setPdfInstance(pdf);\n        setTotalPages(pdf.numPages);\n        // 初始化显示第一页\n        renderPage(pdf, 1);\n      };\n      \n      fileReader.readAsArrayBuffer(file);\n    } catch (error) {\n      console.error('PDF处理错误:', error);\n    }\n  };\n  \n  const renderPage = async (pdf, pageNumber) => {\n    try {\n      console.log(`渲染第${pageNumber}页`);\n      const page = await pdf.getPage(pageNumber);\n      \n      // 获取文本内容\n      const textContent = await page.getTextContent();\n      console.log(\"获取到文本内容\", textContent.items.length);\n      \n      const pageContainer = document.querySelector('.page-content');\n      if (!pageContainer) {\n        console.error(\"找不到页面容器\");\n        return;\n      }\n      \n      // 清空页面容器\n      pageContainer.innerHTML = '';\n      \n      // 创建文本容器\n      const textDiv = document.createElement('div');\n      textDiv.className = 'book-page';\n      \n      // 分析文本布局\n      let lastY = null;\n      let currentParagraph = null;\n      \n      // 按y坐标排序，从上到下\n      const sortedItems = [...textContent.items].sort((a, b) => b.transform[5] - a.transform[5]);\n      \n      sortedItems.forEach(item => {\n        const text = item.str;\n        const y = Math.round(item.transform[5]);\n        \n        // 判断是否新段落\n        if (lastY === null || Math.abs(y - lastY) > 12) {\n          // 创建新段落\n          currentParagraph = document.createElement('p');\n          textDiv.appendChild(currentParagraph);\n        }\n        \n        // 添加文本\n        if (currentParagraph) {\n          // 在段落中添加文本和空格\n          if (currentParagraph.textContent && !currentParagraph.textContent.endsWith(' ')) {\n            currentParagraph.textContent += ' ';\n          }\n          currentParagraph.textContent += text;\n        }\n        \n        lastY = y;\n      });\n      \n      pageContainer.appendChild(textDiv);\n      console.log(\"页面渲染完成\");\n      \n    } catch (error) {\n      console.error('渲染页面错误:', error);\n    }\n  };\n\n  // 处理TXT文件\n  const handleTxtFile = async (file) => {\n    try {\n      setLoading(true);\n      const text = await file.text();\n      // 将文本分页处理\n      const pageTexts = text.split('\\n\\n').map(paragraph => [{\n        text: paragraph,\n        x: 40,\n        y: 40,\n        fontSize: 16,\n        fontFamily: 'serif'\n      }]);\n      setPages(pageTexts);\n      setTotalPages(pageTexts.length);\n      setCurrentPage(1);\n      setLoading(false);\n    } catch (error) {\n      console.error('TXT处理错误:', error);\n      setLoading(false);\n      alert('TXT文件处理失败，请重试');\n    }\n  };\n\n  // 文件上传处理\n  const handleFileUpload = async (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    if (file.size > 100 * 1024 * 1024) {\n      alert('文件大小不能超过100MB');\n      return;\n    }\n\n    setFileName(file.name);\n    setPages([]); // 清空现有页面\n\n    if (file.type === 'application/pdf') {\n      await handlePdfFile(file);\n    } else if (file.type === 'text/plain' || file.name.endsWith('.txt')) {\n      await handleTxtFile(file);\n    }\n  };\n\n  // 翻页函数\n  const changePage = (delta) => {\n    const newPage = currentPage + delta;\n    if (newPage >= 1 && newPage <= totalPages && pdfInstance) {\n      console.log(`切换到第${newPage}页`);\n      setCurrentPage(newPage);\n      renderPage(pdfInstance, newPage);\n    }\n  };\n\n  return (\n    <div className={`App ${isDarkMode ? 'dark' : 'light'}`}>\n      <div className=\"app-container\">\n        <header className=\"header\">\n          <h1>ADHD 阅读助手</h1>\n          <div className=\"controls\">\n            <button \n              className=\"upload-btn\"\n              onClick={() => document.getElementById('fileInput').click()}\n            >\n              选择文件\n            </button>\n            <input\n              id=\"fileInput\"\n              type=\"file\"\n              accept=\".pdf,.txt\"\n              style={{ display: 'none' }}\n              onChange={(e) => {\n                const file = e.target.files[0];\n                if (file) {\n                  console.log(\"选择了文件:\", file.name);\n                  setFile(file);\n                  setCurrentPage(1);\n                  handlePdfFile(file);\n                }\n              }}\n            />\n            <button className=\"mode-btn\">\n              切换明亮模式\n            </button>\n          </div>\n        </header>\n        \n        <div className=\"reader-container\">\n          <button \n            className=\"page-btn prev\"\n            onClick={() => changePage(-1)}\n            disabled={currentPage <= 1}\n          >\n            ←\n          </button>\n\n          <div className=\"page-content\">\n            {!file && (\n              <div className=\"upload-hint\">\n                请上传文件开始阅读\n                <br />\n                支持的格式: PDF, TXT (最大100MB)\n              </div>\n            )}\n          </div>\n\n          <button \n            className=\"page-btn next\"\n            onClick={() => changePage(1)}\n            disabled={currentPage >= totalPages}\n          >\n            →\n          </button>\n        </div>\n\n        {file && (\n          <div className=\"page-info\">\n            第 {currentPage} 页 / 共 {totalPages} 页\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}