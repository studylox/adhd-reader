{"ast":null,"code":"var _jsxFileName = \"D:\\\\adhd-read-helper\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport * as pdfjsLib from 'pdfjs-dist';\n\n// 明确指定使用 3.11.174 版本的 worker\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PDFJS_WORKER_URL = 'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/3.11.174/pdf.worker.min.js';\n\n// 设置 worker\npdfjsLib.GlobalWorkerOptions.workerSrc = PDFJS_WORKER_URL;\nfunction App() {\n  _s();\n  var _pages;\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const [pages, setPages] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const [fileName, setFileName] = useState('');\n  const [loading, setLoading] = useState(false);\n  const fileRef = useRef(null);\n\n  // 处理PDF文件\n  const handlePdfFile = async file => {\n    try {\n      setLoading(true);\n      console.log('开始处理PDF文件:', file.name); // 调试日志\n\n      // 读取文件\n      const fileArrayBuffer = await new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = () => resolve(reader.result);\n        reader.onerror = reject;\n        reader.readAsArrayBuffer(file);\n      });\n      console.log('文件读取完成，开始加载PDF'); // 调试日志\n\n      // 加载PDF文档\n      const loadingTask = pdfjsLib.getDocument({\n        data: fileArrayBuffer\n      });\n      const pdf = await loadingTask.promise;\n      console.log('PDF加载成功，总页数:', pdf.numPages); // 调试日志\n\n      setTotalPages(pdf.numPages);\n      fileRef.current = file;\n\n      // 清空现有页面\n      setPages([]);\n\n      // 加载第一页\n      const page = await pdf.getPage(1);\n      const viewport = page.getViewport({\n        scale: 1.5\n      });\n\n      // 创建canvas\n      const canvas = document.createElement('canvas');\n      const context = canvas.getContext('2d');\n\n      // 设置canvas尺寸\n      canvas.height = viewport.height;\n      canvas.width = viewport.width;\n      console.log('开始渲染页面，尺寸:', viewport.width, 'x', viewport.height); // 调试日志\n\n      // 渲染PDF页面\n      await page.render({\n        canvasContext: context,\n        viewport: viewport\n      }).promise;\n      console.log('页面渲染完成'); // 调试日志\n\n      // 将渲染结果添加到页面数组\n      const pageImage = canvas.toDataURL('image/jpeg', 0.8);\n      setPages([pageImage]);\n      setLoading(false);\n      console.log('PDF处理完成'); // 调试日志\n    } catch (error) {\n      console.error('PDF处理错误:', error);\n      setLoading(false);\n      alert(`PDF处理失败: ${error.message}`);\n    }\n  };\n\n  // 加载指定页面\n  const loadPage = async pageNumber => {\n    if (!fileRef.current) {\n      console.error('没有找到PDF文件引用');\n      return;\n    }\n    try {\n      setLoading(true);\n      console.log(`开始加载第 ${pageNumber} 页`); // 调试日志\n\n      const fileArrayBuffer = await new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = () => resolve(reader.result);\n        reader.onerror = reject;\n        reader.readAsArrayBuffer(fileRef.current);\n      });\n      const pdf = await pdfjsLib.getDocument({\n        data: fileArrayBuffer\n      }).promise;\n      const page = await pdf.getPage(pageNumber);\n      const viewport = page.getViewport({\n        scale: 1.5\n      });\n      const canvas = document.createElement('canvas');\n      const context = canvas.getContext('2d');\n      canvas.height = viewport.height;\n      canvas.width = viewport.width;\n      await page.render({\n        canvasContext: context,\n        viewport: viewport\n      }).promise;\n      const pageImage = canvas.toDataURL('image/jpeg', 0.8);\n      setPages(prevPages => {\n        const newPages = [...prevPages];\n        newPages[pageNumber - 1] = pageImage;\n        return newPages;\n      });\n      console.log(`第 ${pageNumber} 页加载完成`); // 调试日志\n      setLoading(false);\n    } catch (error) {\n      console.error(`加载第 ${pageNumber} 页时出错:`, error);\n      setLoading(false);\n      alert(`加载页面失败: ${error.message}`);\n    }\n  };\n\n  // 文件上传处理\n  const handleFileUpload = async event => {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    // 检查文件大小（100MB限制）\n    if (file.size > 100 * 1024 * 1024) {\n      alert('文件大小不能超过100MB');\n      return;\n    }\n    setFileName(file.name);\n    setPages([]);\n    setCurrentPage(1);\n    console.log('文件类型:', file.type); // 调试日志\n\n    if (file.type === 'application/pdf') {\n      await handlePdfFile(file);\n    } else {\n      // 处理文本文件\n      try {\n        const text = await file.text();\n        const textPages = text.split('\\n\\n').filter(page => page.trim());\n        setPages(textPages);\n        setTotalPages(textPages.length);\n      } catch (error) {\n        console.error('文件读取失败:', error);\n        alert('文件读取失败，请重试');\n      }\n    }\n  };\n\n  // 翻页处理\n  const handlePageChange = direction => {\n    const newPage = direction === 'next' ? Math.min(currentPage + 1, totalPages) : Math.max(currentPage - 1, 1);\n    setCurrentPage(newPage);\n    if (pages[newPage - 1] === undefined) {\n      loadPage(newPage);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `App ${isDarkMode ? 'dark' : 'light'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ADHD \\u9605\\u8BFB\\u52A9\\u624B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".txt,.md,.pdf\",\n          onChange: handleFileUpload,\n          id: \"file-upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file-upload\",\n          children: \"\\u9009\\u62E9\\u6587\\u4EF6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), fileName && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"file-name\",\n          children: [\"\\u5F53\\u524D\\u6587\\u4EF6: \", fileName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsDarkMode(!isDarkMode),\n          children: [\"\\u5207\\u6362\", isDarkMode ? '明亮' : '暗黑', \"\\u6A21\\u5F0F\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reader-container\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"\\u6B63\\u5728\\u52A0\\u8F7DPDF\\uFF0C\\u8BF7\\u7A0D\\u5019...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this) : pages.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"book-view\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"page-btn prev\",\n          onClick: () => handlePageChange('prev'),\n          disabled: currentPage === 1,\n          children: \"\\u2039\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"page-content\",\n          children: (_pages = pages[currentPage - 1]) !== null && _pages !== void 0 && _pages.startsWith('data:image') ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: pages[currentPage - 1],\n            alt: `页面 ${currentPage}`,\n            style: {\n              maxWidth: '100%',\n              height: 'auto'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-content\",\n            children: pages[currentPage - 1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"page-btn next\",\n          onClick: () => handlePageChange('next'),\n          disabled: currentPage === totalPages,\n          children: \"\\u203A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"page-number\",\n          children: [currentPage, \" / \", totalPages]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-prompt\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u8BF7\\u4E0A\\u4F20\\u6587\\u4EF6\\u5F00\\u59CB\\u9605\\u8BFB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u652F\\u6301\\u7684\\u683C\\u5F0F: PDF, TXT, MD (\\u6700\\u5927100MB)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Z4KWbfzHOagHlo/IKUL9fJlUBjQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","pdfjsLib","jsxDEV","_jsxDEV","PDFJS_WORKER_URL","GlobalWorkerOptions","workerSrc","App","_s","_pages","isDarkMode","setIsDarkMode","pages","setPages","currentPage","setCurrentPage","totalPages","setTotalPages","fileName","setFileName","loading","setLoading","fileRef","handlePdfFile","file","console","log","name","fileArrayBuffer","Promise","resolve","reject","reader","FileReader","onload","result","onerror","readAsArrayBuffer","loadingTask","getDocument","data","pdf","promise","numPages","current","page","getPage","viewport","getViewport","scale","canvas","document","createElement","context","getContext","height","width","render","canvasContext","pageImage","toDataURL","error","alert","message","loadPage","pageNumber","prevPages","newPages","handleFileUpload","event","target","files","size","type","text","textPages","split","filter","trim","length","handlePageChange","direction","newPage","Math","min","max","undefined","className","children","_jsxFileName","lineNumber","columnNumber","accept","onChange","id","htmlFor","onClick","disabled","startsWith","src","alt","style","maxWidth","_c","$RefreshReg$"],"sources":["D:/adhd-read-helper/src/App.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport * as pdfjsLib from 'pdfjs-dist';\r\n\r\n// 明确指定使用 3.11.174 版本的 worker\r\nconst PDFJS_WORKER_URL = 'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/3.11.174/pdf.worker.min.js';\r\n\r\n// 设置 worker\r\npdfjsLib.GlobalWorkerOptions.workerSrc = PDFJS_WORKER_URL;\r\n\r\nfunction App() {\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n  const [pages, setPages] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const [fileName, setFileName] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const fileRef = useRef(null);\r\n\r\n  // 处理PDF文件\r\n  const handlePdfFile = async (file) => {\r\n    try {\r\n      setLoading(true);\r\n      console.log('开始处理PDF文件:', file.name); // 调试日志\r\n\r\n      // 读取文件\r\n      const fileArrayBuffer = await new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = reject;\r\n        reader.readAsArrayBuffer(file);\r\n      });\r\n\r\n      console.log('文件读取完成，开始加载PDF'); // 调试日志\r\n\r\n      // 加载PDF文档\r\n      const loadingTask = pdfjsLib.getDocument({ data: fileArrayBuffer });\r\n      const pdf = await loadingTask.promise;\r\n      \r\n      console.log('PDF加载成功，总页数:', pdf.numPages); // 调试日志\r\n      \r\n      setTotalPages(pdf.numPages);\r\n      fileRef.current = file;\r\n\r\n      // 清空现有页面\r\n      setPages([]);\r\n\r\n      // 加载第一页\r\n      const page = await pdf.getPage(1);\r\n      const viewport = page.getViewport({ scale: 1.5 });\r\n      \r\n      // 创建canvas\r\n      const canvas = document.createElement('canvas');\r\n      const context = canvas.getContext('2d');\r\n      \r\n      // 设置canvas尺寸\r\n      canvas.height = viewport.height;\r\n      canvas.width = viewport.width;\r\n\r\n      console.log('开始渲染页面，尺寸:', viewport.width, 'x', viewport.height); // 调试日志\r\n\r\n      // 渲染PDF页面\r\n      await page.render({\r\n        canvasContext: context,\r\n        viewport: viewport\r\n      }).promise;\r\n\r\n      console.log('页面渲染完成'); // 调试日志\r\n\r\n      // 将渲染结果添加到页面数组\r\n      const pageImage = canvas.toDataURL('image/jpeg', 0.8);\r\n      setPages([pageImage]);\r\n      \r\n      setLoading(false);\r\n      console.log('PDF处理完成'); // 调试日志\r\n\r\n    } catch (error) {\r\n      console.error('PDF处理错误:', error);\r\n      setLoading(false);\r\n      alert(`PDF处理失败: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  // 加载指定页面\r\n  const loadPage = async (pageNumber) => {\r\n    if (!fileRef.current) {\r\n      console.error('没有找到PDF文件引用');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      console.log(`开始加载第 ${pageNumber} 页`); // 调试日志\r\n\r\n      const fileArrayBuffer = await new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = reject;\r\n        reader.readAsArrayBuffer(fileRef.current);\r\n      });\r\n\r\n      const pdf = await pdfjsLib.getDocument({ data: fileArrayBuffer }).promise;\r\n      const page = await pdf.getPage(pageNumber);\r\n      const viewport = page.getViewport({ scale: 1.5 });\r\n      \r\n      const canvas = document.createElement('canvas');\r\n      const context = canvas.getContext('2d');\r\n      canvas.height = viewport.height;\r\n      canvas.width = viewport.width;\r\n\r\n      await page.render({\r\n        canvasContext: context,\r\n        viewport: viewport\r\n      }).promise;\r\n\r\n      const pageImage = canvas.toDataURL('image/jpeg', 0.8);\r\n      \r\n      setPages(prevPages => {\r\n        const newPages = [...prevPages];\r\n        newPages[pageNumber - 1] = pageImage;\r\n        return newPages;\r\n      });\r\n\r\n      console.log(`第 ${pageNumber} 页加载完成`); // 调试日志\r\n      setLoading(false);\r\n\r\n    } catch (error) {\r\n      console.error(`加载第 ${pageNumber} 页时出错:`, error);\r\n      setLoading(false);\r\n      alert(`加载页面失败: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  // 文件上传处理\r\n  const handleFileUpload = async (event) => {\r\n    const file = event.target.files[0];\r\n    if (!file) return;\r\n\r\n    // 检查文件大小（100MB限制）\r\n    if (file.size > 100 * 1024 * 1024) {\r\n      alert('文件大小不能超过100MB');\r\n      return;\r\n    }\r\n\r\n    setFileName(file.name);\r\n    setPages([]);\r\n    setCurrentPage(1);\r\n\r\n    console.log('文件类型:', file.type); // 调试日志\r\n\r\n    if (file.type === 'application/pdf') {\r\n      await handlePdfFile(file);\r\n    } else {\r\n      // 处理文本文件\r\n      try {\r\n        const text = await file.text();\r\n        const textPages = text.split('\\n\\n').filter(page => page.trim());\r\n        setPages(textPages);\r\n        setTotalPages(textPages.length);\r\n      } catch (error) {\r\n        console.error('文件读取失败:', error);\r\n        alert('文件读取失败，请重试');\r\n      }\r\n    }\r\n  };\r\n\r\n  // 翻页处理\r\n  const handlePageChange = (direction) => {\r\n    const newPage = direction === 'next' \r\n      ? Math.min(currentPage + 1, totalPages)\r\n      : Math.max(currentPage - 1, 1);\r\n    \r\n    setCurrentPage(newPage);\r\n    if (pages[newPage - 1] === undefined) {\r\n      loadPage(newPage);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`App ${isDarkMode ? 'dark' : 'light'}`}>\r\n      <div className=\"app-header\">\r\n        <h1>ADHD 阅读助手</h1>\r\n        <div className=\"controls\">\r\n          <input\r\n            type=\"file\"\r\n            accept=\".txt,.md,.pdf\"\r\n            onChange={handleFileUpload}\r\n            id=\"file-upload\"\r\n          />\r\n          <label htmlFor=\"file-upload\">选择文件</label>\r\n          {fileName && <span className=\"file-name\">当前文件: {fileName}</span>}\r\n          <button onClick={() => setIsDarkMode(!isDarkMode)}>\r\n            切换{isDarkMode ? '明亮' : '暗黑'}模式\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"reader-container\">\r\n        {loading ? (\r\n          <div className=\"loading\">\r\n            <div className=\"loading-spinner\"></div>\r\n            <div>正在加载PDF，请稍候...</div>\r\n          </div>\r\n        ) : pages.length > 0 ? (\r\n          <div className=\"book-view\">\r\n            <button \r\n              className=\"page-btn prev\" \r\n              onClick={() => handlePageChange('prev')}\r\n              disabled={currentPage === 1}\r\n            >\r\n              ‹\r\n            </button>\r\n            <div className=\"page-content\">\r\n              {pages[currentPage - 1]?.startsWith('data:image') ? (\r\n                <img \r\n                  src={pages[currentPage - 1]} \r\n                  alt={`页面 ${currentPage}`}\r\n                  style={{ maxWidth: '100%', height: 'auto' }}\r\n                />\r\n              ) : (\r\n                <div className=\"text-content\">\r\n                  {pages[currentPage - 1]}\r\n                </div>\r\n              )}\r\n            </div>\r\n            <button \r\n              className=\"page-btn next\" \r\n              onClick={() => handlePageChange('next')}\r\n              disabled={currentPage === totalPages}\r\n            >\r\n              ›\r\n            </button>\r\n            <div className=\"page-number\">\r\n              {currentPage} / {totalPages}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"upload-prompt\">\r\n            <p>请上传文件开始阅读</p>\r\n            <p>支持的格式: PDF, TXT, MD (最大100MB)</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,OAAO,KAAKC,QAAQ,MAAM,YAAY;;AAEtC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,gBAAgB,GAAG,0EAA0E;;AAEnG;AACAH,QAAQ,CAACI,mBAAmB,CAACC,SAAS,GAAGF,gBAAgB;AAEzD,SAASG,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,MAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACiB,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACmB,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACqB,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMuB,OAAO,GAAGtB,MAAM,CAAC,IAAI,CAAC;;EAE5B;EACA,MAAMuB,aAAa,GAAG,MAAOC,IAAI,IAAK;IACpC,IAAI;MACFH,UAAU,CAAC,IAAI,CAAC;MAChBI,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEF,IAAI,CAACG,IAAI,CAAC,CAAC,CAAC;;MAEtC;MACA,MAAMC,eAAe,GAAG,MAAM,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;QAC7D,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;QAC/BD,MAAM,CAACE,MAAM,GAAG,MAAMJ,OAAO,CAACE,MAAM,CAACG,MAAM,CAAC;QAC5CH,MAAM,CAACI,OAAO,GAAGL,MAAM;QACvBC,MAAM,CAACK,iBAAiB,CAACb,IAAI,CAAC;MAChC,CAAC,CAAC;MAEFC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC,CAAC,CAAC;;MAE/B;MACA,MAAMY,WAAW,GAAGrC,QAAQ,CAACsC,WAAW,CAAC;QAAEC,IAAI,EAAEZ;MAAgB,CAAC,CAAC;MACnE,MAAMa,GAAG,GAAG,MAAMH,WAAW,CAACI,OAAO;MAErCjB,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEe,GAAG,CAACE,QAAQ,CAAC,CAAC,CAAC;;MAE3C1B,aAAa,CAACwB,GAAG,CAACE,QAAQ,CAAC;MAC3BrB,OAAO,CAACsB,OAAO,GAAGpB,IAAI;;MAEtB;MACAX,QAAQ,CAAC,EAAE,CAAC;;MAEZ;MACA,MAAMgC,IAAI,GAAG,MAAMJ,GAAG,CAACK,OAAO,CAAC,CAAC,CAAC;MACjC,MAAMC,QAAQ,GAAGF,IAAI,CAACG,WAAW,CAAC;QAAEC,KAAK,EAAE;MAAI,CAAC,CAAC;;MAEjD;MACA,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;MAC/C,MAAMC,OAAO,GAAGH,MAAM,CAACI,UAAU,CAAC,IAAI,CAAC;;MAEvC;MACAJ,MAAM,CAACK,MAAM,GAAGR,QAAQ,CAACQ,MAAM;MAC/BL,MAAM,CAACM,KAAK,GAAGT,QAAQ,CAACS,KAAK;MAE7B/B,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEqB,QAAQ,CAACS,KAAK,EAAE,GAAG,EAAET,QAAQ,CAACQ,MAAM,CAAC,CAAC,CAAC;;MAEjE;MACA,MAAMV,IAAI,CAACY,MAAM,CAAC;QAChBC,aAAa,EAAEL,OAAO;QACtBN,QAAQ,EAAEA;MACZ,CAAC,CAAC,CAACL,OAAO;MAEVjB,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;;MAEvB;MACA,MAAMiC,SAAS,GAAGT,MAAM,CAACU,SAAS,CAAC,YAAY,EAAE,GAAG,CAAC;MACrD/C,QAAQ,CAAC,CAAC8C,SAAS,CAAC,CAAC;MAErBtC,UAAU,CAAC,KAAK,CAAC;MACjBI,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;IAE1B,CAAC,CAAC,OAAOmC,KAAK,EAAE;MACdpC,OAAO,CAACoC,KAAK,CAAC,UAAU,EAAEA,KAAK,CAAC;MAChCxC,UAAU,CAAC,KAAK,CAAC;MACjByC,KAAK,CAAC,YAAYD,KAAK,CAACE,OAAO,EAAE,CAAC;IACpC;EACF,CAAC;;EAED;EACA,MAAMC,QAAQ,GAAG,MAAOC,UAAU,IAAK;IACrC,IAAI,CAAC3C,OAAO,CAACsB,OAAO,EAAE;MACpBnB,OAAO,CAACoC,KAAK,CAAC,aAAa,CAAC;MAC5B;IACF;IAEA,IAAI;MACFxC,UAAU,CAAC,IAAI,CAAC;MAChBI,OAAO,CAACC,GAAG,CAAC,SAASuC,UAAU,IAAI,CAAC,CAAC,CAAC;;MAEtC,MAAMrC,eAAe,GAAG,MAAM,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;QAC7D,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;QAC/BD,MAAM,CAACE,MAAM,GAAG,MAAMJ,OAAO,CAACE,MAAM,CAACG,MAAM,CAAC;QAC5CH,MAAM,CAACI,OAAO,GAAGL,MAAM;QACvBC,MAAM,CAACK,iBAAiB,CAACf,OAAO,CAACsB,OAAO,CAAC;MAC3C,CAAC,CAAC;MAEF,MAAMH,GAAG,GAAG,MAAMxC,QAAQ,CAACsC,WAAW,CAAC;QAAEC,IAAI,EAAEZ;MAAgB,CAAC,CAAC,CAACc,OAAO;MACzE,MAAMG,IAAI,GAAG,MAAMJ,GAAG,CAACK,OAAO,CAACmB,UAAU,CAAC;MAC1C,MAAMlB,QAAQ,GAAGF,IAAI,CAACG,WAAW,CAAC;QAAEC,KAAK,EAAE;MAAI,CAAC,CAAC;MAEjD,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;MAC/C,MAAMC,OAAO,GAAGH,MAAM,CAACI,UAAU,CAAC,IAAI,CAAC;MACvCJ,MAAM,CAACK,MAAM,GAAGR,QAAQ,CAACQ,MAAM;MAC/BL,MAAM,CAACM,KAAK,GAAGT,QAAQ,CAACS,KAAK;MAE7B,MAAMX,IAAI,CAACY,MAAM,CAAC;QAChBC,aAAa,EAAEL,OAAO;QACtBN,QAAQ,EAAEA;MACZ,CAAC,CAAC,CAACL,OAAO;MAEV,MAAMiB,SAAS,GAAGT,MAAM,CAACU,SAAS,CAAC,YAAY,EAAE,GAAG,CAAC;MAErD/C,QAAQ,CAACqD,SAAS,IAAI;QACpB,MAAMC,QAAQ,GAAG,CAAC,GAAGD,SAAS,CAAC;QAC/BC,QAAQ,CAACF,UAAU,GAAG,CAAC,CAAC,GAAGN,SAAS;QACpC,OAAOQ,QAAQ;MACjB,CAAC,CAAC;MAEF1C,OAAO,CAACC,GAAG,CAAC,KAAKuC,UAAU,QAAQ,CAAC,CAAC,CAAC;MACtC5C,UAAU,CAAC,KAAK,CAAC;IAEnB,CAAC,CAAC,OAAOwC,KAAK,EAAE;MACdpC,OAAO,CAACoC,KAAK,CAAC,OAAOI,UAAU,QAAQ,EAAEJ,KAAK,CAAC;MAC/CxC,UAAU,CAAC,KAAK,CAAC;MACjByC,KAAK,CAAC,WAAWD,KAAK,CAACE,OAAO,EAAE,CAAC;IACnC;EACF,CAAC;;EAED;EACA,MAAMK,gBAAgB,GAAG,MAAOC,KAAK,IAAK;IACxC,MAAM7C,IAAI,GAAG6C,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,IAAI,CAAC/C,IAAI,EAAE;;IAEX;IACA,IAAIA,IAAI,CAACgD,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,EAAE;MACjCV,KAAK,CAAC,eAAe,CAAC;MACtB;IACF;IAEA3C,WAAW,CAACK,IAAI,CAACG,IAAI,CAAC;IACtBd,QAAQ,CAAC,EAAE,CAAC;IACZE,cAAc,CAAC,CAAC,CAAC;IAEjBU,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,IAAI,CAACiD,IAAI,CAAC,CAAC,CAAC;;IAEjC,IAAIjD,IAAI,CAACiD,IAAI,KAAK,iBAAiB,EAAE;MACnC,MAAMlD,aAAa,CAACC,IAAI,CAAC;IAC3B,CAAC,MAAM;MACL;MACA,IAAI;QACF,MAAMkD,IAAI,GAAG,MAAMlD,IAAI,CAACkD,IAAI,CAAC,CAAC;QAC9B,MAAMC,SAAS,GAAGD,IAAI,CAACE,KAAK,CAAC,MAAM,CAAC,CAACC,MAAM,CAAChC,IAAI,IAAIA,IAAI,CAACiC,IAAI,CAAC,CAAC,CAAC;QAChEjE,QAAQ,CAAC8D,SAAS,CAAC;QACnB1D,aAAa,CAAC0D,SAAS,CAACI,MAAM,CAAC;MACjC,CAAC,CAAC,OAAOlB,KAAK,EAAE;QACdpC,OAAO,CAACoC,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;QAC/BC,KAAK,CAAC,YAAY,CAAC;MACrB;IACF;EACF,CAAC;;EAED;EACA,MAAMkB,gBAAgB,GAAIC,SAAS,IAAK;IACtC,MAAMC,OAAO,GAAGD,SAAS,KAAK,MAAM,GAChCE,IAAI,CAACC,GAAG,CAACtE,WAAW,GAAG,CAAC,EAAEE,UAAU,CAAC,GACrCmE,IAAI,CAACE,GAAG,CAACvE,WAAW,GAAG,CAAC,EAAE,CAAC,CAAC;IAEhCC,cAAc,CAACmE,OAAO,CAAC;IACvB,IAAItE,KAAK,CAACsE,OAAO,GAAG,CAAC,CAAC,KAAKI,SAAS,EAAE;MACpCtB,QAAQ,CAACkB,OAAO,CAAC;IACnB;EACF,CAAC;EAED,oBACE/E,OAAA;IAAKoF,SAAS,EAAE,OAAO7E,UAAU,GAAG,MAAM,GAAG,OAAO,EAAG;IAAA8E,QAAA,gBACrDrF,OAAA;MAAKoF,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBrF,OAAA;QAAAqF,QAAA,EAAI;MAAS;QAAAtE,QAAA,EAAAuE,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClBxF,OAAA;QAAKoF,SAAS,EAAC,UAAU;QAAAC,QAAA,gBACvBrF,OAAA;UACEsE,IAAI,EAAC,MAAM;UACXmB,MAAM,EAAC,eAAe;UACtBC,QAAQ,EAAEzB,gBAAiB;UAC3B0B,EAAE,EAAC;QAAa;UAAA5E,QAAA,EAAAuE,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjB,CAAC,eACFxF,OAAA;UAAO4F,OAAO,EAAC,aAAa;UAAAP,QAAA,EAAC;QAAI;UAAAtE,QAAA,EAAAuE,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,EACxCzE,QAAQ,iBAAIf,OAAA;UAAMoF,SAAS,EAAC,WAAW;UAAAC,QAAA,GAAC,4BAAM,EAACtE,QAAQ;QAAA;UAAAA,QAAA,EAAAuE,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAChExF,OAAA;UAAQ6F,OAAO,EAAEA,CAAA,KAAMrF,aAAa,CAAC,CAACD,UAAU,CAAE;UAAA8E,QAAA,GAAC,cAC/C,EAAC9E,UAAU,GAAG,IAAI,GAAG,IAAI,EAAC,cAC9B;QAAA;UAAAQ,QAAA,EAAAuE,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAzE,QAAA,EAAAuE,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAzE,QAAA,EAAAuE,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENxF,OAAA;MAAKoF,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAC9BpE,OAAO,gBACNjB,OAAA;QAAKoF,SAAS,EAAC,SAAS;QAAAC,QAAA,gBACtBrF,OAAA;UAAKoF,SAAS,EAAC;QAAiB;UAAArE,QAAA,EAAAuE,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACvCxF,OAAA;UAAAqF,QAAA,EAAK;QAAc;UAAAtE,QAAA,EAAAuE,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAzE,QAAA,EAAAuE,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC,GACJ/E,KAAK,CAACmE,MAAM,GAAG,CAAC,gBAClB5E,OAAA;QAAKoF,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACxBrF,OAAA;UACEoF,SAAS,EAAC,eAAe;UACzBS,OAAO,EAAEA,CAAA,KAAMhB,gBAAgB,CAAC,MAAM,CAAE;UACxCiB,QAAQ,EAAEnF,WAAW,KAAK,CAAE;UAAA0E,QAAA,EAC7B;QAED;UAAAtE,QAAA,EAAAuE,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTxF,OAAA;UAAKoF,SAAS,EAAC,cAAc;UAAAC,QAAA,EAC1B,CAAA/E,MAAA,GAAAG,KAAK,CAACE,WAAW,GAAG,CAAC,CAAC,cAAAL,MAAA,eAAtBA,MAAA,CAAwByF,UAAU,CAAC,YAAY,CAAC,gBAC/C/F,OAAA;YACEgG,GAAG,EAAEvF,KAAK,CAACE,WAAW,GAAG,CAAC,CAAE;YAC5BsF,GAAG,EAAE,MAAMtF,WAAW,EAAG;YACzBuF,KAAK,EAAE;cAAEC,QAAQ,EAAE,MAAM;cAAE/C,MAAM,EAAE;YAAO;UAAE;YAAArC,QAAA,EAAAuE,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7C,CAAC,gBAEFxF,OAAA;YAAKoF,SAAS,EAAC,cAAc;YAAAC,QAAA,EAC1B5E,KAAK,CAACE,WAAW,GAAG,CAAC;UAAC;YAAAI,QAAA,EAAAuE,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpB;QACN;UAAAzE,QAAA,EAAAuE,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eACNxF,OAAA;UACEoF,SAAS,EAAC,eAAe;UACzBS,OAAO,EAAEA,CAAA,KAAMhB,gBAAgB,CAAC,MAAM,CAAE;UACxCiB,QAAQ,EAAEnF,WAAW,KAAKE,UAAW;UAAAwE,QAAA,EACtC;QAED;UAAAtE,QAAA,EAAAuE,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTxF,OAAA;UAAKoF,SAAS,EAAC,aAAa;UAAAC,QAAA,GACzB1E,WAAW,EAAC,KAAG,EAACE,UAAU;QAAA;UAAAE,QAAA,EAAAuE,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB,CAAC;MAAA;QAAAzE,QAAA,EAAAuE,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,gBAENxF,OAAA;QAAKoF,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5BrF,OAAA;UAAAqF,QAAA,EAAG;QAAS;UAAAtE,QAAA,EAAAuE,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAChBxF,OAAA;UAAAqF,QAAA,EAAG;QAA6B;UAAAtE,QAAA,EAAAuE,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAzE,QAAA,EAAAuE,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC;IACN;MAAAzE,QAAA,EAAAuE,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAzE,QAAA,EAAAuE,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACnF,EAAA,CA3OQD,GAAG;AAAAgG,EAAA,GAAHhG,GAAG;AA6OZ,eAAeA,GAAG;AAAC,IAAAgG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}