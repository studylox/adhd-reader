{"ast":null,"code":"var _jsxFileName = \"D:\\\\adhd-read-helper\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport * as pdfjsLib from 'pdfjs-dist';\nimport * as pdfjsViewer from 'pdfjs-dist/web/pdf_viewer';\nimport { marked } from 'marked'; // 需要安装: npm install marked\nimport './styles/Reader.css';\nimport { pdfjs } from 'pdfjs-dist';\n\n// 设置 PDF.js worker\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\npdfjsLib.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjsLib.version}/pdf.worker.min.js`;\n\n// 模拟NLP词性标注功能（实际应用中建议使用专业NLP库如nlp.js或调用API）\nconst tagPartsOfSpeech = text => {\n  // 使用简单的规则来标记常见名词\n  const commonNouns = ['书', '文章', '段落', '章节', '内容', '主题', '观点', '概念', '理论', '方法', '系统', '工具', '设备', '材料', '资源', '数据', '信息', '知识', '技能', '能力', '时间', '空间', '位置', '方向', '距离', '速度', '温度', '压力', '能量', '力量', '人', '物', '事', '理', '情', '意', '心', '身', '手', '脚', '头', '眼', '耳', '口', '鼻', '家', '国', '城', '乡', '村', '路', '桥', '楼', '房', '屋', '门', '窗', '墙', '地', '天', '日', '月', '星', '云', '雨', '雪', '风', '雷', '电', '火', '水', '土', '木', '金', '石', '花', '草', '树', '鸟', '兽', '虫', '鱼', '虾', '蟹', '贝', '螺', '蚌', '龟', '蛇', '蛙', '鸡', '鸭', '鹅', '猪', '牛', '羊', '马', '狗', '猫', '兔', '鼠', '熊', '虎', '狮', '象', '龙', '凤', '鹤', '鹰', '鸽', '雀', '燕', '蝶', '蜂', '蚁', '蝇', '蚊', '蚤', '虱', '蜱', '书', '笔', '纸', '墨', '砚', '桌', '椅', '床', '柜', '箱', '包', '袋', '盒', '瓶', '罐', '碗', '盘', '杯', '壶', '锅', '勺', '筷', '刀', '剪', '针', '线', '布', '衣', '裤', '鞋', '帽', '袜', '巾', '被', '枕', '席', '毯', '垫', '帘', '幕', '屏', '镜', '钟', '表', '灯', '车', '船', '飞机', '火车', '汽车', '自行车', '摩托车', '电动车', '公交车', '地铁', '高铁', '电脑', '手机', '平板', '电视', '音响', '耳机', '相机', '打印机', '扫描仪', '投影仪', '路由器', '软件', '硬件', '程序', '系统', '网络', '数据', '文件', '文件夹', '图标', '按钮', '菜单', '窗口', '学校', '医院', '银行', '商店', '餐厅', '酒店', '公园', '广场', '车站', '机场', '码头', '港口', '公司', '企业', '工厂', '农场', '市场', '超市', '商场', '书店', '图书馆', '博物馆', '美术馆', '政府', '部门', '机构', '组织', '团体', '协会', '联盟', '委员会', '办公室', '会议室', '教室', '老师', '学生', '医生', '护士', '警察', '消防员', '工程师', '设计师', '艺术家', '作家', '记者', '科学家', '研究员', '教授', '专家', '顾问', '经理', '主管', '主任', '部长', '局长', '市长', '国家', '民族', '文化', '历史', '传统', '习俗', '节日', '礼仪', '艺术', '音乐', '舞蹈', '戏剧', '体育', '运动', '比赛', '训练', '健身', '瑜伽', '游泳', '跑步', '篮球', '足球', '排球', '网球', '食物', '饮料', '水果', '蔬菜', '肉类', '海鲜', '主食', '零食', '点心', '糖果', '巧克力', '蛋糕', '天气', '气候', '季节', '温度', '湿度', '气压', '风向', '风速', '降水', '云量', '日照', '雾霾'];\n  let highlightedText = text;\n\n  // 按长度从长到短排序，避免短词替换影响长词\n  commonNouns.sort((a, b) => b.length - a.length);\n  commonNouns.forEach(noun => {\n    const regex = new RegExp(noun, 'g');\n    highlightedText = highlightedText.replace(regex, `<span class=\"noun-highlight\">${noun}</span>`);\n  });\n  return highlightedText;\n};\nconst App = () => {\n  _s();\n  // 状态定义\n  const [isDarkMode, setIsDarkMode] = useState(true);\n  const [pages, setPages] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const [fileName, setFileName] = useState('');\n  const [loading, setLoading] = useState(false);\n  const fileRef = useRef(null); // 添加文件引用\n  const [file, setFile] = useState(null);\n  const [pdfInstance, setPdfInstance] = useState(null);\n  const [extractedTextPages, setExtractedTextPages] = useState([]);\n  const [readingMode, setReadingMode] = useState('static'); // static, follow-mouse, auto-guide\n  const [highlightColor, setHighlightColor] = useState('#ffeb3b'); // 默认高亮颜色\n  const [highlightPOS, setHighlightPOS] = useState(['noun']); // 默认高亮词性\n  const [markdownContent, setMarkdownContent] = useState('');\n  const readerContainerRef = useRef(null);\n  const autoReadGuideRef = useRef(null);\n  const autoReadIntervalRef = useRef(null);\n  const [content, setContent] = useState('');\n  const [pdfDocument, setPdfDocument] = useState(null);\n\n  // 初始化PDF.js\n  useEffect(() => {\n    pdfjsLib.GlobalWorkerOptions.workerSrc = `https://cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjsLib.version}/pdf.worker.min.js`;\n\n    // 设置高亮颜色\n    document.documentElement.style.setProperty('--highlight-color', highlightColor);\n    return () => {\n      // 清理自动阅读定时器\n      if (autoReadIntervalRef.current) {\n        clearInterval(autoReadIntervalRef.current);\n      }\n    };\n  }, [highlightColor]);\n\n  // 当阅读模式改变时应用效果\n  useEffect(() => {\n    if (readingMode === 'auto-guide') {\n      startAutoReadGuide();\n    } else if (autoReadIntervalRef.current) {\n      clearInterval(autoReadIntervalRef.current);\n    }\n  }, [readingMode, markdownContent]);\n\n  // 修改PDF处理函数，确保内容正确提取和显示\n  const handlePdfFile = async file => {\n    try {\n      const fileURL = URL.createObjectURL(file);\n      const loadingTask = pdfjsLib.getDocument(fileURL);\n      const pdf = await loadingTask.promise;\n      setPdfDocument(pdf);\n      setTotalPages(pdf.numPages);\n      setCurrentPage(1);\n\n      // 加载第一页\n      await extractAndProcessPage(pdf, 1);\n\n      // 添加调试信息\n      console.log('PDF加载成功，页数:', pdf.numPages);\n    } catch (error) {\n      console.error('加载PDF时出错:', error);\n      alert('PDF加载失败，请尝试其他文件');\n    }\n  };\n\n  // 提取和处理PDF页面内容的函数 - 区分目录和正文页面\n  const extractAndProcessPage = async (pdf, pageNum) => {\n    try {\n      const page = await pdf.getPage(pageNum);\n      const textContent = await page.getTextContent();\n      const viewport = page.getViewport({\n        scale: 1.0\n      });\n\n      // 判断当前页面是否为目录页\n      const isTableOfContents = await detectIfTocPage(textContent);\n      if (isTableOfContents) {\n        // 处理目录页面 - 保持原布局，仅调整字间距\n        await processTocPage(textContent, viewport);\n      } else {\n        // 处理正文页面 - 以句号为标准划分段落\n        await processContentPage(page, readingMode);\n      }\n    } catch (error) {\n      console.error('处理PDF页面时出错:', error);\n      setContent('<div>无法处理PDF内容</div>');\n    }\n  };\n\n  // 检测是否为目录页\n  const detectIfTocPage = async textContent => {\n    const textItems = textContent.items;\n    let fullText = textItems.map(item => item.str).join('');\n\n    // 检查特征: \n    // 1. 页面上包含\"目录\"字样\n    // 2. 行尾通常有页码和前导符（...）\n    // 3. 短行居多，且多有规律的缩进\n    const hasTocKeywords = /目\\s*录|contents|index/i.test(fullText);\n    const hasPageNumberPatterns = /\\.{2,}|…{1,}\\s*\\d+/.test(fullText);\n\n    // 检查行的特征\n    let shortLinesCount = 0;\n    let linesWithNumbersCount = 0;\n\n    // 按Y坐标分组\n    const lineMap = new Map();\n    textItems.forEach(item => {\n      const yKey = Math.round(item.transform[5]);\n      if (!lineMap.has(yKey)) {\n        lineMap.set(yKey, []);\n      }\n      lineMap.get(yKey).push(item);\n    });\n    const lines = [...lineMap.values()];\n    lines.forEach(line => {\n      const lineText = line.map(item => item.str).join('');\n      if (lineText.length < 50) shortLinesCount++;\n      if (/\\d+$/.test(lineText)) linesWithNumbersCount++;\n    });\n    const shortLineRatio = shortLinesCount / lines.length;\n    const numberLineRatio = linesWithNumbersCount / lines.length;\n    return hasTocKeywords || hasPageNumberPatterns || shortLineRatio > 0.7 && numberLineRatio > 0.3;\n  };\n\n  // 处理目录页面 - 严格保持原始布局\n  const processTocPage = async (textContent, viewport) => {\n    const textItems = textContent.items;\n\n    // 生成HTML，严格保持原始位置和格式\n    let htmlContent = '<div class=\"pdf-toc-page\">';\n    textItems.forEach(item => {\n      // 获取原始位置信息\n      const x = item.transform[4];\n      const y = viewport.height - item.transform[5]; // 转换Y坐标\n\n      // 获取原始字体信息\n      const fontSize = Math.sqrt(item.transform[0] * item.transform[0] + item.transform[1] * item.transform[1]);\n      const fontWeight = item.fontName && item.fontName.toLowerCase().includes('bold') ? 'bold' : 'normal';\n\n      // 仅应用字间距，其他完全保持原样\n      const spacedText = item.str.split('').join('\\u200A');\n\n      // 使用绝对定位和原始样式属性\n      htmlContent += `<span style=\"\n        position: absolute; \n        left: ${x}px; \n        top: ${y}px; \n        font-size: ${fontSize}px; \n        font-weight: ${fontWeight};\n        letter-spacing: 0.3em;\n        white-space: nowrap;\n        font-family: inherit;\n        color: inherit;\n      \">${spacedText}</span>`;\n    });\n    htmlContent += '</div>';\n    setContent(htmlContent);\n  };\n\n  // 修改文本处理函数，实现按完整词随机高亮\n  const processTextWithHighlight = text => {\n    // 将文本按空格和标点符号分割成词\n    const words = text.split(/([\\s.,!?，。！？.!?]+)/);\n    let result = '';\n    words.forEach(word => {\n      // 跳过空字符串和纯空格\n      if (!word || /^\\s+$/.test(word)) {\n        result += word;\n        return;\n      }\n\n      // 随机决定是否高亮当前词（30%的概率）\n      if (Math.random() < 0.3) {\n        // 随机选择红色或蓝色（50%的概率）\n        const color = Math.random() < 0.5 ? 'red' : 'blue';\n        result += `<span class=\"highlight-word ${color}\">${word}</span>`;\n      } else {\n        result += word;\n      }\n    });\n    return result;\n  };\n\n  // 修改processContentPage函数\n  const processContentPage = (page, mode) => {\n    const pageContent = document.querySelector('.page-content');\n    if (!pageContent) return;\n\n    // 清除现有内容\n    pageContent.innerHTML = '';\n\n    // 获取页面文本内容\n    const textContent = page.getTextContent();\n    const sentences = textContent.items.map(item => item.str).join('').split(/[。！？]/).filter(sentence => sentence.trim().length > 0);\n\n    // 处理每个句子\n    sentences.forEach(sentence => {\n      // 应用ADHD友好的字间距\n      const spacedText = sentence.split('').join('\\u200A');\n\n      // 根据阅读模式处理文本\n      let processedText = spacedText;\n      if (mode === 'static') {\n        // 只在静息模式下应用高亮效果\n        processedText = tagPartsOfSpeech(spacedText);\n      }\n\n      // 添加段落，设置首行缩进\n      const paragraph = document.createElement('p');\n      paragraph.className = 'pdf-paragraph';\n      paragraph.innerHTML = processedText;\n      pageContent.appendChild(paragraph);\n    });\n  };\n\n  // 处理TXT文件\n  const handleTxtFile = async file => {\n    try {\n      setLoading(true);\n      const text = await file.text();\n      // 将文本分页处理\n      const pageTexts = text.split('\\n\\n').map(paragraph => [{\n        text: paragraph,\n        x: 40,\n        y: 40,\n        fontSize: 16,\n        fontFamily: 'serif'\n      }]);\n      setPages(pageTexts);\n      setTotalPages(pageTexts.length);\n      setCurrentPage(1);\n      setLoading(false);\n    } catch (error) {\n      console.error('TXT处理错误:', error);\n      setLoading(false);\n      alert('TXT文件处理失败，请重试');\n    }\n  };\n\n  // 文件上传处理\n  const handleFileUpload = async e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    if (file.type === 'application/pdf') {\n      await handlePdfFile(file);\n    } else if (file.type === 'text/plain') {\n      handleTxtFile(file);\n    } else {\n      alert('请上传PDF或TXT文件');\n    }\n  };\n\n  // 翻页函数\n  const changePage = async delta => {\n    const newPage = currentPage + delta;\n    if (newPage >= 1 && newPage <= totalPages && pdfDocument) {\n      setCurrentPage(newPage);\n      await extractAndProcessPage(pdfDocument, newPage);\n    }\n  };\n\n  // 设置鼠标跟随高亮\n  const setupMouseFollowHighlight = () => {\n    const pageContent = document.querySelector('.pdf-content');\n    if (!pageContent) return;\n    pageContent.addEventListener('mousemove', e => {\n      if (readingMode !== 'follow-mouse') return;\n\n      // 清除之前的高亮\n      const prevHighlighted = pageContent.querySelectorAll('.reading-line');\n      prevHighlighted.forEach(el => el.classList.remove('reading-line'));\n\n      // 获取鼠标所在的行\n      const lines = pageContent.querySelectorAll('.text-line');\n      lines.forEach(line => {\n        const rect = line.getBoundingClientRect();\n        if (e.clientY >= rect.top && e.clientY <= rect.bottom) {\n          line.classList.add('reading-line');\n        }\n      });\n    });\n  };\n\n  // 自动阅读引导\n  const startAutoReadGuide = () => {\n    if (autoReadIntervalRef.current) {\n      clearInterval(autoReadIntervalRef.current);\n    }\n\n    // 创建阅读指示点\n    if (!autoReadGuideRef.current) {\n      const guide = document.createElement('div');\n      guide.className = 'auto-read-guide';\n      document.querySelector('.page-content').appendChild(guide);\n      autoReadGuideRef.current = guide;\n    }\n\n    // 获取页面内所有段落\n    const paragraphs = document.querySelectorAll('.page-content p');\n    if (!paragraphs.length) return;\n    let currentParagraphIndex = 0;\n    let currentCharIndex = 0;\n    autoReadIntervalRef.current = setInterval(() => {\n      if (currentParagraphIndex >= paragraphs.length) {\n        clearInterval(autoReadIntervalRef.current);\n        return;\n      }\n      const paragraph = paragraphs[currentParagraphIndex];\n      const text = paragraph.textContent;\n      if (currentCharIndex >= text.length) {\n        currentParagraphIndex++;\n        currentCharIndex = 0;\n        return;\n      }\n\n      // 计算当前字符位置\n      const range = document.createRange();\n      const textNode = paragraph.firstChild;\n      if (textNode && textNode.nodeType === Node.TEXT_NODE) {\n        range.setStart(textNode, Math.min(currentCharIndex, textNode.length));\n        range.setStart(textNode, Math.min(currentCharIndex, textNode.length));\n        const rect = range.getBoundingClientRect();\n\n        // 更新指示点位置\n        if (autoReadGuideRef.current) {\n          const guide = autoReadGuideRef.current;\n          guide.style.left = `${rect.left}px`;\n          guide.style.top = `${rect.bottom + 5}px`;\n\n          // 闪烁效果\n          guide.style.opacity = 1;\n          setTimeout(() => {\n            guide.style.opacity = 0.5;\n          }, 100);\n        }\n      }\n      currentCharIndex += 1;\n    }, 200); // 每秒5个字符的速度\n  };\n\n  // 处理阅读模式切换\n  const handleReadingModeChange = e => {\n    const newMode = e.target.value;\n    setReadingMode(newMode);\n\n    // 清除所有高亮效果\n    const pageContent = document.querySelector('.page-content');\n    if (pageContent) {\n      // 移除所有高亮类\n      pageContent.querySelectorAll('.highlight, .reading-line, .noun-highlight').forEach(el => {\n        el.classList.remove('highlight', 'reading-line', 'noun-highlight');\n      });\n\n      // 重新处理当前页面内容\n      if (currentPage) {\n        processContentPage(currentPage, newMode);\n      }\n    }\n\n    // 如果是鼠标跟随模式，设置延迟后添加跟随效果\n    if (newMode === 'follow-mouse') {\n      setTimeout(() => {\n        setupMouseFollowHighlight();\n      }, 100);\n    }\n  };\n  useEffect(() => {\n    // 当阅读模式为follow-mouse时，设置鼠标跟随高亮\n    if (readingMode === 'follow-mouse' && content) {\n      setTimeout(setupMouseFollowHighlight, 100);\n    }\n  }, [readingMode, content]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `App ${isDarkMode ? 'dark' : 'light'}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"ADHD \\u9605\\u8BFB\\u52A9\\u624B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"upload-btn\",\n            onClick: () => document.getElementById('fileInput').click(),\n            children: \"\\u9009\\u62E9\\u6587\\u4EF6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"fileInput\",\n            type: \"file\",\n            accept: \".pdf,.txt\",\n            style: {\n              display: 'none'\n            },\n            onChange: handleFileUpload\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"mode-btn\",\n            children: \"\\u5207\\u6362\\u660E\\u4EAE\\u6A21\\u5F0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"color-picker\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"\\u9AD8\\u4EAE\\u989C\\u8272:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"color\",\n              value: highlightColor,\n              onChange: e => setHighlightColor(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mode-selector\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              value: readingMode,\n              onChange: handleReadingModeChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"static\",\n                children: \"\\u9AD8\\u4EAE\\u9759\\u606F\\u6A21\\u5F0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 491,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"follow-mouse\",\n                children: \"\\u9F20\\u6807\\u8DDF\\u968F\\u9AD8\\u4EAE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 492,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"auto-guide\",\n                children: \"\\u81EA\\u52A8\\u9605\\u8BFB\\u5F15\\u5BFC\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 493,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pos-selector\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              value: highlightPOS,\n              onChange: e => {\n                const options = Array.from(e.target.selectedOptions, option => option.value);\n                setHighlightPOS(options);\n              },\n              multiple: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"noun\",\n                children: \"\\u540D\\u8BCD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 507,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"verb\",\n                children: \"\\u52A8\\u8BCD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 508,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"adj\",\n                children: \"\\u5F62\\u5BB9\\u8BCD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 509,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 499,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"page-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"page-layout\",\n          children: [content ? /*#__PURE__*/_jsxDEV(\"div\", {\n            dangerouslySetInnerHTML: {\n              __html: content\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"\\u8BF7\\u4E0A\\u4F20PDF\\u6216TXT\\u6587\\u4EF6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 15\n          }, this), totalPages > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"nav-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"nav-button\",\n              onClick: () => changePage(-1),\n              disabled: currentPage <= 1,\n              children: \"\\u4E0A\\u4E00\\u9875\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"\\u7B2C \", currentPage, \" / \", totalPages, \" \\u9875\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"nav-button\",\n              onClick: () => changePage(1),\n              disabled: currentPage >= totalPages,\n              children: \"\\u4E0B\\u4E00\\u9875\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 533,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 453,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"wDJqmWOfuu9dWXKlRgXxX2L9ihE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","pdfjsLib","pdfjsViewer","marked","pdfjs","jsxDEV","_jsxDEV","GlobalWorkerOptions","workerSrc","version","tagPartsOfSpeech","text","commonNouns","highlightedText","sort","a","b","length","forEach","noun","regex","RegExp","replace","App","_s","isDarkMode","setIsDarkMode","pages","setPages","currentPage","setCurrentPage","totalPages","setTotalPages","fileName","setFileName","loading","setLoading","fileRef","file","setFile","pdfInstance","setPdfInstance","extractedTextPages","setExtractedTextPages","readingMode","setReadingMode","highlightColor","setHighlightColor","highlightPOS","setHighlightPOS","markdownContent","setMarkdownContent","readerContainerRef","autoReadGuideRef","autoReadIntervalRef","content","setContent","pdfDocument","setPdfDocument","document","documentElement","style","setProperty","current","clearInterval","startAutoReadGuide","handlePdfFile","fileURL","URL","createObjectURL","loadingTask","getDocument","pdf","promise","numPages","extractAndProcessPage","console","log","error","alert","pageNum","page","getPage","textContent","getTextContent","viewport","getViewport","scale","isTableOfContents","detectIfTocPage","processTocPage","processContentPage","textItems","items","fullText","map","item","str","join","hasTocKeywords","test","hasPageNumberPatterns","shortLinesCount","linesWithNumbersCount","lineMap","Map","yKey","Math","round","transform","has","set","get","push","lines","values","line","lineText","shortLineRatio","numberLineRatio","htmlContent","x","y","height","fontSize","sqrt","fontWeight","fontName","toLowerCase","includes","spacedText","split","processTextWithHighlight","words","result","word","random","color","mode","pageContent","querySelector","innerHTML","sentences","filter","sentence","trim","processedText","paragraph","createElement","className","appendChild","handleTxtFile","pageTexts","fontFamily","handleFileUpload","e","target","files","type","changePage","delta","newPage","setupMouseFollowHighlight","addEventListener","prevHighlighted","querySelectorAll","el","classList","remove","rect","getBoundingClientRect","clientY","top","bottom","add","guide","paragraphs","currentParagraphIndex","currentCharIndex","setInterval","range","createRange","textNode","firstChild","nodeType","Node","TEXT_NODE","setStart","min","left","opacity","setTimeout","handleReadingModeChange","newMode","value","children","_jsxFileName","lineNumber","columnNumber","onClick","getElementById","click","id","accept","display","onChange","options","Array","from","selectedOptions","option","multiple","dangerouslySetInnerHTML","__html","disabled","_c","$RefreshReg$"],"sources":["D:/adhd-read-helper/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport * as pdfjsLib from 'pdfjs-dist';\nimport * as pdfjsViewer from 'pdfjs-dist/web/pdf_viewer';\nimport { marked } from 'marked'; // 需要安装: npm install marked\nimport './styles/Reader.css';\nimport { pdfjs } from 'pdfjs-dist';\n\n// 设置 PDF.js worker\npdfjsLib.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjsLib.version}/pdf.worker.min.js`;\n\n// 模拟NLP词性标注功能（实际应用中建议使用专业NLP库如nlp.js或调用API）\nconst tagPartsOfSpeech = (text) => {\n  // 使用简单的规则来标记常见名词\n  const commonNouns = [\n    '书', '文章', '段落', '章节', '内容', '主题', '观点', '概念', '理论', '方法',\n    '系统', '工具', '设备', '材料', '资源', '数据', '信息', '知识', '技能', '能力',\n    '时间', '空间', '位置', '方向', '距离', '速度', '温度', '压力', '能量', '力量',\n    '人', '物', '事', '理', '情', '意', '心', '身', '手', '脚', '头', '眼', '耳', '口', '鼻',\n    '家', '国', '城', '乡', '村', '路', '桥', '楼', '房', '屋', '门', '窗', '墙', '地', '天',\n    '日', '月', '星', '云', '雨', '雪', '风', '雷', '电', '火', '水', '土', '木', '金', '石',\n    '花', '草', '树', '鸟', '兽', '虫', '鱼', '虾', '蟹', '贝', '螺', '蚌', '龟', '蛇', '蛙',\n    '鸡', '鸭', '鹅', '猪', '牛', '羊', '马', '狗', '猫', '兔', '鼠', '熊', '虎', '狮', '象',\n    '龙', '凤', '鹤', '鹰', '鸽', '雀', '燕', '蝶', '蜂', '蚁', '蝇', '蚊', '蚤', '虱', '蜱',\n    '书', '笔', '纸', '墨', '砚', '桌', '椅', '床', '柜', '箱', '包', '袋', '盒', '瓶', '罐',\n    '碗', '盘', '杯', '壶', '锅', '勺', '筷', '刀', '剪', '针', '线', '布', '衣', '裤', '鞋',\n    '帽', '袜', '巾', '被', '枕', '席', '毯', '垫', '帘', '幕', '屏', '镜', '钟', '表', '灯',\n    '车', '船', '飞机', '火车', '汽车', '自行车', '摩托车', '电动车', '公交车', '地铁', '高铁',\n    '电脑', '手机', '平板', '电视', '音响', '耳机', '相机', '打印机', '扫描仪', '投影仪', '路由器',\n    '软件', '硬件', '程序', '系统', '网络', '数据', '文件', '文件夹', '图标', '按钮', '菜单', '窗口',\n    '学校', '医院', '银行', '商店', '餐厅', '酒店', '公园', '广场', '车站', '机场', '码头', '港口',\n    '公司', '企业', '工厂', '农场', '市场', '超市', '商场', '书店', '图书馆', '博物馆', '美术馆',\n    '政府', '部门', '机构', '组织', '团体', '协会', '联盟', '委员会', '办公室', '会议室', '教室',\n    '老师', '学生', '医生', '护士', '警察', '消防员', '工程师', '设计师', '艺术家', '作家', '记者',\n    '科学家', '研究员', '教授', '专家', '顾问', '经理', '主管', '主任', '部长', '局长', '市长',\n    '国家', '民族', '文化', '历史', '传统', '习俗', '节日', '礼仪', '艺术', '音乐', '舞蹈', '戏剧',\n    '体育', '运动', '比赛', '训练', '健身', '瑜伽', '游泳', '跑步', '篮球', '足球', '排球', '网球',\n    '食物', '饮料', '水果', '蔬菜', '肉类', '海鲜', '主食', '零食', '点心', '糖果', '巧克力', '蛋糕',\n    '天气', '气候', '季节', '温度', '湿度', '气压', '风向', '风速', '降水', '云量', '日照', '雾霾'\n  ];\n\n  let highlightedText = text;\n  \n  // 按长度从长到短排序，避免短词替换影响长词\n  commonNouns.sort((a, b) => b.length - a.length);\n  \n  commonNouns.forEach(noun => {\n    const regex = new RegExp(noun, 'g');\n    highlightedText = highlightedText.replace(regex, `<span class=\"noun-highlight\">${noun}</span>`);\n  });\n  \n  return highlightedText;\n};\n\nconst App = () => {\n  // 状态定义\n  const [isDarkMode, setIsDarkMode] = useState(true);\n  const [pages, setPages] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const [fileName, setFileName] = useState('');\n  const [loading, setLoading] = useState(false);\n  const fileRef = useRef(null); // 添加文件引用\n  const [file, setFile] = useState(null);\n  const [pdfInstance, setPdfInstance] = useState(null);\n  const [extractedTextPages, setExtractedTextPages] = useState([]);\n  const [readingMode, setReadingMode] = useState('static'); // static, follow-mouse, auto-guide\n  const [highlightColor, setHighlightColor] = useState('#ffeb3b'); // 默认高亮颜色\n  const [highlightPOS, setHighlightPOS] = useState(['noun']); // 默认高亮词性\n  const [markdownContent, setMarkdownContent] = useState('');\n  const readerContainerRef = useRef(null);\n  const autoReadGuideRef = useRef(null);\n  const autoReadIntervalRef = useRef(null);\n  const [content, setContent] = useState('');\n  const [pdfDocument, setPdfDocument] = useState(null);\n\n  // 初始化PDF.js\n  useEffect(() => {\n    pdfjsLib.GlobalWorkerOptions.workerSrc = `https://cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjsLib.version}/pdf.worker.min.js`;\n    \n    // 设置高亮颜色\n    document.documentElement.style.setProperty('--highlight-color', highlightColor);\n    \n    return () => {\n      // 清理自动阅读定时器\n      if (autoReadIntervalRef.current) {\n        clearInterval(autoReadIntervalRef.current);\n      }\n    };\n  }, [highlightColor]);\n  \n  // 当阅读模式改变时应用效果\n  useEffect(() => {\n    if (readingMode === 'auto-guide') {\n      startAutoReadGuide();\n    } else if (autoReadIntervalRef.current) {\n      clearInterval(autoReadIntervalRef.current);\n    }\n  }, [readingMode, markdownContent]);\n\n  // 修改PDF处理函数，确保内容正确提取和显示\n  const handlePdfFile = async (file) => {\n    try {\n      const fileURL = URL.createObjectURL(file);\n      const loadingTask = pdfjsLib.getDocument(fileURL);\n      const pdf = await loadingTask.promise;\n      \n      setPdfDocument(pdf);\n      setTotalPages(pdf.numPages);\n      setCurrentPage(1);\n      \n      // 加载第一页\n      await extractAndProcessPage(pdf, 1);\n      \n      // 添加调试信息\n      console.log('PDF加载成功，页数:', pdf.numPages);\n    } catch (error) {\n      console.error('加载PDF时出错:', error);\n      alert('PDF加载失败，请尝试其他文件');\n    }\n  };\n  \n  // 提取和处理PDF页面内容的函数 - 区分目录和正文页面\n  const extractAndProcessPage = async (pdf, pageNum) => {\n    try {\n      const page = await pdf.getPage(pageNum);\n      const textContent = await page.getTextContent();\n      const viewport = page.getViewport({ scale: 1.0 });\n      \n      // 判断当前页面是否为目录页\n      const isTableOfContents = await detectIfTocPage(textContent);\n      \n      if (isTableOfContents) {\n        // 处理目录页面 - 保持原布局，仅调整字间距\n        await processTocPage(textContent, viewport);\n      } else {\n        // 处理正文页面 - 以句号为标准划分段落\n        await processContentPage(page, readingMode);\n      }\n    } catch (error) {\n      console.error('处理PDF页面时出错:', error);\n      setContent('<div>无法处理PDF内容</div>');\n    }\n  };\n\n  // 检测是否为目录页\n  const detectIfTocPage = async (textContent) => {\n    const textItems = textContent.items;\n    let fullText = textItems.map(item => item.str).join('');\n    \n    // 检查特征: \n    // 1. 页面上包含\"目录\"字样\n    // 2. 行尾通常有页码和前导符（...）\n    // 3. 短行居多，且多有规律的缩进\n    const hasTocKeywords = /目\\s*录|contents|index/i.test(fullText);\n    const hasPageNumberPatterns = /\\.{2,}|…{1,}\\s*\\d+/.test(fullText);\n    \n    // 检查行的特征\n    let shortLinesCount = 0;\n    let linesWithNumbersCount = 0;\n    \n    // 按Y坐标分组\n    const lineMap = new Map();\n    textItems.forEach(item => {\n      const yKey = Math.round(item.transform[5]);\n      if (!lineMap.has(yKey)) {\n        lineMap.set(yKey, []);\n      }\n      lineMap.get(yKey).push(item);\n    });\n    \n    const lines = [...lineMap.values()];\n    \n    lines.forEach(line => {\n      const lineText = line.map(item => item.str).join('');\n      if (lineText.length < 50) shortLinesCount++;\n      if (/\\d+$/.test(lineText)) linesWithNumbersCount++;\n    });\n    \n    const shortLineRatio = shortLinesCount / lines.length;\n    const numberLineRatio = linesWithNumbersCount / lines.length;\n    \n    return hasTocKeywords || hasPageNumberPatterns || (shortLineRatio > 0.7 && numberLineRatio > 0.3);\n  };\n\n  // 处理目录页面 - 严格保持原始布局\n  const processTocPage = async (textContent, viewport) => {\n    const textItems = textContent.items;\n    \n    // 生成HTML，严格保持原始位置和格式\n    let htmlContent = '<div class=\"pdf-toc-page\">';\n    \n    textItems.forEach(item => {\n      // 获取原始位置信息\n      const x = item.transform[4];\n      const y = viewport.height - item.transform[5]; // 转换Y坐标\n      \n      // 获取原始字体信息\n      const fontSize = Math.sqrt(item.transform[0] * item.transform[0] + item.transform[1] * item.transform[1]);\n      const fontWeight = item.fontName && item.fontName.toLowerCase().includes('bold') ? 'bold' : 'normal';\n      \n      // 仅应用字间距，其他完全保持原样\n      const spacedText = item.str.split('').join('\\u200A');\n      \n      // 使用绝对定位和原始样式属性\n      htmlContent += `<span style=\"\n        position: absolute; \n        left: ${x}px; \n        top: ${y}px; \n        font-size: ${fontSize}px; \n        font-weight: ${fontWeight};\n        letter-spacing: 0.3em;\n        white-space: nowrap;\n        font-family: inherit;\n        color: inherit;\n      \">${spacedText}</span>`;\n    });\n    \n    htmlContent += '</div>';\n    setContent(htmlContent);\n  };\n\n  // 修改文本处理函数，实现按完整词随机高亮\n  const processTextWithHighlight = (text) => {\n    // 将文本按空格和标点符号分割成词\n    const words = text.split(/([\\s.,!?，。！？.!?]+)/);\n    let result = '';\n    \n    words.forEach(word => {\n      // 跳过空字符串和纯空格\n      if (!word || /^\\s+$/.test(word)) {\n        result += word;\n        return;\n      }\n      \n      // 随机决定是否高亮当前词（30%的概率）\n      if (Math.random() < 0.3) {\n        // 随机选择红色或蓝色（50%的概率）\n        const color = Math.random() < 0.5 ? 'red' : 'blue';\n        result += `<span class=\"highlight-word ${color}\">${word}</span>`;\n      } else {\n        result += word;\n      }\n    });\n    \n    return result;\n  };\n\n  // 修改processContentPage函数\n  const processContentPage = (page, mode) => {\n    const pageContent = document.querySelector('.page-content');\n    if (!pageContent) return;\n\n    // 清除现有内容\n    pageContent.innerHTML = '';\n    \n    // 获取页面文本内容\n    const textContent = page.getTextContent();\n    const sentences = textContent.items\n      .map(item => item.str)\n      .join('')\n      .split(/[。！？]/)\n      .filter(sentence => sentence.trim().length > 0);\n\n    // 处理每个句子\n    sentences.forEach(sentence => {\n      // 应用ADHD友好的字间距\n      const spacedText = sentence.split('').join('\\u200A');\n      \n      // 根据阅读模式处理文本\n      let processedText = spacedText;\n      if (mode === 'static') {\n        // 只在静息模式下应用高亮效果\n        processedText = tagPartsOfSpeech(spacedText);\n      }\n      \n      // 添加段落，设置首行缩进\n      const paragraph = document.createElement('p');\n      paragraph.className = 'pdf-paragraph';\n      paragraph.innerHTML = processedText;\n      pageContent.appendChild(paragraph);\n    });\n  };\n\n  // 处理TXT文件\n  const handleTxtFile = async (file) => {\n    try {\n      setLoading(true);\n      const text = await file.text();\n      // 将文本分页处理\n      const pageTexts = text.split('\\n\\n').map(paragraph => [{\n        text: paragraph,\n        x: 40,\n        y: 40,\n        fontSize: 16,\n        fontFamily: 'serif'\n      }]);\n      setPages(pageTexts);\n      setTotalPages(pageTexts.length);\n      setCurrentPage(1);\n      setLoading(false);\n    } catch (error) {\n      console.error('TXT处理错误:', error);\n      setLoading(false);\n      alert('TXT文件处理失败，请重试');\n    }\n  };\n\n  // 文件上传处理\n  const handleFileUpload = async (e) => {\n    const file = e.target.files[0];\n    if (!file) return;\n    \n    if (file.type === 'application/pdf') {\n      await handlePdfFile(file);\n    } else if (file.type === 'text/plain') {\n      handleTxtFile(file);\n    } else {\n      alert('请上传PDF或TXT文件');\n    }\n  };\n\n  // 翻页函数\n  const changePage = async (delta) => {\n    const newPage = currentPage + delta;\n    if (newPage >= 1 && newPage <= totalPages && pdfDocument) {\n      setCurrentPage(newPage);\n      await extractAndProcessPage(pdfDocument, newPage);\n    }\n  };\n\n  // 设置鼠标跟随高亮\n  const setupMouseFollowHighlight = () => {\n    const pageContent = document.querySelector('.pdf-content');\n    if (!pageContent) return;\n    \n    pageContent.addEventListener('mousemove', (e) => {\n      if (readingMode !== 'follow-mouse') return;\n      \n      // 清除之前的高亮\n      const prevHighlighted = pageContent.querySelectorAll('.reading-line');\n      prevHighlighted.forEach(el => el.classList.remove('reading-line'));\n      \n      // 获取鼠标所在的行\n      const lines = pageContent.querySelectorAll('.text-line');\n      lines.forEach(line => {\n        const rect = line.getBoundingClientRect();\n        if (e.clientY >= rect.top && e.clientY <= rect.bottom) {\n          line.classList.add('reading-line');\n        }\n      });\n    });\n  };\n  \n  // 自动阅读引导\n  const startAutoReadGuide = () => {\n    if (autoReadIntervalRef.current) {\n      clearInterval(autoReadIntervalRef.current);\n    }\n    \n    // 创建阅读指示点\n    if (!autoReadGuideRef.current) {\n      const guide = document.createElement('div');\n      guide.className = 'auto-read-guide';\n      document.querySelector('.page-content').appendChild(guide);\n      autoReadGuideRef.current = guide;\n    }\n    \n    // 获取页面内所有段落\n    const paragraphs = document.querySelectorAll('.page-content p');\n    if (!paragraphs.length) return;\n    \n    let currentParagraphIndex = 0;\n    let currentCharIndex = 0;\n    \n    autoReadIntervalRef.current = setInterval(() => {\n      if (currentParagraphIndex >= paragraphs.length) {\n        clearInterval(autoReadIntervalRef.current);\n        return;\n      }\n      \n      const paragraph = paragraphs[currentParagraphIndex];\n      const text = paragraph.textContent;\n      \n      if (currentCharIndex >= text.length) {\n        currentParagraphIndex++;\n        currentCharIndex = 0;\n        return;\n      }\n      \n      // 计算当前字符位置\n      const range = document.createRange();\n      const textNode = paragraph.firstChild;\n      \n      if (textNode && textNode.nodeType === Node.TEXT_NODE) {\n        range.setStart(textNode, Math.min(currentCharIndex, textNode.length));\n        range.setStart(textNode, Math.min(currentCharIndex, textNode.length));\n        \n        const rect = range.getBoundingClientRect();\n        \n        // 更新指示点位置\n        if (autoReadGuideRef.current) {\n          const guide = autoReadGuideRef.current;\n          guide.style.left = `${rect.left}px`;\n          guide.style.top = `${rect.bottom + 5}px`;\n          \n          // 闪烁效果\n          guide.style.opacity = 1;\n          setTimeout(() => {\n            guide.style.opacity = 0.5;\n          }, 100);\n        }\n      }\n      \n      currentCharIndex += 1;\n    }, 200); // 每秒5个字符的速度\n  };\n  \n  // 处理阅读模式切换\n  const handleReadingModeChange = (e) => {\n    const newMode = e.target.value;\n    setReadingMode(newMode);\n    \n    // 清除所有高亮效果\n    const pageContent = document.querySelector('.page-content');\n    if (pageContent) {\n      // 移除所有高亮类\n      pageContent.querySelectorAll('.highlight, .reading-line, .noun-highlight').forEach(el => {\n        el.classList.remove('highlight', 'reading-line', 'noun-highlight');\n      });\n      \n      // 重新处理当前页面内容\n      if (currentPage) {\n        processContentPage(currentPage, newMode);\n      }\n    }\n\n    // 如果是鼠标跟随模式，设置延迟后添加跟随效果\n    if (newMode === 'follow-mouse') {\n      setTimeout(() => {\n        setupMouseFollowHighlight();\n      }, 100);\n    }\n  };\n\n  useEffect(() => {\n    // 当阅读模式为follow-mouse时，设置鼠标跟随高亮\n    if (readingMode === 'follow-mouse' && content) {\n      setTimeout(setupMouseFollowHighlight, 100);\n    }\n  }, [readingMode, content]);\n\n  return (\n    <div className={`App ${isDarkMode ? 'dark' : 'light'}`}>\n      <div className=\"app-container\">\n        <header className=\"header\">\n          <h1>ADHD 阅读助手</h1>\n          <div className=\"controls\">\n            <button \n              className=\"upload-btn\"\n              onClick={() => document.getElementById('fileInput').click()}\n            >\n              选择文件\n            </button>\n            <input\n              id=\"fileInput\"\n              type=\"file\"\n              accept=\".pdf,.txt\"\n              style={{ display: 'none' }}\n              onChange={handleFileUpload}\n            />\n            <button className=\"mode-btn\">\n              切换明亮模式\n            </button>\n            \n            {/* 高亮颜色选择 */}\n            <div className=\"color-picker\">\n              <label>高亮颜色:</label>\n              <input \n                type=\"color\" \n                value={highlightColor}\n                onChange={(e) => setHighlightColor(e.target.value)}\n              />\n            </div>\n            \n            {/* 阅读模式选择 */}\n            <div className=\"mode-selector\">\n              <select \n                value={readingMode}\n                onChange={handleReadingModeChange}\n              >\n                <option value=\"static\">高亮静息模式</option>\n                <option value=\"follow-mouse\">鼠标跟随高亮</option>\n                <option value=\"auto-guide\">自动阅读引导</option>\n              </select>\n            </div>\n            \n            {/* 词性选择 */}\n            <div className=\"pos-selector\">\n              <select\n                value={highlightPOS}\n                onChange={(e) => {\n                  const options = Array.from(e.target.selectedOptions, option => option.value);\n                  setHighlightPOS(options);\n                }}\n                multiple\n              >\n                <option value=\"noun\">名词</option>\n                <option value=\"verb\">动词</option>\n                <option value=\"adj\">形容词</option>\n              </select>\n            </div>\n          </div>\n        </header>\n        \n        <main className=\"page-content\">\n          <div className=\"page-layout\">\n            {content ? (\n              <div dangerouslySetInnerHTML={{ __html: content }} />\n            ) : (\n              <div>请上传PDF或TXT文件</div>\n            )}\n            \n            {totalPages > 1 && (\n              <div className=\"nav-buttons\">\n                <button \n                  className=\"nav-button\" \n                  onClick={() => changePage(-1)} \n                  disabled={currentPage <= 1}\n                >\n                  上一页\n                </button>\n                <span>第 {currentPage} / {totalPages} 页</span>\n                <button \n                  className=\"nav-button\" \n                  onClick={() => changePage(1)} \n                  disabled={currentPage >= totalPages}\n                >\n                  下一页\n                </button>\n              </div>\n            )}\n          </div>\n        </main>\n      </div>\n    </div>\n  );\n};\n\nexport default App; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAO,KAAKC,QAAQ,MAAM,YAAY;AACtC,OAAO,KAAKC,WAAW,MAAM,2BAA2B;AACxD,SAASC,MAAM,QAAQ,QAAQ,CAAC,CAAC;AACjC,OAAO,qBAAqB;AAC5B,SAASC,KAAK,QAAQ,YAAY;;AAElC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAL,QAAQ,CAACM,mBAAmB,CAACC,SAAS,GAAG,2CAA2CP,QAAQ,CAACQ,OAAO,oBAAoB;;AAExH;AACA,MAAMC,gBAAgB,GAAIC,IAAI,IAAK;EACjC;EACA,MAAMC,WAAW,GAAG,CAClB,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EACzD,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAC1D,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAC1D,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EACzE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EACzE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EACzE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EACzE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EACzE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EACzE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EACzE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EACzE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EACzE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAClE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EACpE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EACvE,IAAI,EA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}