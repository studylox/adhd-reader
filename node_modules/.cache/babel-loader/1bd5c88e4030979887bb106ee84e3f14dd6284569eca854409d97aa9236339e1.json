{"ast":null,"code":"var _jsxFileName = \"D:\\\\adhd-read-helper\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './styles/Reader.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const [textContent, setTextContent] = useState('');\n  const [fileName, setFileName] = useState('');\n\n  // 文件上传处理\n  const handleFileUpload = async event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    try {\n      // 直接读取文件内容\n      const text = await file.text();\n      setTextContent(text);\n      setFileName(file.name);\n      console.log('文件内容已加载', text.substring(0, 100)); // 用于调试\n    } catch (error) {\n      console.error('读取文件失败:', error);\n      alert('读取文件失败，请重试');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `App ${isDarkMode ? 'dark' : 'light'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ADHD \\u9605\\u8BFB\\u52A9\\u624B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".txt,.md\",\n          onChange: handleFileUpload,\n          id: \"file-upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file-upload\",\n          children: \"\\u9009\\u62E9\\u6587\\u4EF6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), fileName && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\u5F53\\u524D\\u6587\\u4EF6: \", fileName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsDarkMode(!isDarkMode),\n          children: [\"\\u5207\\u6362\", isDarkMode ? '明亮' : '暗黑', \"\\u6A21\\u5F0F\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reader-container\",\n      children: textContent ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-content\",\n        children: textContent.split('\\n').map((line, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: line\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-prompt\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u8BF7\\u4E0A\\u4F20\\u6587\\u4EF6\\u5F00\\u59CB\\u9605\\u8BFB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u652F\\u6301\\u7684\\u683C\\u5F0F: TXT, MD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"sGQZH5ZGpavCawHujDl+oUegkaA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","isDarkMode","setIsDarkMode","textContent","setTextContent","fileName","setFileName","handleFileUpload","event","file","target","files","text","name","console","log","substring","error","alert","className","children","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","id","htmlFor","onClick","split","map","line","index","_c","$RefreshReg$"],"sources":["D:/adhd-read-helper/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './styles/Reader.css';\r\n\r\nfunction App() {\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n  const [textContent, setTextContent] = useState('');\r\n  const [fileName, setFileName] = useState('');\r\n\r\n  // 文件上传处理\r\n  const handleFileUpload = async (event) => {\r\n    const file = event.target.files[0];\r\n    if (!file) return;\r\n\r\n    try {\r\n      // 直接读取文件内容\r\n      const text = await file.text();\r\n      setTextContent(text);\r\n      setFileName(file.name);\r\n      console.log('文件内容已加载', text.substring(0, 100)); // 用于调试\r\n    } catch (error) {\r\n      console.error('读取文件失败:', error);\r\n      alert('读取文件失败，请重试');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`App ${isDarkMode ? 'dark' : 'light'}`}>\r\n      <div className=\"app-header\">\r\n        <h1>ADHD 阅读助手</h1>\r\n        <div className=\"controls\">\r\n          <input\r\n            type=\"file\"\r\n            accept=\".txt,.md\"\r\n            onChange={handleFileUpload}\r\n            id=\"file-upload\"\r\n          />\r\n          <label htmlFor=\"file-upload\">选择文件</label>\r\n          {fileName && <span>当前文件: {fileName}</span>}\r\n          <button onClick={() => setIsDarkMode(!isDarkMode)}>\r\n            切换{isDarkMode ? '明亮' : '暗黑'}模式\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"reader-container\">\r\n        {textContent ? (\r\n          <div className=\"text-content\">\r\n            {textContent.split('\\n').map((line, index) => (\r\n              <p key={index}>{line}</p>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <div className=\"upload-prompt\">\r\n            <p>请上传文件开始阅读</p>\r\n            <p>支持的格式: TXT, MD</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}