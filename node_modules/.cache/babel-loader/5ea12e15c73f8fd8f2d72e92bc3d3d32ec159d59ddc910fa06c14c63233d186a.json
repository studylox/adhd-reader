{"ast":null,"code":"var _jsxFileName = \"D:\\\\adhd-read-helper\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport * as pdfjsLib from 'pdfjs-dist';\nimport * as pdfjsViewer from 'pdfjs-dist/web/pdf_viewer';\nimport { marked } from 'marked'; // 需要安装: npm install marked\nimport './styles/Reader.css';\nimport { pdfjs } from 'pdfjs-dist';\n\n// 设置 PDF.js worker\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\npdfjsLib.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjsLib.version}/pdf.worker.min.js`;\n\n// 模拟NLP词性标注功能（实际应用中建议使用专业NLP库如nlp.js或调用API）\nconst tagPartsOfSpeech = text => {\n  // 定义所有标点符号\n  const punctuationMarks = ['，', '。', '！', '？', '；', '：', '（', '）', '【', '】', '《', '》', '〈', '〉', '…', '—', '～', '·', ',', '.', '!', '?', ';', ':', '(', ')', '[', ']', '{', '}', '-', '...', '..'];\n\n  // 将文本按标点符号分割，保留标点符号\n  const segments = text.split(new RegExp(`([${punctuationMarks.map(mark => '\\\\' + mark).join('')}])`));\n  let result = '';\n  let colorIndex = 0; // 0: 红色, 1: 蓝色, 2: 黑色\n  let currentText = '';\n  segments.forEach((segment, index) => {\n    // 跳过空字符串和纯空格\n    if (!segment || /^\\s+$/.test(segment)) {\n      result += segment;\n      return;\n    }\n\n    // 检查是否是标点符号\n    const isPunctuation = punctuationMarks.includes(segment);\n\n    // 根据索引选择颜色\n    let color;\n    switch (colorIndex) {\n      case 0:\n        color = 'red';\n        break;\n      case 1:\n        color = 'blue';\n        break;\n      case 2:\n        color = 'black';\n        break;\n      default:\n        color = 'black';\n    }\n\n    // 将当前文本和标点符号放在同一个颜色块中\n    if (isPunctuation) {\n      // 如果有累积的文本，先添加文本\n      if (currentText) {\n        result += `<span class=\"highlight-word ${color}\">${currentText}</span>`;\n        currentText = '';\n      }\n      // 添加标点符号\n      result += `<span class=\"highlight-word ${color}\">${segment}</span>`;\n      // 切换颜色\n      colorIndex = (colorIndex + 1) % 3;\n    } else {\n      // 累积文本\n      currentText += segment;\n    }\n  });\n\n  // 处理最后可能剩余的文本\n  if (currentText) {\n    const color = colorIndex === 0 ? 'red' : colorIndex === 1 ? 'blue' : 'black';\n    result += `<span class=\"highlight-word ${color}\">${currentText}</span>`;\n  }\n  return result;\n};\nconst App = () => {\n  _s();\n  // 状态定义\n  const [pages, setPages] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const [fileName, setFileName] = useState('');\n  const [loading, setLoading] = useState(false);\n  const fileRef = useRef(null);\n  const [file, setFile] = useState(null);\n  const [pdfInstance, setPdfInstance] = useState(null);\n  const [extractedTextPages, setExtractedTextPages] = useState([]);\n  const [readingMode, setReadingMode] = useState('normal');\n  const [posMode, setPosMode] = useState('none');\n  const [markdownContent, setMarkdownContent] = useState('');\n  const readerContainerRef = useRef(null);\n  const autoReadGuideRef = useRef(null);\n  const autoReadIntervalRef = useRef(null);\n  const [content, setContent] = useState('');\n  const [pdfDocument, setPdfDocument] = useState(null);\n\n  // 初始化PDF.js\n  useEffect(() => {\n    pdfjsLib.GlobalWorkerOptions.workerSrc = `https://cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjsLib.version}/pdf.worker.min.js`;\n    return () => {\n      // 清理自动阅读定时器\n      if (autoReadIntervalRef.current) {\n        clearInterval(autoReadIntervalRef.current);\n      }\n    };\n  }, []);\n\n  // 当阅读模式改变时应用效果\n  useEffect(() => {\n    if (readingMode === 'auto-guide') {\n      startAutoReadGuide();\n    } else if (autoReadIntervalRef.current) {\n      clearInterval(autoReadIntervalRef.current);\n    }\n  }, [readingMode, markdownContent]);\n\n  // 修改PDF处理函数，确保内容正确提取和显示\n  const handlePdfFile = async file => {\n    try {\n      const fileURL = URL.createObjectURL(file);\n      const loadingTask = pdfjsLib.getDocument(fileURL);\n      const pdf = await loadingTask.promise;\n      setPdfDocument(pdf);\n      setTotalPages(pdf.numPages);\n      setCurrentPage(1);\n\n      // 加载第一页\n      await extractAndProcessPage(pdf, 1);\n\n      // 添加调试信息\n      console.log('PDF加载成功，页数:', pdf.numPages);\n    } catch (error) {\n      console.error('加载PDF时出错:', error);\n      alert('PDF加载失败，请尝试其他文件');\n    }\n  };\n\n  // 提取和处理PDF页面内容的函数 - 区分目录和正文页面\n  const extractAndProcessPage = async (pdf, pageNum) => {\n    try {\n      const page = await pdf.getPage(pageNum);\n      const textContent = await page.getTextContent();\n      const viewport = page.getViewport({\n        scale: 1.0\n      });\n\n      // 判断当前页面是否为目录页\n      const isTableOfContents = await detectIfTocPage(textContent);\n      if (isTableOfContents) {\n        // 处理目录页面 - 保持原布局，仅调整字间距\n        await processTocPage(textContent, viewport);\n      } else {\n        // 处理正文页面 - 以句号为标准划分段落\n        await processContentPage(page, readingMode);\n      }\n\n      // 在内容处理完成后，如果是鼠标跟随模式，添加监听器\n      if (readingMode === 'follow-mouse') {\n        setTimeout(() => {\n          addMouseFollowListeners();\n        }, 50);\n      }\n      return true; // 返回成功标志\n    } catch (error) {\n      console.error('处理PDF页面时出错:', error);\n      setContent('<div>无法处理PDF内容</div>');\n      return false;\n    }\n  };\n\n  // 检测是否为目录页\n  const detectIfTocPage = async textContent => {\n    const textItems = textContent.items;\n    let fullText = textItems.map(item => item.str).join('');\n\n    // 检查特征: \n    // 1. 页面上包含\"目录\"字样\n    // 2. 行尾通常有页码和前导符（...）\n    // 3. 短行居多，且多有规律的缩进\n    const hasTocKeywords = /目\\s*录|contents|index/i.test(fullText);\n    const hasPageNumberPatterns = /\\.{2,}|…{1,}\\s*\\d+/.test(fullText);\n\n    // 检查行的特征\n    let shortLinesCount = 0;\n    let linesWithNumbersCount = 0;\n\n    // 按Y坐标分组\n    const lineMap = new Map();\n    textItems.forEach(item => {\n      const yKey = Math.round(item.transform[5]);\n      if (!lineMap.has(yKey)) {\n        lineMap.set(yKey, []);\n      }\n      lineMap.get(yKey).push(item);\n    });\n    const lines = [...lineMap.values()];\n    lines.forEach(line => {\n      const lineText = line.map(item => item.str).join('');\n      if (lineText.length < 50) shortLinesCount++;\n      if (/\\d+$/.test(lineText)) linesWithNumbersCount++;\n    });\n    const shortLineRatio = shortLinesCount / lines.length;\n    const numberLineRatio = linesWithNumbersCount / lines.length;\n    return hasTocKeywords || hasPageNumberPatterns || shortLineRatio > 0.7 && numberLineRatio > 0.3;\n  };\n\n  // 处理目录页面 - 严格保持原始布局\n  const processTocPage = async (textContent, viewport) => {\n    const textItems = textContent.items;\n\n    // 生成HTML，严格保持原始位置和格式\n    let htmlContent = '<div class=\"pdf-toc-page\">';\n    textItems.forEach(item => {\n      // 获取原始位置信息\n      const x = item.transform[4];\n      const y = viewport.height - item.transform[5]; // 转换Y坐标\n\n      // 获取原始字体信息\n      const fontSize = Math.sqrt(item.transform[0] * item.transform[0] + item.transform[1] * item.transform[1]);\n      const fontWeight = item.fontName && item.fontName.toLowerCase().includes('bold') ? 'bold' : 'normal';\n\n      // 仅应用字间距，其他完全保持原样\n      const spacedText = item.str.split('').join('\\u200A');\n\n      // 使用绝对定位和原始样式属性\n      htmlContent += `<span style=\"\n        position: absolute; \n        left: ${x}px; \n        top: ${y}px; \n        font-size: ${fontSize}px; \n        font-weight: ${fontWeight};\n        letter-spacing: 0.3em;\n        white-space: nowrap;\n        font-family: inherit;\n        color: inherit;\n      \">${spacedText}</span>`;\n    });\n    htmlContent += '</div>';\n    setContent(htmlContent);\n  };\n\n  // 修改文本处理函数，实现按完整词随机高亮\n  const processTextWithHighlight = text => {\n    // 将文本按空格和标点符号分割成词\n    const words = text.split(/([\\s.,!?，。！？.!?]+)/);\n    let result = '';\n    let lastColor = null; // 记录上一个高亮颜色\n\n    words.forEach(word => {\n      // 跳过空字符串和纯空格\n      if (!word || /^\\s+$/.test(word)) {\n        result += word;\n        return;\n      }\n\n      // 增加高亮概率到80%，确保大部分文本被高亮\n      if (Math.random() < 0.8) {\n        // 确保相邻高亮词颜色不同\n        let color;\n        if (lastColor === 'red') {\n          color = 'blue';\n        } else if (lastColor === 'blue') {\n          color = 'red';\n        } else {\n          // 第一次高亮时随机选择颜色\n          color = Math.random() < 0.5 ? 'red' : 'blue';\n        }\n        lastColor = color;\n        result += `<span class=\"highlight-word ${color}\">${word}</span>`;\n      } else {\n        result += word;\n      }\n    });\n    return result;\n  };\n\n  // 修改processContentPage函数\n  const processContentPage = async (page, mode) => {\n    try {\n      const textContent = await page.getTextContent();\n      const textItems = textContent.items;\n      let extractedText = textItems.map(item => item.str).join(' ');\n\n      // 移除多余的空格\n      extractedText = extractedText.replace(/\\s+/g, ' ').trim();\n\n      // 根据阅读模式处理文本\n      let processedContent = '';\n      switch (mode) {\n        case 'normal':\n          // 普通模式 - 简单分段显示\n          processedContent = formatTextToHtml(extractedText);\n          break;\n        case 'static':\n          // 静态高亮模式 - 应用词性标注和颜色高亮\n          processedContent = applyStaticHighlight(extractedText);\n          break;\n        case 'follow-mouse':\n          // 鼠标跟随高亮模式 - 分段落但不预先高亮，由鼠标事件触发高亮\n          processedContent = formatTextForMouseFollow(extractedText);\n          break;\n        default:\n          processedContent = formatTextToHtml(extractedText);\n      }\n      setContent(processedContent);\n    } catch (error) {\n      console.error('处理内容页面时出错:', error);\n      setContent('<div>无法处理PDF内容</div>');\n    }\n  };\n\n  // 处理TXT文件\n  const handleTxtFile = async file => {\n    try {\n      setLoading(true);\n      const text = await file.text();\n      // 将文本分页处理\n      const pageTexts = text.split('\\n\\n').map(paragraph => [{\n        text: paragraph,\n        x: 40,\n        y: 40,\n        fontSize: 16,\n        fontFamily: 'serif'\n      }]);\n      setPages(pageTexts);\n      setTotalPages(pageTexts.length);\n      setCurrentPage(1);\n      setLoading(false);\n    } catch (error) {\n      console.error('TXT处理错误:', error);\n      setLoading(false);\n      alert('TXT文件处理失败，请重试');\n    }\n  };\n\n  // 文件上传处理\n  const handleFileUpload = async e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    if (file.type === 'application/pdf') {\n      await handlePdfFile(file);\n    } else if (file.type === 'text/plain') {\n      handleTxtFile(file);\n    } else {\n      alert('请上传PDF或TXT文件');\n    }\n  };\n\n  // 翻页函数\n  const changePage = async delta => {\n    const newPage = currentPage + delta;\n    if (newPage >= 1 && newPage <= totalPages && pdfDocument) {\n      // 先更新当前页码\n      setCurrentPage(newPage);\n\n      // 立即处理新页面内容\n      try {\n        console.log(`切换到页面 ${newPage}...`);\n\n        // 获取新页面内容\n        const page = await pdfDocument.getPage(newPage);\n        const textContent = await page.getTextContent();\n        const textItems = textContent.items;\n        let extractedText = textItems.map(item => item.str).join(' ');\n        extractedText = extractedText.replace(/\\s+/g, ' ').trim();\n\n        // 根据当前阅读模式处理文本\n        let processedContent = '';\n        switch (readingMode) {\n          case 'normal':\n            processedContent = formatTextToHtml(extractedText);\n            break;\n          case 'static':\n            processedContent = applyStaticHighlight(extractedText);\n            break;\n          case 'follow-mouse':\n            processedContent = formatTextForMouseFollow(extractedText);\n            break;\n          default:\n            processedContent = formatTextToHtml(extractedText);\n        }\n\n        // 直接更新DOM，确保立即生效\n        const contentArea = document.querySelector('.page-content');\n        if (contentArea) {\n          contentArea.innerHTML = processedContent;\n\n          // 如果是鼠标跟随模式，立即添加事件监听器\n          if (readingMode === 'follow-mouse') {\n            // 立即应用鼠标跟随效果\n            setTimeout(() => {\n              console.log('添加鼠标跟随监听器 (翻页后)');\n              addMouseFollowListeners();\n\n              // 主动触发一次鼠标事件，测试高亮效果\n              const testEvent = new MouseEvent('mousemove', {\n                bubbles: true,\n                cancelable: true,\n                view: window,\n                clientX: 100,\n                clientY: 100\n              });\n              contentArea.dispatchEvent(testEvent);\n            }, 10);\n          }\n        }\n      } catch (error) {\n        console.error('翻页处理出错:', error);\n      }\n    }\n  };\n\n  // 处理鼠标移动事件\n  const handleMouseMove = e => {\n    // 确保只在鼠标跟随模式下生效\n    if (readingMode !== 'follow-mouse') return;\n\n    // 获取鼠标下方的元素\n    const mouseTarget = document.elementFromPoint(e.clientX, e.clientY);\n\n    // 如果鼠标下方是文本段落或句子\n    if (mouseTarget && (mouseTarget.classList.contains('pdf-paragraph') || mouseTarget.tagName === 'P' || mouseTarget.tagName === 'SPAN')) {\n      // 查找当前鼠标所在行\n      const targetParagraph = mouseTarget.closest('.pdf-paragraph');\n      if (!targetParagraph) return;\n\n      // 计算鼠标在段落中的相对Y位置\n      const paragraphRect = targetParagraph.getBoundingClientRect();\n      const relativeY = e.clientY - paragraphRect.top;\n\n      // 计算行高和当前鼠标所在的行数\n      const computedStyle = window.getComputedStyle(targetParagraph);\n      const fontSize = parseInt(computedStyle.fontSize);\n      const lineHeight = parseInt(computedStyle.lineHeight) || fontSize * 1.5;\n      const lineIndex = Math.floor(relativeY / lineHeight);\n\n      // 检查当前行是否已经有高亮\n      const existingHighlight = targetParagraph.querySelector('.line-highlight');\n      const currentHighlightLine = existingHighlight ? parseInt(existingHighlight.dataset.lineIndex || 0) : -1;\n\n      // 只有当鼠标移动到新行时，才更新高亮\n      if (!existingHighlight || currentHighlightLine !== lineIndex) {\n        // 如果已有高亮，先移除旧高亮\n        if (existingHighlight) {\n          existingHighlight.remove();\n        }\n\n        // 创建行高亮元素\n        const lineHighlight = document.createElement('div');\n        lineHighlight.className = 'line-highlight mouse-highlight';\n        lineHighlight.dataset.lineIndex = lineIndex;\n\n        // 设置高亮元素的位置和大小\n        lineHighlight.style.position = 'absolute';\n        lineHighlight.style.left = '0';\n        lineHighlight.style.top = `${lineIndex * lineHeight}px`;\n        lineHighlight.style.width = '100%';\n        lineHighlight.style.height = `${lineHeight}px`;\n        lineHighlight.style.pointerEvents = 'none';\n        lineHighlight.style.backgroundColor = 'rgba(255, 140, 0, 0.4)';\n        lineHighlight.style.borderRadius = '4px';\n        lineHighlight.style.boxShadow = '0 0 15px rgba(255, 140, 0, 0.6)';\n        lineHighlight.style.zIndex = '5';\n        lineHighlight.style.opacity = '1';\n        lineHighlight.style.transform = 'translateZ(0)';\n\n        // 确保段落有相对定位\n        targetParagraph.style.position = 'relative';\n\n        // 添加高亮元素到段落中\n        targetParagraph.appendChild(lineHighlight);\n      }\n    }\n  };\n\n  // 格式化文本用于鼠标跟随高亮模式\n  const formatTextForMouseFollow = text => {\n    const paragraphs = text.split(/(?<=。|！|？|\\.|\\!|\\?)\\s+/).filter(p => p.trim());\n    let htmlContent = '<div class=\"pdf-content mouse-follow-content\">';\n    paragraphs.forEach(paragraph => {\n      // 添加data-follow属性并确保position: relative\n      htmlContent += `<p class=\"pdf-paragraph\" data-follow=\"true\" style=\"position: relative;\">${paragraph}</p>`;\n    });\n    htmlContent += '</div>';\n    return htmlContent;\n  };\n\n  // 添加鼠标跟随监听器\n  const addMouseFollowListeners = () => {\n    console.log('添加鼠标跟随监听器，当前模式:', readingMode);\n\n    // 确保只在鼠标跟随模式下添加事件监听器\n    if (readingMode !== 'follow-mouse') return;\n    const contentArea = document.querySelector('.page-content');\n    if (!contentArea) {\n      console.error('找不到内容区域!');\n      return;\n    }\n\n    // 清理旧的监听器和observer\n    contentArea.removeEventListener('mousemove', handleMouseMove);\n    contentArea.removeEventListener('mouseleave', clearAllHighlights);\n    if (contentArea._highlightObserver) {\n      contentArea._highlightObserver.disconnect();\n    }\n\n    // 添加新的监听器\n    contentArea.addEventListener('mousemove', handleMouseMove);\n    contentArea.addEventListener('mouseleave', clearAllHighlights);\n\n    // 立即设置段落监听器和样式\n    const setupParagraphListeners = () => {\n      const paragraphs = document.querySelectorAll('.pdf-paragraph');\n      console.log(`设置段落监听器 (找到 ${paragraphs.length} 个段落)`);\n      paragraphs.forEach(paragraph => {\n        // 确保段落有相对定位\n        paragraph.style.position = 'relative';\n\n        // 添加鼠标离开事件\n        paragraph.addEventListener('mouseleave', e => {\n          const relatedTarget = e.relatedTarget;\n          if (!paragraph.contains(relatedTarget)) {\n            const highlights = paragraph.querySelectorAll('.line-highlight');\n            highlights.forEach(highlight => highlight.remove());\n          }\n        });\n      });\n\n      // 立即触发一次mousemove事件以激活当前鼠标位置的高亮\n      if (paragraphs.length > 0) {\n        const fakeEvent = new MouseEvent('mousemove', {\n          clientX: window.innerWidth / 2,\n          clientY: window.innerHeight / 2,\n          bubbles: true\n        });\n        contentArea.dispatchEvent(fakeEvent);\n      }\n    };\n\n    // 立即执行一次\n    setupParagraphListeners();\n\n    // 设置MutationObserver来监听内容变化\n    const observer = new MutationObserver(mutations => {\n      // 只在添加了新的pdf-paragraph时才重新设置\n      const hasNewParagraphs = mutations.some(mutation => Array.from(mutation.addedNodes).some(node => node.classList && node.classList.contains('pdf-paragraph')));\n      if (hasNewParagraphs) {\n        setupParagraphListeners();\n      }\n    });\n    observer.observe(contentArea, {\n      childList: true,\n      subtree: true\n    });\n    contentArea._highlightObserver = observer;\n  };\n\n  // 初始化鼠标跟随功能\n  const initializeMouseFollow = () => {\n    addMouseFollowListeners();\n\n    // 确保当前内容已经准备好\n    if (document.querySelector('.pdf-paragraph')) {\n      var _document$querySelect;\n      // 模拟鼠标移动以立即激活高亮\n      const fakeEvent = new MouseEvent('mousemove', {\n        clientX: window.innerWidth / 2,\n        clientY: window.innerHeight / 2,\n        bubbles: true\n      });\n      (_document$querySelect = document.querySelector('.page-content')) === null || _document$querySelect === void 0 ? void 0 : _document$querySelect.dispatchEvent(fakeEvent);\n    }\n  };\n\n  // 处理阅读模式改变\n  const handleReadingModeChange = e => {\n    const newMode = e.target.value;\n    console.log(`切换阅读模式: ${readingMode} -> ${newMode}`);\n\n    // 清理函数保持不变\n    cleanupDOM();\n    setReadingMode(newMode);\n\n    // 立即应用新模式到当前页面\n    if (pdfDocument && currentPage > 0) {\n      (async () => {\n        try {\n          console.log(`立即重新处理当前页面 ${currentPage}...`);\n          const page = await pdfDocument.getPage(currentPage);\n          const textContent = await page.getTextContent();\n          const textItems = textContent.items;\n          let extractedText = textItems.map(item => item.str).join(' ');\n          extractedText = extractedText.replace(/\\s+/g, ' ').trim();\n\n          // 根据新模式处理文本\n          let processedContent = '';\n          if (newMode === 'follow-mouse') {\n            processedContent = formatTextForMouseFollow(extractedText);\n          } else {\n            processedContent = formatTextToHtml(extractedText);\n          }\n\n          // 直接设置内容\n          const contentArea = document.querySelector('.page-content');\n          contentArea.innerHTML = processedContent;\n\n          // 如果是鼠标跟随模式，立即初始化\n          if (newMode === 'follow-mouse') {\n            // 确保DOM更新完成后初始化鼠标跟随功能\n            setTimeout(() => {\n              initializeMouseFollow();\n            }, 50);\n          }\n        } catch (error) {\n          console.error('立即应用模式失败:', error);\n        }\n      })();\n    }\n  };\n\n  // 清除所有高亮的辅助函数\n  const clearAllHighlights = () => {\n    // 清理所有类型的高亮\n    const highlights = document.querySelectorAll('.mouse-highlight, .line-highlight, .highlight-word, .reading-line');\n    highlights.forEach(el => el.remove());\n  };\n\n  // 在组件卸载时清除事件监听器\n  useEffect(() => {\n    return () => {\n      removeMouseFollowListeners();\n    };\n  }, []);\n\n  // 格式化文本为HTML\n  const formatTextToHtml = text => {\n    // 分段\n    const paragraphs = text.split(/(?<=。|！|？|\\.|\\!|\\?)\\s+/).filter(p => p.trim());\n\n    // 创建HTML内容\n    let htmlContent = '<div class=\"pdf-content\">';\n    paragraphs.forEach(paragraph => {\n      htmlContent += `<p class=\"pdf-paragraph\">${paragraph}</p>`;\n    });\n    htmlContent += '</div>';\n    return htmlContent;\n  };\n\n  // 应用静态高亮样式\n  const applyStaticHighlight = text => {\n    // 分段\n    const paragraphs = text.split(/(?<=。|！|？|\\.|\\!|\\?)\\s+/).filter(p => p.trim());\n\n    // 创建HTML内容\n    let htmlContent = '<div class=\"pdf-content\">';\n    paragraphs.forEach(paragraph => {\n      // 使用processTextWithHighlight函数处理段落\n      htmlContent += `<p class=\"pdf-paragraph\">${processTextWithHighlight(paragraph)}</p>`;\n    });\n    htmlContent += '</div>';\n    return htmlContent;\n  };\n\n  // 清理DOM元素的函数\n  const cleanupDOM = () => {\n    console.log('清理DOM元素效果和类...');\n    // 1. 移除所有可能的高亮\n    const highlights = document.querySelectorAll('.mouse-highlight, .line-highlight, .highlight-word, .reading-line');\n    highlights.forEach(el => el.remove());\n\n    // 2. 移除所有鼠标跟随监听器\n    const contentArea = document.querySelector('.page-content');\n    if (contentArea) {\n      contentArea.removeEventListener('mousemove', handleMouseMove);\n      contentArea.removeEventListener('mouseleave', clearAllHighlights);\n\n      // 3. 断开MutationObserver\n      if (contentArea._highlightObserver) {\n        contentArea._highlightObserver.disconnect();\n        delete contentArea._highlightObserver;\n      }\n\n      // 4. 移除mouse-follow-content类\n      const mouseFollowContent = document.querySelector('.mouse-follow-content');\n      if (mouseFollowContent) {\n        mouseFollowContent.classList.remove('mouse-follow-content');\n      }\n    }\n\n    // 5. 重置所有段落，移除事件监听器\n    const paragraphs = document.querySelectorAll('.pdf-paragraph');\n    paragraphs.forEach(paragraph => {\n      if (paragraph.parentNode) {\n        const newParagraph = paragraph.cloneNode(true);\n        paragraph.parentNode.replaceChild(newParagraph, paragraph);\n      }\n    });\n  };\n\n  // 移除鼠标跟随事件监听器\n  const removeMouseFollowListeners = () => {\n    const contentArea = document.querySelector('.page-content');\n    if (contentArea) {\n      // 移除所有事件监听器\n      contentArea.removeEventListener('mousemove', handleMouseMove);\n      contentArea.removeEventListener('mouseleave', clearAllHighlights);\n\n      // 移除MutationObserver\n      if (contentArea._highlightObserver) {\n        contentArea._highlightObserver.disconnect();\n        delete contentArea._highlightObserver;\n      }\n\n      // 移除所有段落的鼠标事件监听器\n      const paragraphs = document.querySelectorAll('.pdf-paragraph');\n      paragraphs.forEach(paragraph => {\n        const newParagraph = paragraph.cloneNode(true);\n        if (paragraph.parentNode) {\n          paragraph.parentNode.replaceChild(newParagraph, paragraph);\n        }\n      });\n\n      // 移除mouse-follow-content类\n      const mouseFollowContent = document.querySelector('.mouse-follow-content');\n      if (mouseFollowContent) {\n        mouseFollowContent.classList.remove('mouse-follow-content');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"ADHD\\u9605\\u8BFB\\u52A9\\u624B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 763,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 762,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"upload-btn\",\n        children: [\"\\u9009\\u62E9\\u6587\\u4EF6\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".pdf,.txt\",\n          onChange: handleFileUpload,\n          style: {\n            display: 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 767,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 765,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 761,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"ADHD\\u9605\\u8BFB\\u52A9\\u624B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 777,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mode-selector\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              value: readingMode,\n              onChange: handleReadingModeChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"normal\",\n                children: \"\\u666E\\u901A\\u6A21\\u5F0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 781,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"static\",\n                children: \"\\u9759\\u6001\\u9AD8\\u4EAE\\u6A21\\u5F0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 782,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"follow-mouse\",\n                children: \"\\u9F20\\u6807\\u8DDF\\u968F\\u9AD8\\u4EAE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 783,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 780,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 779,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mode-selector\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              value: posMode,\n              onChange: e => setPosMode(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"none\",\n                children: \"\\u65E0\\u8BCD\\u6027\\u6807\\u6CE8\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 788,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"noun\",\n                children: \"\\u540D\\u8BCD\\u6807\\u6CE8\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 789,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"all\",\n                children: \"\\u5168\\u8BCD\\u6027\\u6807\\u6CE8\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 790,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 787,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 786,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 778,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 776,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-content\",\n        children: content ? /*#__PURE__*/_jsxDEV(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: content\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 797,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-state\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u8BF7\\u4E0A\\u4F20PDF\\u6216TXT\\u6587\\u4EF6\\u5F00\\u59CB\\u9605\\u8BFB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 800,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 799,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 795,\n        columnNumber: 9\n      }, this), content && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nav-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"page-btn prev\",\n          onClick: () => changePage(-1),\n          disabled: currentPage === 1,\n          children: \"\\u4E0A\\u4E00\\u9875\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 806,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"page-info\",\n          children: [\"\\u7B2C \", currentPage, \" \\u9875 / \\u5171 \", totalPages, \" \\u9875\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 809,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"page-btn next\",\n          onClick: () => changePage(1),\n          disabled: currentPage === totalPages,\n          children: \"\\u4E0B\\u4E00\\u9875\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 812,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 805,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 775,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 760,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"h5JipuZG13btp4lKlvCy8zJdNPI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","pdfjsLib","pdfjsViewer","marked","pdfjs","jsxDEV","_jsxDEV","GlobalWorkerOptions","workerSrc","version","tagPartsOfSpeech","text","punctuationMarks","segments","split","RegExp","map","mark","join","result","colorIndex","currentText","forEach","segment","index","test","isPunctuation","includes","color","App","_s","pages","setPages","currentPage","setCurrentPage","totalPages","setTotalPages","fileName","setFileName","loading","setLoading","fileRef","file","setFile","pdfInstance","setPdfInstance","extractedTextPages","setExtractedTextPages","readingMode","setReadingMode","posMode","setPosMode","markdownContent","setMarkdownContent","readerContainerRef","autoReadGuideRef","autoReadIntervalRef","content","setContent","pdfDocument","setPdfDocument","current","clearInterval","startAutoReadGuide","handlePdfFile","fileURL","URL","createObjectURL","loadingTask","getDocument","pdf","promise","numPages","extractAndProcessPage","console","log","error","alert","pageNum","page","getPage","textContent","getTextContent","viewport","getViewport","scale","isTableOfContents","detectIfTocPage","processTocPage","processContentPage","setTimeout","addMouseFollowListeners","textItems","items","fullText","item","str","hasTocKeywords","hasPageNumberPatterns","shortLinesCount","linesWithNumbersCount","lineMap","Map","yKey","Math","round","transform","has","set","get","push","lines","values","line","lineText","length","shortLineRatio","numberLineRatio","htmlContent","x","y","height","fontSize","sqrt","fontWeight","fontName","toLowerCase","spacedText","processTextWithHighlight","words","lastColor","word","random","mode","extractedText","replace","trim","processedContent","formatTextToHtml","applyStaticHighlight","formatTextForMouseFollow","handleTxtFile","pageTexts","paragraph","fontFamily","handleFileUpload","e","target","files","type","changePage","delta","newPage","contentArea","document","querySelector","innerHTML","testEvent","MouseEvent","bubbles","cancelable","view","window","clientX","clientY","dispatchEvent","handleMouseMove","mouseTarget","elementFromPoint","classList","contains","tagName","targetParagraph","closest","paragraphRect","getBoundingClientRect","relativeY","top","computedStyle","getComputedStyle","parseInt","lineHeight","lineIndex","floor","existingHighlight","currentHighlightLine","dataset","remove","lineHighlight","createElement","className","style","position","left","width","pointerEvents","backgroundColor","borderRadius","boxShadow","zIndex","opacity","appendChild","paragraphs","filter","p","removeEventListener","clearAllHighlights","_highlightObserver","disconnect","addEventListener","setupParagraphListeners","querySelectorAll","relatedTarget","highlights","highlight","fakeEvent","innerWidth","innerHeight","observer","MutationObserver","mutations","hasNewParagraphs","some","mutation","Array","from","addedNodes","node","observe","childList","subtree","initializeMouseFollow","_document$querySelect","handleReadingModeChange","newMode","value","cleanupDOM","el","removeMouseFollowListeners","mouseFollowContent","parentNode","newParagraph","cloneNode","replaceChild","children","_jsxFileName","lineNumber","columnNumber","accept","onChange","display","dangerouslySetInnerHTML","__html","onClick","disabled","_c","$RefreshReg$"],"sources":["D:/adhd-read-helper/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport * as pdfjsLib from 'pdfjs-dist';\nimport * as pdfjsViewer from 'pdfjs-dist/web/pdf_viewer';\nimport { marked } from 'marked'; // 需要安装: npm install marked\nimport './styles/Reader.css';\nimport { pdfjs } from 'pdfjs-dist';\n\n// 设置 PDF.js worker\npdfjsLib.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjsLib.version}/pdf.worker.min.js`;\n\n// 模拟NLP词性标注功能（实际应用中建议使用专业NLP库如nlp.js或调用API）\nconst tagPartsOfSpeech = (text) => {\n  // 定义所有标点符号\n  const punctuationMarks = [\n    '，', '。', '！', '？', '；', '：', '（', '）', '【', '】', '《', '》', '〈', '〉', '…', '—', '～', '·',\n    ',', '.', '!', '?', ';', ':', '(', ')', '[', ']', '{', '}', '-', '...', '..'\n  ];\n  \n  // 将文本按标点符号分割，保留标点符号\n  const segments = text.split(new RegExp(`([${punctuationMarks.map(mark => '\\\\' + mark).join('')}])`));\n  let result = '';\n  let colorIndex = 0; // 0: 红色, 1: 蓝色, 2: 黑色\n  let currentText = '';\n  \n  segments.forEach((segment, index) => {\n    // 跳过空字符串和纯空格\n    if (!segment || /^\\s+$/.test(segment)) {\n      result += segment;\n      return;\n    }\n    \n    // 检查是否是标点符号\n    const isPunctuation = punctuationMarks.includes(segment);\n    \n    // 根据索引选择颜色\n    let color;\n    switch (colorIndex) {\n      case 0:\n        color = 'red';\n        break;\n      case 1:\n        color = 'blue';\n        break;\n      case 2:\n        color = 'black';\n        break;\n      default:\n        color = 'black';\n    }\n    \n    // 将当前文本和标点符号放在同一个颜色块中\n    if (isPunctuation) {\n      // 如果有累积的文本，先添加文本\n      if (currentText) {\n        result += `<span class=\"highlight-word ${color}\">${currentText}</span>`;\n        currentText = '';\n      }\n      // 添加标点符号\n      result += `<span class=\"highlight-word ${color}\">${segment}</span>`;\n      // 切换颜色\n      colorIndex = (colorIndex + 1) % 3;\n    } else {\n      // 累积文本\n      currentText += segment;\n    }\n  });\n  \n  // 处理最后可能剩余的文本\n  if (currentText) {\n    const color = colorIndex === 0 ? 'red' : colorIndex === 1 ? 'blue' : 'black';\n    result += `<span class=\"highlight-word ${color}\">${currentText}</span>`;\n  }\n  \n  return result;\n};\n\nconst App = () => {\n  // 状态定义\n  const [pages, setPages] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const [fileName, setFileName] = useState('');\n  const [loading, setLoading] = useState(false);\n  const fileRef = useRef(null);\n  const [file, setFile] = useState(null);\n  const [pdfInstance, setPdfInstance] = useState(null);\n  const [extractedTextPages, setExtractedTextPages] = useState([]);\n  const [readingMode, setReadingMode] = useState('normal');\n  const [posMode, setPosMode] = useState('none');\n  const [markdownContent, setMarkdownContent] = useState('');\n  const readerContainerRef = useRef(null);\n  const autoReadGuideRef = useRef(null);\n  const autoReadIntervalRef = useRef(null);\n  const [content, setContent] = useState('');\n  const [pdfDocument, setPdfDocument] = useState(null);\n\n  // 初始化PDF.js\n  useEffect(() => {\n    pdfjsLib.GlobalWorkerOptions.workerSrc = `https://cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjsLib.version}/pdf.worker.min.js`;\n    \n    return () => {\n      // 清理自动阅读定时器\n      if (autoReadIntervalRef.current) {\n        clearInterval(autoReadIntervalRef.current);\n      }\n    };\n  }, []);\n  \n  // 当阅读模式改变时应用效果\n  useEffect(() => {\n    if (readingMode === 'auto-guide') {\n      startAutoReadGuide();\n    } else if (autoReadIntervalRef.current) {\n      clearInterval(autoReadIntervalRef.current);\n    }\n  }, [readingMode, markdownContent]);\n\n  // 修改PDF处理函数，确保内容正确提取和显示\n  const handlePdfFile = async (file) => {\n    try {\n      const fileURL = URL.createObjectURL(file);\n      const loadingTask = pdfjsLib.getDocument(fileURL);\n      const pdf = await loadingTask.promise;\n      \n      setPdfDocument(pdf);\n      setTotalPages(pdf.numPages);\n      setCurrentPage(1);\n      \n      // 加载第一页\n      await extractAndProcessPage(pdf, 1);\n      \n      // 添加调试信息\n      console.log('PDF加载成功，页数:', pdf.numPages);\n    } catch (error) {\n      console.error('加载PDF时出错:', error);\n      alert('PDF加载失败，请尝试其他文件');\n    }\n  };\n  \n  // 提取和处理PDF页面内容的函数 - 区分目录和正文页面\n  const extractAndProcessPage = async (pdf, pageNum) => {\n    try {\n      const page = await pdf.getPage(pageNum);\n      const textContent = await page.getTextContent();\n      const viewport = page.getViewport({ scale: 1.0 });\n      \n      // 判断当前页面是否为目录页\n      const isTableOfContents = await detectIfTocPage(textContent);\n      \n      if (isTableOfContents) {\n        // 处理目录页面 - 保持原布局，仅调整字间距\n        await processTocPage(textContent, viewport);\n      } else {\n        // 处理正文页面 - 以句号为标准划分段落\n        await processContentPage(page, readingMode);\n      }\n      \n      // 在内容处理完成后，如果是鼠标跟随模式，添加监听器\n      if (readingMode === 'follow-mouse') {\n        setTimeout(() => {\n          addMouseFollowListeners();\n        }, 50);\n      }\n      \n      return true; // 返回成功标志\n    } catch (error) {\n      console.error('处理PDF页面时出错:', error);\n      setContent('<div>无法处理PDF内容</div>');\n      return false;\n    }\n  };\n\n  // 检测是否为目录页\n  const detectIfTocPage = async (textContent) => {\n    const textItems = textContent.items;\n    let fullText = textItems.map(item => item.str).join('');\n    \n    // 检查特征: \n    // 1. 页面上包含\"目录\"字样\n    // 2. 行尾通常有页码和前导符（...）\n    // 3. 短行居多，且多有规律的缩进\n    const hasTocKeywords = /目\\s*录|contents|index/i.test(fullText);\n    const hasPageNumberPatterns = /\\.{2,}|…{1,}\\s*\\d+/.test(fullText);\n    \n    // 检查行的特征\n    let shortLinesCount = 0;\n    let linesWithNumbersCount = 0;\n    \n    // 按Y坐标分组\n    const lineMap = new Map();\n    textItems.forEach(item => {\n      const yKey = Math.round(item.transform[5]);\n      if (!lineMap.has(yKey)) {\n        lineMap.set(yKey, []);\n      }\n      lineMap.get(yKey).push(item);\n    });\n    \n    const lines = [...lineMap.values()];\n    \n    lines.forEach(line => {\n      const lineText = line.map(item => item.str).join('');\n      if (lineText.length < 50) shortLinesCount++;\n      if (/\\d+$/.test(lineText)) linesWithNumbersCount++;\n    });\n    \n    const shortLineRatio = shortLinesCount / lines.length;\n    const numberLineRatio = linesWithNumbersCount / lines.length;\n    \n    return hasTocKeywords || hasPageNumberPatterns || (shortLineRatio > 0.7 && numberLineRatio > 0.3);\n  };\n\n  // 处理目录页面 - 严格保持原始布局\n  const processTocPage = async (textContent, viewport) => {\n    const textItems = textContent.items;\n    \n    // 生成HTML，严格保持原始位置和格式\n    let htmlContent = '<div class=\"pdf-toc-page\">';\n    \n    textItems.forEach(item => {\n      // 获取原始位置信息\n      const x = item.transform[4];\n      const y = viewport.height - item.transform[5]; // 转换Y坐标\n      \n      // 获取原始字体信息\n      const fontSize = Math.sqrt(item.transform[0] * item.transform[0] + item.transform[1] * item.transform[1]);\n      const fontWeight = item.fontName && item.fontName.toLowerCase().includes('bold') ? 'bold' : 'normal';\n      \n      // 仅应用字间距，其他完全保持原样\n      const spacedText = item.str.split('').join('\\u200A');\n      \n      // 使用绝对定位和原始样式属性\n      htmlContent += `<span style=\"\n        position: absolute; \n        left: ${x}px; \n        top: ${y}px; \n        font-size: ${fontSize}px; \n        font-weight: ${fontWeight};\n        letter-spacing: 0.3em;\n        white-space: nowrap;\n        font-family: inherit;\n        color: inherit;\n      \">${spacedText}</span>`;\n    });\n    \n    htmlContent += '</div>';\n    setContent(htmlContent);\n  };\n\n  // 修改文本处理函数，实现按完整词随机高亮\n  const processTextWithHighlight = (text) => {\n    // 将文本按空格和标点符号分割成词\n    const words = text.split(/([\\s.,!?，。！？.!?]+)/);\n    let result = '';\n    let lastColor = null; // 记录上一个高亮颜色\n    \n    words.forEach(word => {\n      // 跳过空字符串和纯空格\n      if (!word || /^\\s+$/.test(word)) {\n        result += word;\n        return;\n      }\n      \n      // 增加高亮概率到80%，确保大部分文本被高亮\n      if (Math.random() < 0.8) {\n        // 确保相邻高亮词颜色不同\n        let color;\n        if (lastColor === 'red') {\n          color = 'blue';\n        } else if (lastColor === 'blue') {\n          color = 'red';\n        } else {\n          // 第一次高亮时随机选择颜色\n          color = Math.random() < 0.5 ? 'red' : 'blue';\n        }\n        lastColor = color;\n        \n        result += `<span class=\"highlight-word ${color}\">${word}</span>`;\n      } else {\n        result += word;\n      }\n    });\n    \n    return result;\n  };\n\n  // 修改processContentPage函数\n  const processContentPage = async (page, mode) => {\n    try {\n      const textContent = await page.getTextContent();\n      const textItems = textContent.items;\n      let extractedText = textItems.map(item => item.str).join(' ');\n      \n      // 移除多余的空格\n      extractedText = extractedText.replace(/\\s+/g, ' ').trim();\n      \n      // 根据阅读模式处理文本\n      let processedContent = '';\n      switch(mode) {\n        case 'normal':\n          // 普通模式 - 简单分段显示\n          processedContent = formatTextToHtml(extractedText);\n          break;\n        case 'static':\n          // 静态高亮模式 - 应用词性标注和颜色高亮\n          processedContent = applyStaticHighlight(extractedText);\n          break;\n        case 'follow-mouse':\n          // 鼠标跟随高亮模式 - 分段落但不预先高亮，由鼠标事件触发高亮\n          processedContent = formatTextForMouseFollow(extractedText);\n          break;\n        default:\n          processedContent = formatTextToHtml(extractedText);\n      }\n      \n      setContent(processedContent);\n    } catch (error) {\n      console.error('处理内容页面时出错:', error);\n      setContent('<div>无法处理PDF内容</div>');\n    }\n  };\n\n  // 处理TXT文件\n  const handleTxtFile = async (file) => {\n    try {\n      setLoading(true);\n      const text = await file.text();\n      // 将文本分页处理\n      const pageTexts = text.split('\\n\\n').map(paragraph => [{\n        text: paragraph,\n        x: 40,\n        y: 40,\n        fontSize: 16,\n        fontFamily: 'serif'\n      }]);\n      setPages(pageTexts);\n      setTotalPages(pageTexts.length);\n      setCurrentPage(1);\n      setLoading(false);\n    } catch (error) {\n      console.error('TXT处理错误:', error);\n      setLoading(false);\n      alert('TXT文件处理失败，请重试');\n    }\n  };\n\n  // 文件上传处理\n  const handleFileUpload = async (e) => {\n    const file = e.target.files[0];\n    if (!file) return;\n    \n    if (file.type === 'application/pdf') {\n      await handlePdfFile(file);\n    } else if (file.type === 'text/plain') {\n      handleTxtFile(file);\n    } else {\n      alert('请上传PDF或TXT文件');\n    }\n  };\n\n  // 翻页函数\n  const changePage = async (delta) => {\n    const newPage = currentPage + delta;\n    if (newPage >= 1 && newPage <= totalPages && pdfDocument) {\n      // 先更新当前页码\n      setCurrentPage(newPage);\n      \n      // 立即处理新页面内容\n      try {\n        console.log(`切换到页面 ${newPage}...`);\n        \n        // 获取新页面内容\n        const page = await pdfDocument.getPage(newPage);\n        const textContent = await page.getTextContent();\n        const textItems = textContent.items;\n        let extractedText = textItems.map(item => item.str).join(' ');\n        extractedText = extractedText.replace(/\\s+/g, ' ').trim();\n        \n        // 根据当前阅读模式处理文本\n        let processedContent = '';\n        switch(readingMode) {\n          case 'normal':\n            processedContent = formatTextToHtml(extractedText);\n            break;\n          case 'static':\n            processedContent = applyStaticHighlight(extractedText);\n            break;\n          case 'follow-mouse':\n            processedContent = formatTextForMouseFollow(extractedText);\n            break;\n          default:\n            processedContent = formatTextToHtml(extractedText);\n        }\n        \n        // 直接更新DOM，确保立即生效\n        const contentArea = document.querySelector('.page-content');\n        if (contentArea) {\n          contentArea.innerHTML = processedContent;\n          \n          // 如果是鼠标跟随模式，立即添加事件监听器\n          if (readingMode === 'follow-mouse') {\n            // 立即应用鼠标跟随效果\n            setTimeout(() => {\n              console.log('添加鼠标跟随监听器 (翻页后)');\n              addMouseFollowListeners();\n              \n              // 主动触发一次鼠标事件，测试高亮效果\n              const testEvent = new MouseEvent('mousemove', {\n                bubbles: true,\n                cancelable: true,\n                view: window,\n                clientX: 100,\n                clientY: 100\n              });\n              contentArea.dispatchEvent(testEvent);\n            }, 10);\n          }\n        }\n      } catch (error) {\n        console.error('翻页处理出错:', error);\n      }\n    }\n  };\n\n  // 处理鼠标移动事件\n  const handleMouseMove = (e) => {\n    // 确保只在鼠标跟随模式下生效\n    if (readingMode !== 'follow-mouse') return;\n    \n    // 获取鼠标下方的元素\n    const mouseTarget = document.elementFromPoint(e.clientX, e.clientY);\n    \n    // 如果鼠标下方是文本段落或句子\n    if (mouseTarget && \n       (mouseTarget.classList.contains('pdf-paragraph') || \n        mouseTarget.tagName === 'P' || \n        mouseTarget.tagName === 'SPAN')) {\n      \n      // 查找当前鼠标所在行\n      const targetParagraph = mouseTarget.closest('.pdf-paragraph');\n      if (!targetParagraph) return;\n      \n      // 计算鼠标在段落中的相对Y位置\n      const paragraphRect = targetParagraph.getBoundingClientRect();\n      const relativeY = e.clientY - paragraphRect.top;\n      \n      // 计算行高和当前鼠标所在的行数\n      const computedStyle = window.getComputedStyle(targetParagraph);\n      const fontSize = parseInt(computedStyle.fontSize);\n      const lineHeight = parseInt(computedStyle.lineHeight) || fontSize * 1.5;\n      const lineIndex = Math.floor(relativeY / lineHeight);\n      \n      // 检查当前行是否已经有高亮\n      const existingHighlight = targetParagraph.querySelector('.line-highlight');\n      const currentHighlightLine = existingHighlight ? \n        parseInt(existingHighlight.dataset.lineIndex || 0) : -1;\n      \n      // 只有当鼠标移动到新行时，才更新高亮\n      if (!existingHighlight || currentHighlightLine !== lineIndex) {\n        // 如果已有高亮，先移除旧高亮\n        if (existingHighlight) {\n          existingHighlight.remove();\n        }\n        \n        // 创建行高亮元素\n        const lineHighlight = document.createElement('div');\n        lineHighlight.className = 'line-highlight mouse-highlight';\n        lineHighlight.dataset.lineIndex = lineIndex;\n        \n        // 设置高亮元素的位置和大小\n        lineHighlight.style.position = 'absolute';\n        lineHighlight.style.left = '0';\n        lineHighlight.style.top = `${lineIndex * lineHeight}px`;\n        lineHighlight.style.width = '100%';\n        lineHighlight.style.height = `${lineHeight}px`;\n        lineHighlight.style.pointerEvents = 'none';\n        lineHighlight.style.backgroundColor = 'rgba(255, 140, 0, 0.4)';\n        lineHighlight.style.borderRadius = '4px';\n        lineHighlight.style.boxShadow = '0 0 15px rgba(255, 140, 0, 0.6)';\n        lineHighlight.style.zIndex = '5';\n        lineHighlight.style.opacity = '1';\n        lineHighlight.style.transform = 'translateZ(0)';\n        \n        // 确保段落有相对定位\n        targetParagraph.style.position = 'relative';\n        \n        // 添加高亮元素到段落中\n        targetParagraph.appendChild(lineHighlight);\n      }\n    }\n  };\n\n  // 格式化文本用于鼠标跟随高亮模式\n  const formatTextForMouseFollow = (text) => {\n    const paragraphs = text.split(/(?<=。|！|？|\\.|\\!|\\?)\\s+/).filter(p => p.trim());\n    \n    let htmlContent = '<div class=\"pdf-content mouse-follow-content\">';\n    \n    paragraphs.forEach(paragraph => {\n      // 添加data-follow属性并确保position: relative\n      htmlContent += `<p class=\"pdf-paragraph\" data-follow=\"true\" style=\"position: relative;\">${paragraph}</p>`;\n    });\n    \n    htmlContent += '</div>';\n    return htmlContent;\n  };\n\n  // 添加鼠标跟随监听器\n  const addMouseFollowListeners = () => {\n    console.log('添加鼠标跟随监听器，当前模式:', readingMode);\n    \n    // 确保只在鼠标跟随模式下添加事件监听器\n    if (readingMode !== 'follow-mouse') return;\n    \n    const contentArea = document.querySelector('.page-content');\n    if (!contentArea) {\n      console.error('找不到内容区域!');\n      return;\n    }\n    \n    // 清理旧的监听器和observer\n    contentArea.removeEventListener('mousemove', handleMouseMove);\n    contentArea.removeEventListener('mouseleave', clearAllHighlights);\n    \n    if (contentArea._highlightObserver) {\n      contentArea._highlightObserver.disconnect();\n    }\n    \n    // 添加新的监听器\n    contentArea.addEventListener('mousemove', handleMouseMove);\n    contentArea.addEventListener('mouseleave', clearAllHighlights);\n    \n    // 立即设置段落监听器和样式\n    const setupParagraphListeners = () => {\n      const paragraphs = document.querySelectorAll('.pdf-paragraph');\n      console.log(`设置段落监听器 (找到 ${paragraphs.length} 个段落)`);\n      \n      paragraphs.forEach(paragraph => {\n        // 确保段落有相对定位\n        paragraph.style.position = 'relative';\n        \n        // 添加鼠标离开事件\n        paragraph.addEventListener('mouseleave', (e) => {\n          const relatedTarget = e.relatedTarget;\n          if (!paragraph.contains(relatedTarget)) {\n            const highlights = paragraph.querySelectorAll('.line-highlight');\n            highlights.forEach(highlight => highlight.remove());\n          }\n        });\n      });\n      \n      // 立即触发一次mousemove事件以激活当前鼠标位置的高亮\n      if (paragraphs.length > 0) {\n        const fakeEvent = new MouseEvent('mousemove', {\n          clientX: window.innerWidth / 2,\n          clientY: window.innerHeight / 2,\n          bubbles: true\n        });\n        contentArea.dispatchEvent(fakeEvent);\n      }\n    };\n    \n    // 立即执行一次\n    setupParagraphListeners();\n    \n    // 设置MutationObserver来监听内容变化\n    const observer = new MutationObserver((mutations) => {\n      // 只在添加了新的pdf-paragraph时才重新设置\n      const hasNewParagraphs = mutations.some(mutation => \n        Array.from(mutation.addedNodes).some(node => \n          node.classList && node.classList.contains('pdf-paragraph')\n        )\n      );\n      if (hasNewParagraphs) {\n        setupParagraphListeners();\n      }\n    });\n    \n    observer.observe(contentArea, { childList: true, subtree: true });\n    contentArea._highlightObserver = observer;\n  };\n\n  // 初始化鼠标跟随功能\n  const initializeMouseFollow = () => {\n    addMouseFollowListeners();\n    \n    // 确保当前内容已经准备好\n    if (document.querySelector('.pdf-paragraph')) {\n      // 模拟鼠标移动以立即激活高亮\n      const fakeEvent = new MouseEvent('mousemove', {\n        clientX: window.innerWidth / 2,\n        clientY: window.innerHeight / 2,\n        bubbles: true\n      });\n      document.querySelector('.page-content')?.dispatchEvent(fakeEvent);\n    }\n  };\n\n  // 处理阅读模式改变\n  const handleReadingModeChange = (e) => {\n    const newMode = e.target.value;\n    console.log(`切换阅读模式: ${readingMode} -> ${newMode}`);\n\n    // 清理函数保持不变\n    cleanupDOM();\n    setReadingMode(newMode);\n\n    // 立即应用新模式到当前页面\n    if (pdfDocument && currentPage > 0) {\n      (async () => {\n        try {\n          console.log(`立即重新处理当前页面 ${currentPage}...`);\n          const page = await pdfDocument.getPage(currentPage);\n          const textContent = await page.getTextContent();\n          const textItems = textContent.items;\n          let extractedText = textItems.map(item => item.str).join(' ');\n          extractedText = extractedText.replace(/\\s+/g, ' ').trim();\n\n          // 根据新模式处理文本\n          let processedContent = '';\n          if (newMode === 'follow-mouse') {\n            processedContent = formatTextForMouseFollow(extractedText);\n          } else {\n            processedContent = formatTextToHtml(extractedText);\n          }\n\n          // 直接设置内容\n          const contentArea = document.querySelector('.page-content');\n          contentArea.innerHTML = processedContent;\n\n          // 如果是鼠标跟随模式，立即初始化\n          if (newMode === 'follow-mouse') {\n            // 确保DOM更新完成后初始化鼠标跟随功能\n            setTimeout(() => {\n              initializeMouseFollow();\n            }, 50);\n          }\n        } catch (error) {\n          console.error('立即应用模式失败:', error);\n        }\n      })();\n    }\n  };\n\n  // 清除所有高亮的辅助函数\n  const clearAllHighlights = () => {\n    // 清理所有类型的高亮\n    const highlights = document.querySelectorAll('.mouse-highlight, .line-highlight, .highlight-word, .reading-line');\n    highlights.forEach(el => el.remove());\n  };\n\n  // 在组件卸载时清除事件监听器\n  useEffect(() => {\n    return () => {\n      removeMouseFollowListeners();\n    };\n  }, []);\n\n  // 格式化文本为HTML\n  const formatTextToHtml = (text) => {\n    // 分段\n    const paragraphs = text.split(/(?<=。|！|？|\\.|\\!|\\?)\\s+/).filter(p => p.trim());\n    \n    // 创建HTML内容\n    let htmlContent = '<div class=\"pdf-content\">';\n    \n    paragraphs.forEach(paragraph => {\n      htmlContent += `<p class=\"pdf-paragraph\">${paragraph}</p>`;\n    });\n    \n    htmlContent += '</div>';\n    return htmlContent;\n  };\n\n  // 应用静态高亮样式\n  const applyStaticHighlight = (text) => {\n    // 分段\n    const paragraphs = text.split(/(?<=。|！|？|\\.|\\!|\\?)\\s+/).filter(p => p.trim());\n    \n    // 创建HTML内容\n    let htmlContent = '<div class=\"pdf-content\">';\n    \n    paragraphs.forEach(paragraph => {\n      // 使用processTextWithHighlight函数处理段落\n      htmlContent += `<p class=\"pdf-paragraph\">${processTextWithHighlight(paragraph)}</p>`;\n    });\n    \n    htmlContent += '</div>';\n    return htmlContent;\n  };\n\n  // 清理DOM元素的函数\n  const cleanupDOM = () => {\n    console.log('清理DOM元素效果和类...');\n    // 1. 移除所有可能的高亮\n    const highlights = document.querySelectorAll('.mouse-highlight, .line-highlight, .highlight-word, .reading-line');\n    highlights.forEach(el => el.remove());\n    \n    // 2. 移除所有鼠标跟随监听器\n    const contentArea = document.querySelector('.page-content');\n    if (contentArea) {\n      contentArea.removeEventListener('mousemove', handleMouseMove);\n      contentArea.removeEventListener('mouseleave', clearAllHighlights);\n      \n      // 3. 断开MutationObserver\n      if (contentArea._highlightObserver) {\n        contentArea._highlightObserver.disconnect();\n        delete contentArea._highlightObserver;\n      }\n      \n      // 4. 移除mouse-follow-content类\n      const mouseFollowContent = document.querySelector('.mouse-follow-content');\n      if (mouseFollowContent) {\n        mouseFollowContent.classList.remove('mouse-follow-content');\n      }\n    }\n    \n    // 5. 重置所有段落，移除事件监听器\n    const paragraphs = document.querySelectorAll('.pdf-paragraph');\n    paragraphs.forEach(paragraph => {\n      if (paragraph.parentNode) {\n        const newParagraph = paragraph.cloneNode(true);\n        paragraph.parentNode.replaceChild(newParagraph, paragraph);\n      }\n    });\n  };\n\n  // 移除鼠标跟随事件监听器\n  const removeMouseFollowListeners = () => {\n    const contentArea = document.querySelector('.page-content');\n    if (contentArea) {\n      // 移除所有事件监听器\n      contentArea.removeEventListener('mousemove', handleMouseMove);\n      contentArea.removeEventListener('mouseleave', clearAllHighlights);\n      \n      // 移除MutationObserver\n      if (contentArea._highlightObserver) {\n        contentArea._highlightObserver.disconnect();\n        delete contentArea._highlightObserver;\n      }\n      \n      // 移除所有段落的鼠标事件监听器\n      const paragraphs = document.querySelectorAll('.pdf-paragraph');\n      paragraphs.forEach(paragraph => {\n        const newParagraph = paragraph.cloneNode(true);\n        if (paragraph.parentNode) {\n          paragraph.parentNode.replaceChild(newParagraph, paragraph);\n        }\n      });\n      \n      // 移除mouse-follow-content类\n      const mouseFollowContent = document.querySelector('.mouse-follow-content');\n      if (mouseFollowContent) {\n        mouseFollowContent.classList.remove('mouse-follow-content');\n      }\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"sidebar\">\n        <div className=\"logo\">\n          <h2>ADHD阅读助手</h2>\n        </div>\n        <label className=\"upload-btn\">\n          选择文件\n          <input\n            type=\"file\"\n            accept=\".pdf,.txt\"\n            onChange={handleFileUpload}\n            style={{ display: 'none' }}\n          />\n        </label>\n      </div>\n      <div className=\"main-content\">\n        <div className=\"header\">\n          <h1>ADHD阅读助手</h1>\n          <div className=\"controls\">\n            <div className=\"mode-selector\">\n              <select value={readingMode} onChange={handleReadingModeChange}>\n                <option value=\"normal\">普通模式</option>\n                <option value=\"static\">静态高亮模式</option>\n                <option value=\"follow-mouse\">鼠标跟随高亮</option>\n              </select>\n            </div>\n            <div className=\"mode-selector\">\n              <select value={posMode} onChange={(e) => setPosMode(e.target.value)}>\n                <option value=\"none\">无词性标注</option>\n                <option value=\"noun\">名词标注</option>\n                <option value=\"all\">全词性标注</option>\n              </select>\n            </div>\n          </div>\n        </div>\n        <div className=\"page-content\">\n          {content ? (\n            <div dangerouslySetInnerHTML={{ __html: content }} />\n          ) : (\n            <div className=\"empty-state\">\n              <p>请上传PDF或TXT文件开始阅读</p>\n            </div>\n          )}\n        </div>\n        {content && (\n          <div className=\"nav-buttons\">\n            <button className=\"page-btn prev\" onClick={() => changePage(-1)} disabled={currentPage === 1}>\n              上一页\n            </button>\n            <span className=\"page-info\">\n              第 {currentPage} 页 / 共 {totalPages} 页\n            </span>\n            <button className=\"page-btn next\" onClick={() => changePage(1)} disabled={currentPage === totalPages}>\n              下一页\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}