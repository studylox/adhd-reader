{"ast":null,"code":"var _jsxFileName = \"D:\\\\adhd-read-helper\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport * as pdfjsLib from 'pdfjs-dist';\nimport * as pdfjsViewer from 'pdfjs-dist/web/pdf_viewer';\nimport { marked } from 'marked'; // 需要安装: npm install marked\nimport './styles/Reader.css';\nimport { pdfjs } from 'pdfjs-dist';\n\n// 设置 PDF.js worker\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\npdfjsLib.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjsLib.version}/pdf.worker.min.js`;\n\n// 模拟NLP词性标注功能（实际应用中建议使用专业NLP库如nlp.js或调用API）\nconst tagPartsOfSpeech = text => {\n  // 使用简单的规则来标记常见名词\n  const commonNouns = ['书', '文章', '段落' /* 其他常见名词 */];\n  let highlightedText = text;\n  commonNouns.forEach(noun => {\n    const regex = new RegExp(noun, 'g');\n    highlightedText = highlightedText.replace(regex, `<span class=\"highlight\">${noun}</span>`);\n  });\n  return highlightedText;\n};\nconst App = () => {\n  _s();\n  // 状态定义\n  const [isDarkMode, setIsDarkMode] = useState(true);\n  const [pages, setPages] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const [fileName, setFileName] = useState('');\n  const [loading, setLoading] = useState(false);\n  const fileRef = useRef(null); // 添加文件引用\n  const [file, setFile] = useState(null);\n  const [pdfInstance, setPdfInstance] = useState(null);\n  const [extractedTextPages, setExtractedTextPages] = useState([]);\n  const [readingMode, setReadingMode] = useState('static'); // static, follow-mouse, auto-guide\n  const [highlightColor, setHighlightColor] = useState('#ffeb3b'); // 默认高亮颜色\n  const [highlightPOS, setHighlightPOS] = useState(['noun']); // 默认高亮词性\n  const [markdownContent, setMarkdownContent] = useState('');\n  const readerContainerRef = useRef(null);\n  const autoReadGuideRef = useRef(null);\n  const autoReadIntervalRef = useRef(null);\n\n  // 初始化PDF.js\n  useEffect(() => {\n    pdfjsLib.GlobalWorkerOptions.workerSrc = `https://cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjsLib.version}/pdf.worker.min.js`;\n\n    // 设置高亮颜色\n    document.documentElement.style.setProperty('--highlight-color', highlightColor);\n    return () => {\n      // 清理自动阅读定时器\n      if (autoReadIntervalRef.current) {\n        clearInterval(autoReadIntervalRef.current);\n      }\n    };\n  }, [highlightColor]);\n\n  // 当阅读模式改变时应用效果\n  useEffect(() => {\n    if (readingMode === 'auto-guide') {\n      startAutoReadGuide();\n    } else if (autoReadIntervalRef.current) {\n      clearInterval(autoReadIntervalRef.current);\n    }\n  }, [readingMode, markdownContent]);\n\n  // 处理PDF文件\n  const handlePdfFile = async file => {\n    try {\n      console.log(\"开始处理PDF文件\");\n      const fileReader = new FileReader();\n      fileReader.onload = async function () {\n        console.log(\"文件已读取\");\n        const typedarray = new Uint8Array(this.result);\n\n        // 加载PDF文档\n        const loadingTask = pdfjsLib.getDocument(typedarray);\n        const pdf = await loadingTask.promise;\n        console.log(`PDF加载完成，共${pdf.numPages}页`);\n        setPdfInstance(pdf);\n        setTotalPages(pdf.numPages);\n        // 初始化显示第一页\n        extractAndProcessPage(pdf, 1);\n      };\n      fileReader.readAsArrayBuffer(file);\n    } catch (error) {\n      console.error('PDF处理错误:', error);\n    }\n  };\n\n  // 简单的文本处理函数，替代marked库\n  const simpleFormat = text => {\n    // 将文本分段，确保空白行被视为段落分隔符\n    const paragraphs = text.split('\\n\\n').map(p => p.trim()).filter(p => p.length > 0);\n\n    // 为每个段落添加适当的HTML标签\n    return paragraphs.map(p => `<p>${p}</p>`).join('');\n  };\n\n  // 改进PDF文本提取和段落保留逻辑\n  const extractAndProcessPage = async (pdf, pageNumber) => {\n    try {\n      const page = await pdf.getPage(pageNumber);\n\n      // 获取文本内容\n      const textContent = await page.getTextContent();\n\n      // 创建HTML内容，保持原始格式\n      let htmlContent = '<div class=\"pdf-content\">';\n\n      // 直接使用PDF.js提供的文本位置信息\n      textContent.items.forEach(item => {\n        // 创建一个span元素，精确定位到原PDF中的位置\n        const style = `\n          position: absolute;\n          left: ${item.transform[4]}px;\n          top: ${item.transform[5]}px;\n          font-size: ${item.height}px;\n          transform-origin: 0% 0%;\n          transform: scale(${item.transform[0]}, ${item.transform[3]});\n        `;\n\n        // 对文本应用词性标注\n        const taggedText = tagPartsOfSpeech(item.str);\n\n        // 创建带有原始位置的文本元素\n        htmlContent += `<span style=\"${style}\">${taggedText}</span>`;\n      });\n      htmlContent += '</div>';\n\n      // 渲染页面\n      const pageContainer = document.querySelector('.page-content');\n      if (pageContainer) {\n        pageContainer.innerHTML = htmlContent;\n\n        // 添加事件监听，用于鼠标跟随高亮模式\n        if (readingMode === 'follow-mouse') {\n          setupMouseFollowHighlight();\n        }\n      }\n    } catch (error) {\n      console.error('处理页面错误:', error);\n    }\n  };\n\n  // 处理TXT文件\n  const handleTxtFile = async file => {\n    try {\n      setLoading(true);\n      const text = await file.text();\n      // 将文本分页处理\n      const pageTexts = text.split('\\n\\n').map(paragraph => [{\n        text: paragraph,\n        x: 40,\n        y: 40,\n        fontSize: 16,\n        fontFamily: 'serif'\n      }]);\n      setPages(pageTexts);\n      setTotalPages(pageTexts.length);\n      setCurrentPage(1);\n      setLoading(false);\n    } catch (error) {\n      console.error('TXT处理错误:', error);\n      setLoading(false);\n      alert('TXT文件处理失败，请重试');\n    }\n  };\n\n  // 文件上传处理\n  const handleFileUpload = async event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    if (file.size > 100 * 1024 * 1024) {\n      alert('文件大小不能超过100MB');\n      return;\n    }\n    setFileName(file.name);\n    setPages([]); // 清空现有页面\n\n    if (file.type === 'application/pdf') {\n      await handlePdfFile(file);\n    } else if (file.type === 'text/plain' || file.name.endsWith('.txt')) {\n      await handleTxtFile(file);\n    }\n  };\n\n  // 翻页函数\n  const changePage = delta => {\n    const newPage = currentPage + delta;\n    if (newPage >= 1 && newPage <= totalPages && pdfInstance) {\n      console.log(`切换到第${newPage}页`);\n      setCurrentPage(newPage);\n      extractAndProcessPage(pdfInstance, newPage);\n    }\n  };\n\n  // 设置鼠标跟随高亮\n  const setupMouseFollowHighlight = () => {\n    const pageContent = document.querySelector('.page-content');\n    if (!pageContent) return;\n    pageContent.addEventListener('mousemove', e => {\n      if (readingMode !== 'follow-mouse') return;\n      const prevHighlighted = pageContent.querySelectorAll('.reading-line');\n      prevHighlighted.forEach(el => el.classList.remove('reading-line'));\n      const spans = pageContent.querySelectorAll('.pdf-content span');\n      spans.forEach(span => {\n        const rect = span.getBoundingClientRect();\n        if (e.clientY >= rect.top && e.clientY <= rect.bottom) {\n          span.classList.add('reading-line');\n        } else {\n          span.style.opacity = '0.4';\n        }\n      });\n    });\n    pageContent.addEventListener('mouseleave', () => {\n      const allSpans = pageContent.querySelectorAll('.pdf-content span');\n      allSpans.forEach(span => {\n        span.classList.remove('reading-line');\n        span.style.opacity = '1';\n      });\n    });\n  };\n\n  // 自动阅读引导\n  const startAutoReadGuide = () => {\n    if (autoReadIntervalRef.current) {\n      clearInterval(autoReadIntervalRef.current);\n    }\n\n    // 创建阅读指示点\n    if (!autoReadGuideRef.current) {\n      const guide = document.createElement('div');\n      guide.className = 'auto-read-guide';\n      document.querySelector('.page-content').appendChild(guide);\n      autoReadGuideRef.current = guide;\n    }\n\n    // 获取页面内所有段落\n    const paragraphs = document.querySelectorAll('.page-content p');\n    if (!paragraphs.length) return;\n    let currentParagraphIndex = 0;\n    let currentCharIndex = 0;\n    autoReadIntervalRef.current = setInterval(() => {\n      if (currentParagraphIndex >= paragraphs.length) {\n        clearInterval(autoReadIntervalRef.current);\n        return;\n      }\n      const paragraph = paragraphs[currentParagraphIndex];\n      const text = paragraph.textContent;\n      if (currentCharIndex >= text.length) {\n        currentParagraphIndex++;\n        currentCharIndex = 0;\n        return;\n      }\n\n      // 计算当前字符位置\n      const range = document.createRange();\n      const textNode = paragraph.firstChild;\n      if (textNode && textNode.nodeType === Node.TEXT_NODE) {\n        range.setStart(textNode, Math.min(currentCharIndex, textNode.length));\n        range.setStart(textNode, Math.min(currentCharIndex, textNode.length));\n        const rect = range.getBoundingClientRect();\n\n        // 更新指示点位置\n        if (autoReadGuideRef.current) {\n          const guide = autoReadGuideRef.current;\n          guide.style.left = `${rect.left}px`;\n          guide.style.top = `${rect.bottom + 5}px`;\n\n          // 闪烁效果\n          guide.style.opacity = 1;\n          setTimeout(() => {\n            guide.style.opacity = 0.5;\n          }, 100);\n        }\n      }\n      currentCharIndex += 1;\n    }, 200); // 每秒5个字符的速度\n  };\n\n  // 处理阅读模式切换\n  const handleReadingModeChange = mode => {\n    setReadingMode(mode);\n\n    // 清除之前的高亮\n    const pageContent = document.querySelector('.page-content');\n    if (pageContent) {\n      const prevHighlighted = pageContent.querySelectorAll('.reading-line');\n      prevHighlighted.forEach(el => el.classList.remove('reading-line'));\n    }\n\n    // 如果切换到鼠标跟随模式，设置事件监听\n    if (mode === 'follow-mouse') {\n      setupMouseFollowHighlight();\n    }\n\n    // 如果切换到自动阅读模式，启动阅读指导\n    if (mode === 'auto-guide') {\n      startAutoReadGuide();\n    } else if (autoReadIntervalRef.current) {\n      clearInterval(autoReadIntervalRef.current);\n      if (autoReadGuideRef.current) {\n        autoReadGuideRef.current.remove();\n        autoReadGuideRef.current = null;\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `App ${isDarkMode ? 'dark' : 'light'}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"ADHD \\u9605\\u8BFB\\u52A9\\u624B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"upload-btn\",\n            onClick: () => document.getElementById('fileInput').click(),\n            children: \"\\u9009\\u62E9\\u6587\\u4EF6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"fileInput\",\n            type: \"file\",\n            accept: \".pdf,.txt\",\n            style: {\n              display: 'none'\n            },\n            onChange: e => {\n              const file = e.target.files[0];\n              if (file) {\n                console.log(\"选择了文件:\", file.name);\n                setFile(file);\n                setCurrentPage(1);\n                handlePdfFile(file);\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"mode-btn\",\n            children: \"\\u5207\\u6362\\u660E\\u4EAE\\u6A21\\u5F0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"color-picker\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"\\u9AD8\\u4EAE\\u989C\\u8272:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"color\",\n              value: highlightColor,\n              onChange: e => setHighlightColor(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mode-selector\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              value: readingMode,\n              onChange: e => handleReadingModeChange(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"static\",\n                children: \"\\u9AD8\\u4EAE\\u9759\\u606F\\u6A21\\u5F0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"follow-mouse\",\n                children: \"\\u9F20\\u6807\\u8DDF\\u968F\\u9AD8\\u4EAE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"auto-guide\",\n                children: \"\\u81EA\\u52A8\\u9605\\u8BFB\\u5F15\\u5BFC\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pos-selector\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              value: highlightPOS,\n              onChange: e => {\n                const options = Array.from(e.target.selectedOptions, option => option.value);\n                setHighlightPOS(options);\n              },\n              multiple: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"noun\",\n                children: \"\\u540D\\u8BCD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"verb\",\n                children: \"\\u52A8\\u8BCD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"adj\",\n                children: \"\\u5F62\\u5BB9\\u8BCD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reader-container\",\n        ref: readerContainerRef,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"page-btn prev\",\n          onClick: () => changePage(-1),\n          disabled: currentPage <= 1,\n          children: \"\\u2190\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"page-content\",\n          children: !file && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload-hint\",\n            children: [\"\\u8BF7\\u4E0A\\u4F20\\u6587\\u4EF6\\u5F00\\u59CB\\u9605\\u8BFB\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 17\n            }, this), \"\\u652F\\u6301\\u7684\\u683C\\u5F0F: PDF, TXT (\\u6700\\u5927100MB)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"page-btn next\",\n          onClick: () => changePage(1),\n          disabled: currentPage >= totalPages,\n          children: \"\\u2192\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 9\n      }, this), file && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-info\",\n        children: [\"\\u7B2C \", currentPage, \" \\u9875 / \\u5171 \", totalPages, \" \\u9875\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 336,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"rT6geIQOfNVWQ9OoJXd9YiVu9sc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","pdfjsLib","pdfjsViewer","marked","pdfjs","jsxDEV","_jsxDEV","GlobalWorkerOptions","workerSrc","version","tagPartsOfSpeech","text","commonNouns","highlightedText","forEach","noun","regex","RegExp","replace","App","_s","isDarkMode","setIsDarkMode","pages","setPages","currentPage","setCurrentPage","totalPages","setTotalPages","fileName","setFileName","loading","setLoading","fileRef","file","setFile","pdfInstance","setPdfInstance","extractedTextPages","setExtractedTextPages","readingMode","setReadingMode","highlightColor","setHighlightColor","highlightPOS","setHighlightPOS","markdownContent","setMarkdownContent","readerContainerRef","autoReadGuideRef","autoReadIntervalRef","document","documentElement","style","setProperty","current","clearInterval","startAutoReadGuide","handlePdfFile","console","log","fileReader","FileReader","onload","typedarray","Uint8Array","result","loadingTask","getDocument","pdf","promise","numPages","extractAndProcessPage","readAsArrayBuffer","error","simpleFormat","paragraphs","split","map","p","trim","filter","length","join","pageNumber","page","getPage","textContent","getTextContent","htmlContent","items","item","transform","height","taggedText","str","pageContainer","querySelector","innerHTML","setupMouseFollowHighlight","handleTxtFile","pageTexts","paragraph","x","y","fontSize","fontFamily","alert","handleFileUpload","event","target","files","size","name","type","endsWith","changePage","delta","newPage","pageContent","addEventListener","e","prevHighlighted","querySelectorAll","el","classList","remove","spans","span","rect","getBoundingClientRect","clientY","top","bottom","add","opacity","allSpans","guide","createElement","className","appendChild","currentParagraphIndex","currentCharIndex","setInterval","range","createRange","textNode","firstChild","nodeType","Node","TEXT_NODE","setStart","Math","min","left","setTimeout","handleReadingModeChange","mode","children","_jsxFileName","lineNumber","columnNumber","onClick","getElementById","click","id","accept","display","onChange","value","options","Array","from","selectedOptions","option","multiple","ref","disabled","_c","$RefreshReg$"],"sources":["D:/adhd-read-helper/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport * as pdfjsLib from 'pdfjs-dist';\nimport * as pdfjsViewer from 'pdfjs-dist/web/pdf_viewer';\nimport { marked } from 'marked'; // 需要安装: npm install marked\nimport './styles/Reader.css';\nimport { pdfjs } from 'pdfjs-dist';\n\n// 设置 PDF.js worker\npdfjsLib.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjsLib.version}/pdf.worker.min.js`;\n\n// 模拟NLP词性标注功能（实际应用中建议使用专业NLP库如nlp.js或调用API）\nconst tagPartsOfSpeech = (text) => {\n  // 使用简单的规则来标记常见名词\n  const commonNouns = ['书', '文章', '段落', /* 其他常见名词 */];\n  let highlightedText = text;\n  \n  commonNouns.forEach(noun => {\n    const regex = new RegExp(noun, 'g');\n    highlightedText = highlightedText.replace(regex, `<span class=\"highlight\">${noun}</span>`);\n  });\n  \n  return highlightedText;\n};\n\nconst App = () => {\n  // 状态定义\n  const [isDarkMode, setIsDarkMode] = useState(true);\n  const [pages, setPages] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const [fileName, setFileName] = useState('');\n  const [loading, setLoading] = useState(false);\n  const fileRef = useRef(null); // 添加文件引用\n  const [file, setFile] = useState(null);\n  const [pdfInstance, setPdfInstance] = useState(null);\n  const [extractedTextPages, setExtractedTextPages] = useState([]);\n  const [readingMode, setReadingMode] = useState('static'); // static, follow-mouse, auto-guide\n  const [highlightColor, setHighlightColor] = useState('#ffeb3b'); // 默认高亮颜色\n  const [highlightPOS, setHighlightPOS] = useState(['noun']); // 默认高亮词性\n  const [markdownContent, setMarkdownContent] = useState('');\n  const readerContainerRef = useRef(null);\n  const autoReadGuideRef = useRef(null);\n  const autoReadIntervalRef = useRef(null);\n\n  // 初始化PDF.js\n  useEffect(() => {\n    pdfjsLib.GlobalWorkerOptions.workerSrc = `https://cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjsLib.version}/pdf.worker.min.js`;\n    \n    // 设置高亮颜色\n    document.documentElement.style.setProperty('--highlight-color', highlightColor);\n    \n    return () => {\n      // 清理自动阅读定时器\n      if (autoReadIntervalRef.current) {\n        clearInterval(autoReadIntervalRef.current);\n      }\n    };\n  }, [highlightColor]);\n  \n  // 当阅读模式改变时应用效果\n  useEffect(() => {\n    if (readingMode === 'auto-guide') {\n      startAutoReadGuide();\n    } else if (autoReadIntervalRef.current) {\n      clearInterval(autoReadIntervalRef.current);\n    }\n  }, [readingMode, markdownContent]);\n\n  // 处理PDF文件\n  const handlePdfFile = async (file) => {\n    try {\n      console.log(\"开始处理PDF文件\");\n      const fileReader = new FileReader();\n      \n      fileReader.onload = async function() {\n        console.log(\"文件已读取\");\n        const typedarray = new Uint8Array(this.result);\n        \n        // 加载PDF文档\n        const loadingTask = pdfjsLib.getDocument(typedarray);\n        const pdf = await loadingTask.promise;\n        console.log(`PDF加载完成，共${pdf.numPages}页`);\n        \n        setPdfInstance(pdf);\n        setTotalPages(pdf.numPages);\n        // 初始化显示第一页\n        extractAndProcessPage(pdf, 1);\n      };\n      \n      fileReader.readAsArrayBuffer(file);\n    } catch (error) {\n      console.error('PDF处理错误:', error);\n    }\n  };\n  \n  // 简单的文本处理函数，替代marked库\n  const simpleFormat = (text) => {\n    // 将文本分段，确保空白行被视为段落分隔符\n    const paragraphs = text.split('\\n\\n')\n      .map(p => p.trim())\n      .filter(p => p.length > 0);\n    \n    // 为每个段落添加适当的HTML标签\n    return paragraphs\n      .map(p => `<p>${p}</p>`)\n      .join('');\n  };\n\n  // 改进PDF文本提取和段落保留逻辑\n  const extractAndProcessPage = async (pdf, pageNumber) => {\n    try {\n      const page = await pdf.getPage(pageNumber);\n      \n      // 获取文本内容\n      const textContent = await page.getTextContent();\n      \n      // 创建HTML内容，保持原始格式\n      let htmlContent = '<div class=\"pdf-content\">';\n      \n      // 直接使用PDF.js提供的文本位置信息\n      textContent.items.forEach(item => {\n        // 创建一个span元素，精确定位到原PDF中的位置\n        const style = `\n          position: absolute;\n          left: ${item.transform[4]}px;\n          top: ${item.transform[5]}px;\n          font-size: ${item.height}px;\n          transform-origin: 0% 0%;\n          transform: scale(${item.transform[0]}, ${item.transform[3]});\n        `;\n        \n        // 对文本应用词性标注\n        const taggedText = tagPartsOfSpeech(item.str);\n        \n        // 创建带有原始位置的文本元素\n        htmlContent += `<span style=\"${style}\">${taggedText}</span>`;\n      });\n      \n      htmlContent += '</div>';\n      \n      // 渲染页面\n      const pageContainer = document.querySelector('.page-content');\n      if (pageContainer) {\n        pageContainer.innerHTML = htmlContent;\n        \n        // 添加事件监听，用于鼠标跟随高亮模式\n        if (readingMode === 'follow-mouse') {\n          setupMouseFollowHighlight();\n        }\n      }\n      \n    } catch (error) {\n      console.error('处理页面错误:', error);\n    }\n  };\n\n  // 处理TXT文件\n  const handleTxtFile = async (file) => {\n    try {\n      setLoading(true);\n      const text = await file.text();\n      // 将文本分页处理\n      const pageTexts = text.split('\\n\\n').map(paragraph => [{\n        text: paragraph,\n        x: 40,\n        y: 40,\n        fontSize: 16,\n        fontFamily: 'serif'\n      }]);\n      setPages(pageTexts);\n      setTotalPages(pageTexts.length);\n      setCurrentPage(1);\n      setLoading(false);\n    } catch (error) {\n      console.error('TXT处理错误:', error);\n      setLoading(false);\n      alert('TXT文件处理失败，请重试');\n    }\n  };\n\n  // 文件上传处理\n  const handleFileUpload = async (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    if (file.size > 100 * 1024 * 1024) {\n      alert('文件大小不能超过100MB');\n      return;\n    }\n\n    setFileName(file.name);\n    setPages([]); // 清空现有页面\n\n    if (file.type === 'application/pdf') {\n      await handlePdfFile(file);\n    } else if (file.type === 'text/plain' || file.name.endsWith('.txt')) {\n      await handleTxtFile(file);\n    }\n  };\n\n  // 翻页函数\n  const changePage = (delta) => {\n    const newPage = currentPage + delta;\n    if (newPage >= 1 && newPage <= totalPages && pdfInstance) {\n      console.log(`切换到第${newPage}页`);\n      setCurrentPage(newPage);\n      extractAndProcessPage(pdfInstance, newPage);\n    }\n  };\n\n  // 设置鼠标跟随高亮\n  const setupMouseFollowHighlight = () => {\n    const pageContent = document.querySelector('.page-content');\n    if (!pageContent) return;\n    \n    pageContent.addEventListener('mousemove', (e) => {\n      if (readingMode !== 'follow-mouse') return;\n      \n      const prevHighlighted = pageContent.querySelectorAll('.reading-line');\n      prevHighlighted.forEach(el => el.classList.remove('reading-line'));\n      \n      const spans = pageContent.querySelectorAll('.pdf-content span');\n      spans.forEach(span => {\n        const rect = span.getBoundingClientRect();\n        if (e.clientY >= rect.top && e.clientY <= rect.bottom) {\n          span.classList.add('reading-line');\n        } else {\n          span.style.opacity = '0.4';\n        }\n      });\n    });\n    \n    pageContent.addEventListener('mouseleave', () => {\n      const allSpans = pageContent.querySelectorAll('.pdf-content span');\n      allSpans.forEach(span => {\n        span.classList.remove('reading-line');\n        span.style.opacity = '1';\n      });\n    });\n  };\n  \n  // 自动阅读引导\n  const startAutoReadGuide = () => {\n    if (autoReadIntervalRef.current) {\n      clearInterval(autoReadIntervalRef.current);\n    }\n    \n    // 创建阅读指示点\n    if (!autoReadGuideRef.current) {\n      const guide = document.createElement('div');\n      guide.className = 'auto-read-guide';\n      document.querySelector('.page-content').appendChild(guide);\n      autoReadGuideRef.current = guide;\n    }\n    \n    // 获取页面内所有段落\n    const paragraphs = document.querySelectorAll('.page-content p');\n    if (!paragraphs.length) return;\n    \n    let currentParagraphIndex = 0;\n    let currentCharIndex = 0;\n    \n    autoReadIntervalRef.current = setInterval(() => {\n      if (currentParagraphIndex >= paragraphs.length) {\n        clearInterval(autoReadIntervalRef.current);\n        return;\n      }\n      \n      const paragraph = paragraphs[currentParagraphIndex];\n      const text = paragraph.textContent;\n      \n      if (currentCharIndex >= text.length) {\n        currentParagraphIndex++;\n        currentCharIndex = 0;\n        return;\n      }\n      \n      // 计算当前字符位置\n      const range = document.createRange();\n      const textNode = paragraph.firstChild;\n      \n      if (textNode && textNode.nodeType === Node.TEXT_NODE) {\n        range.setStart(textNode, Math.min(currentCharIndex, textNode.length));\n        range.setStart(textNode, Math.min(currentCharIndex, textNode.length));\n        \n        const rect = range.getBoundingClientRect();\n        \n        // 更新指示点位置\n        if (autoReadGuideRef.current) {\n          const guide = autoReadGuideRef.current;\n          guide.style.left = `${rect.left}px`;\n          guide.style.top = `${rect.bottom + 5}px`;\n          \n          // 闪烁效果\n          guide.style.opacity = 1;\n          setTimeout(() => {\n            guide.style.opacity = 0.5;\n          }, 100);\n        }\n      }\n      \n      currentCharIndex += 1;\n    }, 200); // 每秒5个字符的速度\n  };\n  \n  // 处理阅读模式切换\n  const handleReadingModeChange = (mode) => {\n    setReadingMode(mode);\n    \n    // 清除之前的高亮\n    const pageContent = document.querySelector('.page-content');\n    if (pageContent) {\n      const prevHighlighted = pageContent.querySelectorAll('.reading-line');\n      prevHighlighted.forEach(el => el.classList.remove('reading-line'));\n    }\n    \n    // 如果切换到鼠标跟随模式，设置事件监听\n    if (mode === 'follow-mouse') {\n      setupMouseFollowHighlight();\n    }\n    \n    // 如果切换到自动阅读模式，启动阅读指导\n    if (mode === 'auto-guide') {\n      startAutoReadGuide();\n    } else if (autoReadIntervalRef.current) {\n      clearInterval(autoReadIntervalRef.current);\n      \n      if (autoReadGuideRef.current) {\n        autoReadGuideRef.current.remove();\n        autoReadGuideRef.current = null;\n      }\n    }\n  };\n\n  return (\n    <div className={`App ${isDarkMode ? 'dark' : 'light'}`}>\n      <div className=\"app-container\">\n        <header className=\"header\">\n          <h1>ADHD 阅读助手</h1>\n          <div className=\"controls\">\n            <button \n              className=\"upload-btn\"\n              onClick={() => document.getElementById('fileInput').click()}\n            >\n              选择文件\n            </button>\n            <input\n              id=\"fileInput\"\n              type=\"file\"\n              accept=\".pdf,.txt\"\n              style={{ display: 'none' }}\n              onChange={(e) => {\n                const file = e.target.files[0];\n                if (file) {\n                  console.log(\"选择了文件:\", file.name);\n                  setFile(file);\n                  setCurrentPage(1);\n                  handlePdfFile(file);\n                }\n              }}\n            />\n            <button className=\"mode-btn\">\n              切换明亮模式\n            </button>\n            \n            {/* 高亮颜色选择 */}\n            <div className=\"color-picker\">\n              <label>高亮颜色:</label>\n              <input \n                type=\"color\" \n                value={highlightColor}\n                onChange={(e) => setHighlightColor(e.target.value)}\n              />\n            </div>\n            \n            {/* 阅读模式选择 */}\n            <div className=\"mode-selector\">\n              <select \n                value={readingMode}\n                onChange={(e) => handleReadingModeChange(e.target.value)}\n              >\n                <option value=\"static\">高亮静息模式</option>\n                <option value=\"follow-mouse\">鼠标跟随高亮</option>\n                <option value=\"auto-guide\">自动阅读引导</option>\n              </select>\n            </div>\n            \n            {/* 词性选择 */}\n            <div className=\"pos-selector\">\n              <select\n                value={highlightPOS}\n                onChange={(e) => {\n                  const options = Array.from(e.target.selectedOptions, option => option.value);\n                  setHighlightPOS(options);\n                }}\n                multiple\n              >\n                <option value=\"noun\">名词</option>\n                <option value=\"verb\">动词</option>\n                <option value=\"adj\">形容词</option>\n              </select>\n            </div>\n          </div>\n        </header>\n        \n        <div className=\"reader-container\" ref={readerContainerRef}>\n          <button \n            className=\"page-btn prev\"\n            onClick={() => changePage(-1)}\n            disabled={currentPage <= 1}\n          >\n            ←\n          </button>\n\n          <div className=\"page-content\">\n            {!file && (\n              <div className=\"upload-hint\">\n                请上传文件开始阅读\n                <br />\n                支持的格式: PDF, TXT (最大100MB)\n              </div>\n            )}\n          </div>\n\n          <button \n            className=\"page-btn next\"\n            onClick={() => changePage(1)}\n            disabled={currentPage >= totalPages}\n          >\n            →\n          </button>\n        </div>\n\n        {file && (\n          <div className=\"page-info\">\n            第 {currentPage} 页 / 共 {totalPages} 页\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}