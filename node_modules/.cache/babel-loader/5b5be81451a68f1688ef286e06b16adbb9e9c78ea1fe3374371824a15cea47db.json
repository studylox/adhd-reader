{"ast":null,"code":"var _jsxFileName = \"D:\\\\adhd-read-helper\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport * as pdfjsLib from 'pdfjs-dist';\nimport * as pdfjsViewer from 'pdfjs-dist/web/pdf_viewer';\nimport { marked } from 'marked'; // 需要安装: npm install marked\nimport './styles/Reader.css';\nimport { pdfjs } from 'pdfjs-dist';\n\n// 设置 PDF.js worker\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\npdfjsLib.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjsLib.version}/pdf.worker.min.js`;\n\n// 模拟NLP词性标注功能（实际应用中建议使用专业NLP库如nlp.js或调用API）\nconst tagPartsOfSpeech = text => {\n  // 使用简单的规则来标记常见名词\n  const commonNouns = ['书', '文章', '段落' /* 其他常见名词 */];\n  let highlightedText = text;\n  commonNouns.forEach(noun => {\n    const regex = new RegExp(noun, 'g');\n    highlightedText = highlightedText.replace(regex, `<span class=\"highlight\">${noun}</span>`);\n  });\n  return highlightedText;\n};\nconst App = () => {\n  _s();\n  // 状态定义\n  const [isDarkMode, setIsDarkMode] = useState(true);\n  const [pages, setPages] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const [fileName, setFileName] = useState('');\n  const [loading, setLoading] = useState(false);\n  const fileRef = useRef(null); // 添加文件引用\n  const [file, setFile] = useState(null);\n  const [pdfInstance, setPdfInstance] = useState(null);\n  const [extractedTextPages, setExtractedTextPages] = useState([]);\n  const [readingMode, setReadingMode] = useState('static'); // static, follow-mouse, auto-guide\n  const [highlightColor, setHighlightColor] = useState('#ffeb3b'); // 默认高亮颜色\n  const [highlightPOS, setHighlightPOS] = useState(['noun']); // 默认高亮词性\n  const [markdownContent, setMarkdownContent] = useState('');\n  const readerContainerRef = useRef(null);\n  const autoReadGuideRef = useRef(null);\n  const autoReadIntervalRef = useRef(null);\n  const [content, setContent] = useState('');\n  const [pdfDocument, setPdfDocument] = useState(null);\n\n  // 初始化PDF.js\n  useEffect(() => {\n    pdfjsLib.GlobalWorkerOptions.workerSrc = `https://cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjsLib.version}/pdf.worker.min.js`;\n\n    // 设置高亮颜色\n    document.documentElement.style.setProperty('--highlight-color', highlightColor);\n    return () => {\n      // 清理自动阅读定时器\n      if (autoReadIntervalRef.current) {\n        clearInterval(autoReadIntervalRef.current);\n      }\n    };\n  }, [highlightColor]);\n\n  // 当阅读模式改变时应用效果\n  useEffect(() => {\n    if (readingMode === 'auto-guide') {\n      startAutoReadGuide();\n    } else if (autoReadIntervalRef.current) {\n      clearInterval(autoReadIntervalRef.current);\n    }\n  }, [readingMode, markdownContent]);\n\n  // 修改PDF处理函数，确保内容正确提取和显示\n  const handlePdfFile = async file => {\n    try {\n      const fileURL = URL.createObjectURL(file);\n      const loadingTask = pdfjsLib.getDocument(fileURL);\n      const pdf = await loadingTask.promise;\n      setPdfDocument(pdf);\n      setTotalPages(pdf.numPages);\n      setCurrentPage(1);\n\n      // 加载第一页\n      await extractAndProcessPage(pdf, 1);\n\n      // 添加调试信息\n      console.log('PDF加载成功，页数:', pdf.numPages);\n    } catch (error) {\n      console.error('加载PDF时出错:', error);\n      alert('PDF加载失败，请尝试其他文件');\n    }\n  };\n\n  // 修改提取和处理PDF页面内容的函数\n  const extractAndProcessPage = async (pdf, pageNum) => {\n    try {\n      const page = await pdf.getPage(pageNum);\n      const textContent = await page.getTextContent();\n\n      // 添加调试信息\n      console.log('提取的文本项数量:', textContent.items.length);\n\n      // 对文本内容进行排序和处理\n      const textItems = textContent.items;\n\n      // 简化处理逻辑，确保内容能显示\n      let htmlContent = '<div class=\"pdf-content\">';\n      textItems.forEach(item => {\n        // 转义特殊字符\n        const text = item.str.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n\n        // 简单添加文本内容\n        htmlContent += `<span style=\"letter-spacing: 0.3em; display: inline-block;\">${text}</span> `;\n      });\n      htmlContent += '</div>';\n\n      // 设置内容并添加调试信息\n      setContent(htmlContent);\n      console.log('设置HTML内容:', htmlContent.substring(0, 100) + '...');\n    } catch (error) {\n      console.error('处理PDF页面时出错:', error);\n      setContent('<div>无法处理PDF内容</div>');\n    }\n  };\n\n  // 处理TXT文件\n  const handleTxtFile = async file => {\n    try {\n      setLoading(true);\n      const text = await file.text();\n      // 将文本分页处理\n      const pageTexts = text.split('\\n\\n').map(paragraph => [{\n        text: paragraph,\n        x: 40,\n        y: 40,\n        fontSize: 16,\n        fontFamily: 'serif'\n      }]);\n      setPages(pageTexts);\n      setTotalPages(pageTexts.length);\n      setCurrentPage(1);\n      setLoading(false);\n    } catch (error) {\n      console.error('TXT处理错误:', error);\n      setLoading(false);\n      alert('TXT文件处理失败，请重试');\n    }\n  };\n\n  // 文件上传处理\n  const handleFileUpload = async e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    if (file.type === 'application/pdf') {\n      await handlePdfFile(file);\n    } else if (file.type === 'text/plain') {\n      handleTxtFile(file);\n    } else {\n      alert('请上传PDF或TXT文件');\n    }\n  };\n\n  // 翻页函数\n  const changePage = async delta => {\n    const newPage = currentPage + delta;\n    if (newPage >= 1 && newPage <= totalPages && pdfDocument) {\n      setCurrentPage(newPage);\n      await extractAndProcessPage(pdfDocument, newPage);\n    }\n  };\n\n  // 设置鼠标跟随高亮\n  const setupMouseFollowHighlight = () => {\n    const pageContent = document.querySelector('.pdf-content');\n    if (!pageContent) return;\n    pageContent.addEventListener('mousemove', e => {\n      if (readingMode !== 'follow-mouse') return;\n\n      // 清除之前的高亮\n      const prevHighlighted = pageContent.querySelectorAll('.reading-line');\n      prevHighlighted.forEach(el => el.classList.remove('reading-line'));\n\n      // 获取鼠标所在的行\n      const lines = pageContent.querySelectorAll('.text-line');\n      lines.forEach(line => {\n        const rect = line.getBoundingClientRect();\n        if (e.clientY >= rect.top && e.clientY <= rect.bottom) {\n          line.classList.add('reading-line');\n        }\n      });\n    });\n  };\n\n  // 自动阅读引导\n  const startAutoReadGuide = () => {\n    if (autoReadIntervalRef.current) {\n      clearInterval(autoReadIntervalRef.current);\n    }\n\n    // 创建阅读指示点\n    if (!autoReadGuideRef.current) {\n      const guide = document.createElement('div');\n      guide.className = 'auto-read-guide';\n      document.querySelector('.page-content').appendChild(guide);\n      autoReadGuideRef.current = guide;\n    }\n\n    // 获取页面内所有段落\n    const paragraphs = document.querySelectorAll('.page-content p');\n    if (!paragraphs.length) return;\n    let currentParagraphIndex = 0;\n    let currentCharIndex = 0;\n    autoReadIntervalRef.current = setInterval(() => {\n      if (currentParagraphIndex >= paragraphs.length) {\n        clearInterval(autoReadIntervalRef.current);\n        return;\n      }\n      const paragraph = paragraphs[currentParagraphIndex];\n      const text = paragraph.textContent;\n      if (currentCharIndex >= text.length) {\n        currentParagraphIndex++;\n        currentCharIndex = 0;\n        return;\n      }\n\n      // 计算当前字符位置\n      const range = document.createRange();\n      const textNode = paragraph.firstChild;\n      if (textNode && textNode.nodeType === Node.TEXT_NODE) {\n        range.setStart(textNode, Math.min(currentCharIndex, textNode.length));\n        range.setStart(textNode, Math.min(currentCharIndex, textNode.length));\n        const rect = range.getBoundingClientRect();\n\n        // 更新指示点位置\n        if (autoReadGuideRef.current) {\n          const guide = autoReadGuideRef.current;\n          guide.style.left = `${rect.left}px`;\n          guide.style.top = `${rect.bottom + 5}px`;\n\n          // 闪烁效果\n          guide.style.opacity = 1;\n          setTimeout(() => {\n            guide.style.opacity = 0.5;\n          }, 100);\n        }\n      }\n      currentCharIndex += 1;\n    }, 200); // 每秒5个字符的速度\n  };\n\n  // 处理阅读模式切换\n  const handleReadingModeChange = mode => {\n    setReadingMode(mode);\n    if (mode === 'follow-mouse') {\n      setTimeout(setupMouseFollowHighlight, 100);\n    }\n  };\n  useEffect(() => {\n    // 当阅读模式为follow-mouse时，设置鼠标跟随高亮\n    if (readingMode === 'follow-mouse' && content) {\n      setTimeout(setupMouseFollowHighlight, 100);\n    }\n  }, [readingMode, content]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `App ${isDarkMode ? 'dark' : 'light'}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"ADHD \\u9605\\u8BFB\\u52A9\\u624B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"upload-btn\",\n            onClick: () => document.getElementById('fileInput').click(),\n            children: \"\\u9009\\u62E9\\u6587\\u4EF6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"fileInput\",\n            type: \"file\",\n            accept: \".pdf,.txt\",\n            style: {\n              display: 'none'\n            },\n            onChange: handleFileUpload\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"mode-btn\",\n            children: \"\\u5207\\u6362\\u660E\\u4EAE\\u6A21\\u5F0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"color-picker\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"\\u9AD8\\u4EAE\\u989C\\u8272:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"color\",\n              value: highlightColor,\n              onChange: e => setHighlightColor(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mode-selector\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              value: readingMode,\n              onChange: e => handleReadingModeChange(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"static\",\n                children: \"\\u9AD8\\u4EAE\\u9759\\u606F\\u6A21\\u5F0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"follow-mouse\",\n                children: \"\\u9F20\\u6807\\u8DDF\\u968F\\u9AD8\\u4EAE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"auto-guide\",\n                children: \"\\u81EA\\u52A8\\u9605\\u8BFB\\u5F15\\u5BFC\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pos-selector\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              value: highlightPOS,\n              onChange: e => {\n                const options = Array.from(e.target.selectedOptions, option => option.value);\n                setHighlightPOS(options);\n              },\n              multiple: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"noun\",\n                children: \"\\u540D\\u8BCD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"verb\",\n                children: \"\\u52A8\\u8BCD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"adj\",\n                children: \"\\u5F62\\u5BB9\\u8BCD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"page-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"page-layout\",\n          children: [content ? /*#__PURE__*/_jsxDEV(\"div\", {\n            dangerouslySetInnerHTML: {\n              __html: content\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"\\u8BF7\\u4E0A\\u4F20PDF\\u6216TXT\\u6587\\u4EF6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 15\n          }, this), totalPages > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"nav-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"nav-button\",\n              onClick: () => changePage(-1),\n              disabled: currentPage <= 1,\n              children: \"\\u4E0A\\u4E00\\u9875\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"\\u7B2C \", currentPage, \" / \", totalPages, \" \\u9875\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"nav-button\",\n              onClick: () => changePage(1),\n              disabled: currentPage >= totalPages,\n              children: \"\\u4E0B\\u4E00\\u9875\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 279,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"wDJqmWOfuu9dWXKlRgXxX2L9ihE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","pdfjsLib","pdfjsViewer","marked","pdfjs","jsxDEV","_jsxDEV","GlobalWorkerOptions","workerSrc","version","tagPartsOfSpeech","text","commonNouns","highlightedText","forEach","noun","regex","RegExp","replace","App","_s","isDarkMode","setIsDarkMode","pages","setPages","currentPage","setCurrentPage","totalPages","setTotalPages","fileName","setFileName","loading","setLoading","fileRef","file","setFile","pdfInstance","setPdfInstance","extractedTextPages","setExtractedTextPages","readingMode","setReadingMode","highlightColor","setHighlightColor","highlightPOS","setHighlightPOS","markdownContent","setMarkdownContent","readerContainerRef","autoReadGuideRef","autoReadIntervalRef","content","setContent","pdfDocument","setPdfDocument","document","documentElement","style","setProperty","current","clearInterval","startAutoReadGuide","handlePdfFile","fileURL","URL","createObjectURL","loadingTask","getDocument","pdf","promise","numPages","extractAndProcessPage","console","log","error","alert","pageNum","page","getPage","textContent","getTextContent","items","length","textItems","htmlContent","item","str","substring","handleTxtFile","pageTexts","split","map","paragraph","x","y","fontSize","fontFamily","handleFileUpload","e","target","files","type","changePage","delta","newPage","setupMouseFollowHighlight","pageContent","querySelector","addEventListener","prevHighlighted","querySelectorAll","el","classList","remove","lines","line","rect","getBoundingClientRect","clientY","top","bottom","add","guide","createElement","className","appendChild","paragraphs","currentParagraphIndex","currentCharIndex","setInterval","range","createRange","textNode","firstChild","nodeType","Node","TEXT_NODE","setStart","Math","min","left","opacity","setTimeout","handleReadingModeChange","mode","children","_jsxFileName","lineNumber","columnNumber","onClick","getElementById","click","id","accept","display","onChange","value","options","Array","from","selectedOptions","option","multiple","dangerouslySetInnerHTML","__html","disabled","_c","$RefreshReg$"],"sources":["D:/adhd-read-helper/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport * as pdfjsLib from 'pdfjs-dist';\nimport * as pdfjsViewer from 'pdfjs-dist/web/pdf_viewer';\nimport { marked } from 'marked'; // 需要安装: npm install marked\nimport './styles/Reader.css';\nimport { pdfjs } from 'pdfjs-dist';\n\n// 设置 PDF.js worker\npdfjsLib.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjsLib.version}/pdf.worker.min.js`;\n\n// 模拟NLP词性标注功能（实际应用中建议使用专业NLP库如nlp.js或调用API）\nconst tagPartsOfSpeech = (text) => {\n  // 使用简单的规则来标记常见名词\n  const commonNouns = ['书', '文章', '段落', /* 其他常见名词 */];\n  let highlightedText = text;\n  \n  commonNouns.forEach(noun => {\n    const regex = new RegExp(noun, 'g');\n    highlightedText = highlightedText.replace(regex, `<span class=\"highlight\">${noun}</span>`);\n  });\n  \n  return highlightedText;\n};\n\nconst App = () => {\n  // 状态定义\n  const [isDarkMode, setIsDarkMode] = useState(true);\n  const [pages, setPages] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const [fileName, setFileName] = useState('');\n  const [loading, setLoading] = useState(false);\n  const fileRef = useRef(null); // 添加文件引用\n  const [file, setFile] = useState(null);\n  const [pdfInstance, setPdfInstance] = useState(null);\n  const [extractedTextPages, setExtractedTextPages] = useState([]);\n  const [readingMode, setReadingMode] = useState('static'); // static, follow-mouse, auto-guide\n  const [highlightColor, setHighlightColor] = useState('#ffeb3b'); // 默认高亮颜色\n  const [highlightPOS, setHighlightPOS] = useState(['noun']); // 默认高亮词性\n  const [markdownContent, setMarkdownContent] = useState('');\n  const readerContainerRef = useRef(null);\n  const autoReadGuideRef = useRef(null);\n  const autoReadIntervalRef = useRef(null);\n  const [content, setContent] = useState('');\n  const [pdfDocument, setPdfDocument] = useState(null);\n\n  // 初始化PDF.js\n  useEffect(() => {\n    pdfjsLib.GlobalWorkerOptions.workerSrc = `https://cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjsLib.version}/pdf.worker.min.js`;\n    \n    // 设置高亮颜色\n    document.documentElement.style.setProperty('--highlight-color', highlightColor);\n    \n    return () => {\n      // 清理自动阅读定时器\n      if (autoReadIntervalRef.current) {\n        clearInterval(autoReadIntervalRef.current);\n      }\n    };\n  }, [highlightColor]);\n  \n  // 当阅读模式改变时应用效果\n  useEffect(() => {\n    if (readingMode === 'auto-guide') {\n      startAutoReadGuide();\n    } else if (autoReadIntervalRef.current) {\n      clearInterval(autoReadIntervalRef.current);\n    }\n  }, [readingMode, markdownContent]);\n\n  // 修改PDF处理函数，确保内容正确提取和显示\n  const handlePdfFile = async (file) => {\n    try {\n      const fileURL = URL.createObjectURL(file);\n      const loadingTask = pdfjsLib.getDocument(fileURL);\n      const pdf = await loadingTask.promise;\n      \n      setPdfDocument(pdf);\n      setTotalPages(pdf.numPages);\n      setCurrentPage(1);\n      \n      // 加载第一页\n      await extractAndProcessPage(pdf, 1);\n      \n      // 添加调试信息\n      console.log('PDF加载成功，页数:', pdf.numPages);\n    } catch (error) {\n      console.error('加载PDF时出错:', error);\n      alert('PDF加载失败，请尝试其他文件');\n    }\n  };\n  \n  // 修改提取和处理PDF页面内容的函数\n  const extractAndProcessPage = async (pdf, pageNum) => {\n    try {\n      const page = await pdf.getPage(pageNum);\n      const textContent = await page.getTextContent();\n      \n      // 添加调试信息\n      console.log('提取的文本项数量:', textContent.items.length);\n      \n      // 对文本内容进行排序和处理\n      const textItems = textContent.items;\n      \n      // 简化处理逻辑，确保内容能显示\n      let htmlContent = '<div class=\"pdf-content\">';\n      \n      textItems.forEach((item) => {\n        // 转义特殊字符\n        const text = item.str.replace(/&/g, '&amp;')\n                           .replace(/</g, '&lt;')\n                           .replace(/>/g, '&gt;');\n        \n        // 简单添加文本内容\n        htmlContent += `<span style=\"letter-spacing: 0.3em; display: inline-block;\">${text}</span> `;\n      });\n      \n      htmlContent += '</div>';\n      \n      // 设置内容并添加调试信息\n      setContent(htmlContent);\n      console.log('设置HTML内容:', htmlContent.substring(0, 100) + '...');\n    } catch (error) {\n      console.error('处理PDF页面时出错:', error);\n      setContent('<div>无法处理PDF内容</div>');\n    }\n  };\n\n  // 处理TXT文件\n  const handleTxtFile = async (file) => {\n    try {\n      setLoading(true);\n      const text = await file.text();\n      // 将文本分页处理\n      const pageTexts = text.split('\\n\\n').map(paragraph => [{\n        text: paragraph,\n        x: 40,\n        y: 40,\n        fontSize: 16,\n        fontFamily: 'serif'\n      }]);\n      setPages(pageTexts);\n      setTotalPages(pageTexts.length);\n      setCurrentPage(1);\n      setLoading(false);\n    } catch (error) {\n      console.error('TXT处理错误:', error);\n      setLoading(false);\n      alert('TXT文件处理失败，请重试');\n    }\n  };\n\n  // 文件上传处理\n  const handleFileUpload = async (e) => {\n    const file = e.target.files[0];\n    if (!file) return;\n    \n    if (file.type === 'application/pdf') {\n      await handlePdfFile(file);\n    } else if (file.type === 'text/plain') {\n      handleTxtFile(file);\n    } else {\n      alert('请上传PDF或TXT文件');\n    }\n  };\n\n  // 翻页函数\n  const changePage = async (delta) => {\n    const newPage = currentPage + delta;\n    if (newPage >= 1 && newPage <= totalPages && pdfDocument) {\n      setCurrentPage(newPage);\n      await extractAndProcessPage(pdfDocument, newPage);\n    }\n  };\n\n  // 设置鼠标跟随高亮\n  const setupMouseFollowHighlight = () => {\n    const pageContent = document.querySelector('.pdf-content');\n    if (!pageContent) return;\n    \n    pageContent.addEventListener('mousemove', (e) => {\n      if (readingMode !== 'follow-mouse') return;\n      \n      // 清除之前的高亮\n      const prevHighlighted = pageContent.querySelectorAll('.reading-line');\n      prevHighlighted.forEach(el => el.classList.remove('reading-line'));\n      \n      // 获取鼠标所在的行\n      const lines = pageContent.querySelectorAll('.text-line');\n      lines.forEach(line => {\n        const rect = line.getBoundingClientRect();\n        if (e.clientY >= rect.top && e.clientY <= rect.bottom) {\n          line.classList.add('reading-line');\n        }\n      });\n    });\n  };\n  \n  // 自动阅读引导\n  const startAutoReadGuide = () => {\n    if (autoReadIntervalRef.current) {\n      clearInterval(autoReadIntervalRef.current);\n    }\n    \n    // 创建阅读指示点\n    if (!autoReadGuideRef.current) {\n      const guide = document.createElement('div');\n      guide.className = 'auto-read-guide';\n      document.querySelector('.page-content').appendChild(guide);\n      autoReadGuideRef.current = guide;\n    }\n    \n    // 获取页面内所有段落\n    const paragraphs = document.querySelectorAll('.page-content p');\n    if (!paragraphs.length) return;\n    \n    let currentParagraphIndex = 0;\n    let currentCharIndex = 0;\n    \n    autoReadIntervalRef.current = setInterval(() => {\n      if (currentParagraphIndex >= paragraphs.length) {\n        clearInterval(autoReadIntervalRef.current);\n        return;\n      }\n      \n      const paragraph = paragraphs[currentParagraphIndex];\n      const text = paragraph.textContent;\n      \n      if (currentCharIndex >= text.length) {\n        currentParagraphIndex++;\n        currentCharIndex = 0;\n        return;\n      }\n      \n      // 计算当前字符位置\n      const range = document.createRange();\n      const textNode = paragraph.firstChild;\n      \n      if (textNode && textNode.nodeType === Node.TEXT_NODE) {\n        range.setStart(textNode, Math.min(currentCharIndex, textNode.length));\n        range.setStart(textNode, Math.min(currentCharIndex, textNode.length));\n        \n        const rect = range.getBoundingClientRect();\n        \n        // 更新指示点位置\n        if (autoReadGuideRef.current) {\n          const guide = autoReadGuideRef.current;\n          guide.style.left = `${rect.left}px`;\n          guide.style.top = `${rect.bottom + 5}px`;\n          \n          // 闪烁效果\n          guide.style.opacity = 1;\n          setTimeout(() => {\n            guide.style.opacity = 0.5;\n          }, 100);\n        }\n      }\n      \n      currentCharIndex += 1;\n    }, 200); // 每秒5个字符的速度\n  };\n  \n  // 处理阅读模式切换\n  const handleReadingModeChange = (mode) => {\n    setReadingMode(mode);\n    if (mode === 'follow-mouse') {\n      setTimeout(setupMouseFollowHighlight, 100);\n    }\n  };\n\n  useEffect(() => {\n    // 当阅读模式为follow-mouse时，设置鼠标跟随高亮\n    if (readingMode === 'follow-mouse' && content) {\n      setTimeout(setupMouseFollowHighlight, 100);\n    }\n  }, [readingMode, content]);\n\n  return (\n    <div className={`App ${isDarkMode ? 'dark' : 'light'}`}>\n      <div className=\"app-container\">\n        <header className=\"header\">\n          <h1>ADHD 阅读助手</h1>\n          <div className=\"controls\">\n            <button \n              className=\"upload-btn\"\n              onClick={() => document.getElementById('fileInput').click()}\n            >\n              选择文件\n            </button>\n            <input\n              id=\"fileInput\"\n              type=\"file\"\n              accept=\".pdf,.txt\"\n              style={{ display: 'none' }}\n              onChange={handleFileUpload}\n            />\n            <button className=\"mode-btn\">\n              切换明亮模式\n            </button>\n            \n            {/* 高亮颜色选择 */}\n            <div className=\"color-picker\">\n              <label>高亮颜色:</label>\n              <input \n                type=\"color\" \n                value={highlightColor}\n                onChange={(e) => setHighlightColor(e.target.value)}\n              />\n            </div>\n            \n            {/* 阅读模式选择 */}\n            <div className=\"mode-selector\">\n              <select \n                value={readingMode}\n                onChange={(e) => handleReadingModeChange(e.target.value)}\n              >\n                <option value=\"static\">高亮静息模式</option>\n                <option value=\"follow-mouse\">鼠标跟随高亮</option>\n                <option value=\"auto-guide\">自动阅读引导</option>\n              </select>\n            </div>\n            \n            {/* 词性选择 */}\n            <div className=\"pos-selector\">\n              <select\n                value={highlightPOS}\n                onChange={(e) => {\n                  const options = Array.from(e.target.selectedOptions, option => option.value);\n                  setHighlightPOS(options);\n                }}\n                multiple\n              >\n                <option value=\"noun\">名词</option>\n                <option value=\"verb\">动词</option>\n                <option value=\"adj\">形容词</option>\n              </select>\n            </div>\n          </div>\n        </header>\n        \n        <main className=\"page-content\">\n          <div className=\"page-layout\">\n            {content ? (\n              <div dangerouslySetInnerHTML={{ __html: content }} />\n            ) : (\n              <div>请上传PDF或TXT文件</div>\n            )}\n            \n            {totalPages > 1 && (\n              <div className=\"nav-buttons\">\n                <button \n                  className=\"nav-button\" \n                  onClick={() => changePage(-1)} \n                  disabled={currentPage <= 1}\n                >\n                  上一页\n                </button>\n                <span>第 {currentPage} / {totalPages} 页</span>\n                <button \n                  className=\"nav-button\" \n                  onClick={() => changePage(1)} \n                  disabled={currentPage >= totalPages}\n                >\n                  下一页\n                </button>\n              </div>\n            )}\n          </div>\n        </main>\n      </div>\n    </div>\n  );\n};\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}