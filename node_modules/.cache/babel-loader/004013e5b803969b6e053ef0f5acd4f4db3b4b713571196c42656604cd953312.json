{"ast":null,"code":"var _jsxFileName = \"D:\\\\adhd-read-helper\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport * as pdfjsLib from 'pdfjs-dist';\nimport * as pdfjsViewer from 'pdfjs-dist/web/pdf_viewer';\nimport { marked } from 'marked'; // 需要安装: npm install marked\nimport './styles/Reader.css';\nimport { pdfjs } from 'pdfjs-dist';\n\n// 设置 PDF.js worker\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\npdfjsLib.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjsLib.version}/pdf.worker.min.js`;\n\n// 全局变量定义\nwindow.currentPage = 1;\nwindow.totalPages = 0;\nwindow.changePage = null;\n\n// 添加全局事件跟踪对象\nwindow.eventTracker = window.eventTracker || {\n  mouseFollowHandlers: []\n};\n\n// 自动阅读器全局对象\nwindow.autoReader = {\n  charPositions: [],\n  intervalId: null,\n  currentIndex: 0,\n  speed: 300,\n  pageContainer: null,\n  isScrolling: false,\n  currentPage: 1,\n  isPageChanging: false,\n  cleanup: null\n};\n\n// 添加新的节奏阅读模式代码\n// 全局变量，确保在页面切换后仍然保持状态\nwindow.rhythmReaderGlobal = window.rhythmReaderGlobal || {\n  active: false,\n  speed: 300\n};\n\n// 节奏阅读模式 - 增强控制版\n(function () {\n  console.log(\"节奏阅读模式 - 增强控制版初始化\");\n\n  // 配置参数\n  const defaultSpeed = 300; // 默认速度 (ms/字符)\n  const minSpeed = 50; // 最小速度\n  const maxSpeed = 1500; // 最大速度\n  const speedStep = 50; // 速度调整步长\n\n  // 状态变量\n  let isActive = false;\n  let intervalId = null;\n  let charElements = [];\n  let currentIndex = 0;\n  let readIndices = new Set();\n  let currentSpeed = defaultSpeed;\n  let pagesRead = 0;\n\n  // 查找下一页按钮\n  const findNextPageButton = function () {\n    const selectors = ['.next-page', '.next', '#next', '[aria-label=\"下一页\"]', '[aria-label=\"Next\"]', 'button:contains(\"下一页\")', 'button:contains(\"Next\")'];\n    for (const selector of selectors) {\n      try {\n        const buttons = document.querySelectorAll(selector);\n        for (const btn of buttons) {\n          if (btn.offsetParent !== null) {\n            return btn;\n          }\n        }\n      } catch (e) {}\n    }\n    const allButtons = document.querySelectorAll('button, a, div[role=\"button\"]');\n    for (const btn of allButtons) {\n      const text = (btn.textContent || '').trim().toLowerCase();\n      if (text === '下一页' || text === 'next' || text === '>' || text === '→') {\n        if (btn.offsetParent !== null) {\n          return btn;\n        }\n      }\n    }\n    return null;\n  };\n\n  // 自动翻页\n  const autoTurnPage = function () {\n    console.log(\"尝试自动翻页...\");\n    const nextButton = findNextPageButton();\n    if (!nextButton) {\n      console.log(\"未找到下一页按钮\");\n      showMessage(\"已读完当前页，但未找到下一页按钮\");\n      return;\n    }\n    if (intervalId) {\n      clearInterval(intervalId);\n      intervalId = null;\n    }\n    pagesRead++;\n    console.log(`已读完第 ${pagesRead} 页，点击下一页按钮`);\n    nextButton.click();\n    const observer = new MutationObserver(mutations => {\n      const contentAdded = mutations.some(mutation => mutation.type === 'childList' && mutation.addedNodes.length > 0);\n      if (contentAdded) {\n        console.log(\"检测到新内容已加载\");\n        observer.disconnect();\n        setTimeout(() => {\n          console.log(\"在新页面上重新启动节奏阅读模式\");\n          startReading();\n        }, 800);\n      }\n    });\n    observer.observe(document.body, {\n      childList: true,\n      subtree: true\n    });\n  };\n\n  // 清理\n  const cleanup = function () {\n    console.log(\"执行清理...\");\n    if (intervalId) {\n      clearInterval(intervalId);\n      intervalId = null;\n    }\n    try {\n      document.querySelectorAll('.rhythm-char').forEach(span => {\n        if (span.parentNode) {\n          span.parentNode.replaceChild(document.createTextNode(span.textContent), span);\n        }\n      });\n    } catch (e) {\n      console.error(\"清理文本失败:\", e);\n    }\n    charElements = [];\n    currentIndex = 0;\n    readIndices = new Set();\n    isActive = false;\n    pagesRead = 0;\n    const panel = document.getElementById('rhythm-control-panel');\n    if (panel) panel.remove();\n  };\n\n  // 简单通知\n  const showMessage = function (message) {\n    console.log(message);\n    alert(message);\n  };\n\n  // 添加控制面板\n  const addControlPanel = function () {\n    const existingPanel = document.getElementById('rhythm-control-panel');\n    if (existingPanel) existingPanel.remove();\n    const panel = document.createElement('div');\n    panel.id = 'rhythm-control-panel';\n    panel.style.cssText = `\n      position: fixed;\n      bottom: 20px;\n      right: 20px;\n      width: 200px;\n      background-color: rgba(0, 0, 0, 0.9);\n      color: white;\n      padding: 15px;\n      border-radius: 8px;\n      z-index: 999999;\n      box-shadow: 0 4px 12px rgba(0,0,0,0.4);\n      font-family: Arial, sans-serif;\n    `;\n\n    // 添加暂停/继续按钮\n    const controlButton = document.createElement('button');\n    controlButton.id = 'rhythm-pause-button';\n    controlButton.textContent = isActive ? '暂停' : '启动';\n    controlButton.style.cssText = `\n      width: 100%;\n      padding: 8px 0;\n      background-color: ${isActive ? '#f44336' : '#4CAF50'};\n      color: white;\n      border: none;\n      border-radius: 4px;\n      font-size: 15px;\n      margin-bottom: 15px;\n      cursor: pointer;\n      font-weight: bold;\n      transition: background-color 0.2s;\n    `;\n    controlButton.onclick = function () {\n      if (!isActive) {\n        // 如果未激活，启动\n        startReading();\n        this.textContent = '暂停';\n        this.style.backgroundColor = '#f44336';\n      } else if (intervalId) {\n        // 如果正在运行，暂停\n        clearInterval(intervalId);\n        intervalId = null;\n        this.textContent = '继续';\n        this.style.backgroundColor = '#2196F3';\n      } else {\n        // 如果已暂停，继续\n        intervalId = setInterval(nextChar, currentSpeed);\n        this.textContent = '暂停';\n        this.style.backgroundColor = '#f44336';\n      }\n    };\n    panel.appendChild(controlButton);\n\n    // 添加速度控制\n    const speedControlContainer = document.createElement('div');\n    speedControlContainer.style.marginBottom = '12px';\n\n    // 速度标签和值显示\n    const speedLabelContainer = document.createElement('div');\n    speedLabelContainer.style.display = 'flex';\n    speedLabelContainer.style.justifyContent = 'space-between';\n    speedLabelContainer.style.marginBottom = '8px';\n    const speedLabel = document.createElement('span');\n    speedLabel.textContent = '阅读速度:';\n    const speedValue = document.createElement('span');\n    speedValue.id = 'rhythm-speed-value';\n    speedValue.textContent = currentSpeed + 'ms';\n    speedValue.style.fontWeight = 'bold';\n    speedLabelContainer.appendChild(speedLabel);\n    speedLabelContainer.appendChild(speedValue);\n    speedControlContainer.appendChild(speedLabelContainer);\n\n    // 速度滑块\n    const speedSlider = document.createElement('input');\n    speedSlider.id = 'rhythm-speed-slider';\n    speedSlider.type = 'range';\n    speedSlider.min = minSpeed;\n    speedSlider.max = maxSpeed;\n    speedSlider.step = '50';\n    speedSlider.value = currentSpeed;\n    speedSlider.style.width = '100%';\n    speedSlider.style.height = '20px'; // 增加高度使其更容易点击\n\n    // 添加变化事件\n    speedSlider.oninput = function () {\n      const newSpeed = parseInt(this.value);\n      currentSpeed = newSpeed;\n\n      // 更新显示值\n      const speedValueEl = document.getElementById('rhythm-speed-value');\n      if (speedValueEl) speedValueEl.textContent = newSpeed + 'ms';\n\n      // 如果正在运行，更新计时器\n      if (intervalId) {\n        clearInterval(intervalId);\n        intervalId = setInterval(nextChar, currentSpeed);\n      }\n    };\n    speedControlContainer.appendChild(speedSlider);\n    panel.appendChild(speedControlContainer);\n    document.body.appendChild(panel);\n    return panel;\n  };\n\n  // 添加速度滑块UI\n  const addSpeedSlider = function () {\n    // 检查是否已存在\n    const existingSlider = document.getElementById('rhythm-speed-container');\n    if (existingSlider) existingSlider.remove();\n\n    // 创建容器\n    const container = document.createElement('div');\n    container.id = 'rhythm-speed-container';\n    container.style.cssText = `\n      position: fixed;\n      top: 50px;\n      right: 10px;\n      background: red;\n      padding: 10px 15px;\n      border-radius: 5px;\n      z-index: 999999;\n      display: flex;\n      flex-direction: column;\n      width: 200px;\n      box-shadow: 0 2px 8px rgba(0,0,0,0.3);\n      border: 3px solid black;\n    `;\n\n    // 添加标签\n    const label = document.createElement('div');\n    label.textContent = \"阅读速度: \" + currentSpeed + \"ms\";\n    label.id = 'rhythm-speed-label';\n    label.style.cssText = `\n      color: black;\n      font-size: 14px;\n      font-weight: bold;\n      margin-bottom: 8px;\n    `;\n    container.appendChild(label);\n\n    // 添加滑块\n    const slider = document.createElement('input');\n    slider.type = 'range';\n    slider.min = '50';\n    slider.max = '800';\n    slider.step = '50';\n    slider.value = currentSpeed;\n    slider.style.width = '100%';\n    slider.style.height = '20px';\n\n    // 滑块事件\n    slider.oninput = function () {\n      currentSpeed = parseInt(this.value);\n      label.textContent = \"阅读速度: \" + currentSpeed + \"ms\";\n\n      // 如果正在阅读，更新间隔\n      if (intervalId) {\n        clearInterval(intervalId);\n        intervalId = setInterval(nextChar, currentSpeed);\n      }\n    };\n    container.appendChild(slider);\n    document.body.appendChild(container);\n    console.log(\"速度滑块已添加！位置：测试按钮下方\");\n    return container;\n  };\n\n  // 启动阅读\n  const startReading = function () {\n    console.log(\"启动节奏阅读...\");\n\n    // 清理之前的实例\n    cleanup();\n    const container = document.querySelector('.pdf-content') || document.querySelector('[class*=\"pdf\"]') || document.querySelector('article') || document.querySelector('main') || document.body;\n    const textNodes = [];\n    const findText = function (element) {\n      for (let i = 0; i < element.childNodes.length; i++) {\n        const node = element.childNodes[i];\n        if (node.nodeType === 3 && node.nodeValue.trim() !== '') {\n          textNodes.push(node);\n        } else if (node.nodeType === 1 && !['SCRIPT', 'STYLE', 'BUTTON', 'INPUT', 'SELECT', 'NOSCRIPT'].includes(node.tagName)) {\n          findText(node);\n        }\n      }\n    };\n    findText(container);\n    if (textNodes.length === 0) {\n      showMessage(\"错误: 未找到文本内容\");\n      return;\n    }\n    try {\n      textNodes.forEach(node => {\n        if (!node.nodeValue || !node.parentNode) return;\n        const text = node.nodeValue;\n        const fragment = document.createDocumentFragment();\n        for (let i = 0; i < text.length; i++) {\n          const span = document.createElement('span');\n          span.textContent = text[i];\n          span.className = 'rhythm-char';\n          span.dataset.index = charElements.length;\n          fragment.appendChild(span);\n          charElements.push(span);\n        }\n        node.parentNode.replaceChild(fragment, node);\n      });\n    } catch (e) {\n      console.error(\"处理文本失败:\", e);\n      showMessage(\"生成节奏阅读效果失败\");\n      return;\n    }\n    if (charElements.length === 0) {\n      showMessage(\"未找到可读内容\");\n      return;\n    }\n    isActive = true;\n    currentIndex = 0;\n    updateDisplay();\n    intervalId = setInterval(nextChar, currentSpeed);\n    addControlPanel();\n    addSpeedSlider(); // 确保滑块被添加\n  };\n\n  // 更新显示\n  const updateDisplay = function () {\n    charElements.forEach((span, index) => {\n      if (index === currentIndex) {\n        span.style.color = 'green';\n        span.style.fontWeight = 'bold';\n      } else if (readIndices.has(index)) {\n        span.style.color = 'white';\n      } else {\n        span.style.color = 'rgba(200,200,200,0.3)';\n      }\n    });\n  };\n\n  // 检查是否在视口中\n  const isInViewport = function (element) {\n    const rect = element.getBoundingClientRect();\n    return rect.top >= 0 && rect.left >= 0 && rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && rect.right <= (window.innerWidth || document.documentElement.clientWidth);\n  };\n\n  // 下一个字符\n  const nextChar = function () {\n    if (!isActive || !charElements.length) return;\n    readIndices.add(currentIndex);\n    currentIndex++;\n    if (currentIndex >= charElements.length) {\n      if (intervalId) {\n        clearInterval(intervalId);\n        intervalId = null;\n      }\n      console.log(\"当前页已读完，尝试翻页\");\n      autoTurnPage();\n      return;\n    }\n    updateDisplay();\n\n    // 确保当前字符可见\n    const currentChar = charElements[currentIndex];\n    if (currentChar && !isInViewport(currentChar)) {\n      currentChar.scrollIntoView({\n        behavior: 'smooth',\n        block: 'center'\n      });\n    }\n  };\n\n  // 处理模式切换\n  const handleModeChange = function (mode) {\n    console.log(\"模式更改为:\", mode);\n    if (mode !== 'rhythm' && mode !== '节奏阅读' && isActive) {\n      cleanup();\n    }\n  };\n\n  // 重写模式切换函数\n  const originalFunction = window.readingModeChanged;\n  window.readingModeChanged = function (mode) {\n    if (typeof originalFunction === 'function') {\n      try {\n        originalFunction(mode);\n      } catch (e) {}\n    }\n    handleModeChange(mode);\n  };\n\n  // 添加测试按钮\n  const addTestButton = function () {\n    const button = document.createElement('button');\n    button.id = 'rhythm-test-button';\n    button.textContent = '测试节奏阅读';\n    button.style.cssText = `\n      position: fixed;\n      top: 10px;\n      right: 10px;\n      z-index: 999999;\n      background: red;\n      color: white;\n      padding: 8px 12px;\n      border: none;\n      border-radius: 4px;\n      font-size: 14px;\n      cursor: pointer;\n      border: 3px solid yellow;\n      font-weight: bold;\n    `;\n    button.onclick = startReading;\n    document.body.appendChild(button);\n  };\n\n  // 初始化\n  const initialize = function () {\n    console.log(\"初始化节奏阅读组件...\");\n\n    // 添加测试按钮\n    const button = document.createElement('button');\n    button.id = 'rhythm-test-button';\n    button.textContent = '测试节奏阅读';\n    button.style.cssText = `\n      position: fixed;\n      top: 10px;\n      right: 10px;\n      z-index: 999999;\n      background: red;\n      color: white;\n      padding: 8px 12px;\n      border: none;\n      border-radius: 4px;\n      font-size: 14px;\n      cursor: pointer;\n      border: 3px solid yellow;\n      font-weight: bold;\n    `;\n    button.onclick = startReading;\n    document.body.appendChild(button);\n\n    // 直接创建速度控制面板\n    const speedPanel = document.createElement('div');\n    speedPanel.id = 'rhythm-speed-panel';\n    speedPanel.style.cssText = `\n      position: fixed;\n      top: 50px;\n      right: 10px;\n      width: 200px;\n      background: red;\n      color: white;\n      padding: 10px;\n      border-radius: 4px;\n      z-index: 999999;\n      border: 3px solid yellow;\n    `;\n    speedPanel.innerHTML = `\n      <div style=\"margin-bottom:10px;font-weight:bold;font-size:16px;\">阅读速度控制</div>\n      <div style=\"display:flex;align-items:center;margin-bottom:10px;\">\n        <span style=\"flex:1;\">速度: ${currentSpeed}ms</span>\n        <span id=\"rhythm-speed-value\" style=\"font-weight:bold;\"></span>\n      </div>\n      <input \n        id=\"rhythm-speed-slider\" \n        type=\"range\" \n        min=\"50\" \n        max=\"800\" \n        step=\"50\" \n        value=\"${currentSpeed}\" \n        style=\"width:100%;height:20px;\" \n      />\n    `;\n    document.body.appendChild(speedPanel);\n\n    // 添加滑块事件监听\n    const slider = document.getElementById('rhythm-speed-slider');\n    const speedValue = document.getElementById('rhythm-speed-value');\n    if (slider && speedValue) {\n      speedValue.textContent = currentSpeed + 'ms';\n      slider.addEventListener('input', function () {\n        currentSpeed = parseInt(this.value);\n        speedValue.textContent = currentSpeed + 'ms';\n        if (intervalId) {\n          clearInterval(intervalId);\n          intervalId = setInterval(nextChar, currentSpeed);\n        }\n      });\n    }\n    console.log(\"测试按钮和速度控制面板已添加\");\n  };\n\n  // 等待DOM加载完成\n  document.addEventListener('DOMContentLoaded', initialize);\n\n  // 暴露全局API\n  window.manualStartRhythmReading = startReading;\n  console.log(\"节奏阅读模式初始化完成 - 增强控制版\");\n})();\nconst App = () => {\n  _s();\n  // 状态定义\n  const [pages, setPages] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const [fileName, setFileName] = useState('');\n  const [loading, setLoading] = useState(false);\n  const fileRef = useRef(null);\n  const [file, setFile] = useState(null);\n  const [pdfInstance, setPdfInstance] = useState(null);\n  const [extractedTextPages, setExtractedTextPages] = useState([]);\n  const [readingMode, setReadingMode] = useState('normal');\n  const [posMode, setPosMode] = useState('none');\n  const [markdownContent, setMarkdownContent] = useState('');\n  const readerContainerRef = useRef(null);\n  const [content, setContent] = useState('');\n  const [pdfDocument, setPdfDocument] = useState(null);\n  const [isTableOfContents, setIsTableOfContents] = useState(false);\n\n  // 初始化PDF.js\n  useEffect(() => {\n    pdfjsLib.GlobalWorkerOptions.workerSrc = `https://cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjsLib.version}/pdf.worker.min.js`;\n  }, []);\n\n  // 处理PDF文件\n  const handlePdfFile = async file => {\n    try {\n      const fileURL = URL.createObjectURL(file);\n      const loadingTask = pdfjsLib.getDocument(fileURL);\n      const pdf = await loadingTask.promise;\n      setPdfDocument(pdf);\n      setTotalPages(pdf.numPages);\n      setCurrentPage(1);\n\n      // 显示简单的PDF内容\n      setContent('<div class=\"pdf-content\">PDF已加载，请使用下方翻页按钮浏览</div>');\n      console.log('PDF加载成功，页数:', pdf.numPages);\n    } catch (error) {\n      console.error('加载PDF时出错:', error);\n      setContent('<div class=\"error-message\">PDF加载失败</div>');\n    }\n  };\n\n  // 处理TXT文件\n  const handleTxtFile = async file => {\n    try {\n      const text = await file.text();\n      setContent(`<div class=\"pdf-content\"><pre>${text}</pre></div>`);\n    } catch (error) {\n      console.error('处理TXT文件出错:', error);\n      setContent('<div class=\"error-message\">TXT文件处理失败</div>');\n    }\n  };\n\n  // 处理Markdown文件\n  const handleMarkdownFile = async file => {\n    try {\n      const text = await file.text();\n      // 使用marked库转换markdown为HTML\n      let html = '';\n      try {\n        if (window.marked) {\n          html = window.marked.parse(text);\n        } else {\n          html = `<div>${text.split(\"\\n\\n\").map(p => `<p>${p}</p>`).join(\"\")}</div>`;\n        }\n      } catch (parseError) {\n        console.error('Markdown解析错误:', parseError);\n        html = `<div>${text}</div>`;\n      }\n      setContent(`<div class=\"pdf-content\">${html}</div>`);\n    } catch (error) {\n      console.error('处理Markdown文件出错:', error);\n      setContent('<div class=\"error-message\">Markdown文件处理失败</div>');\n    }\n  };\n\n  // 翻页函数\n  const changePage = delta => {\n    const newPage = currentPage + delta;\n    if (newPage < 1 || newPage > totalPages) return;\n    setCurrentPage(newPage);\n    // 这里可以添加加载新页面的逻辑\n    setContent(`<div class=\"pdf-content\">正在显示第 ${newPage} 页</div>`);\n\n    // 全局变量也更新\n    window.currentPage = newPage;\n  };\n\n  // 在组件挂载时设置全局changePage函数\n  useEffect(() => {\n    window.changePage = changePage;\n    return () => {\n      window.changePage = null;\n    };\n  }, [currentPage, totalPages]);\n\n  // 文件上传处理\n  const handleFileUpload = async e => {\n    const uploadedFile = e.target.files[0];\n    if (!uploadedFile) return;\n    setLoading(true);\n    setFileName(uploadedFile.name);\n    try {\n      if (uploadedFile.type === 'application/pdf') {\n        await handlePdfFile(uploadedFile);\n      } else if (uploadedFile.type === 'text/plain' || uploadedFile.name.endsWith('.txt')) {\n        await handleTxtFile(uploadedFile);\n      } else if (uploadedFile.type === 'text/markdown' || uploadedFile.name.endsWith('.md')) {\n        await handleMarkdownFile(uploadedFile);\n      } else {\n        setContent('<div class=\"error-message\">不支持的文件格式</div>');\n      }\n    } catch (error) {\n      console.error('处理文件时出错:', error);\n      setContent('<div class=\"error-message\">处理文件时出错</div>');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 修改阅读模式切换函数\n  const handleReadingModeChange = e => {\n    const newMode = e.target.value;\n    setReadingMode(newMode);\n\n    // 通知节奏阅读模式\n    if (typeof window.readingModeChanged === 'function') {\n      window.readingModeChanged(newMode);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"ADHD\\u9605\\u8BFB\\u52A9\\u624B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 760,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 759,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reading-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u9605\\u8BFB\\u6A21\\u5F0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 764,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"reading-mode-select\",\n          value: readingMode,\n          onChange: handleReadingModeChange,\n          className: \"mode-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"normal\",\n            children: \"\\u666E\\u901A\\u6A21\\u5F0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 771,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"static\",\n            children: \"\\u9759\\u6001\\u9AD8\\u4EAE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 772,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"follow-mouse\",\n            children: \"\\u9F20\\u6807\\u8DDF\\u968F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 773,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"rhythm\",\n            children: \"\\u8282\\u594F\\u9605\\u8BFB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 774,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"flash-reading\",\n            children: \"\\u95EA\\u8BFB\\u6A21\\u5F0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 775,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 765,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 763,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".pdf,.txt,.md\",\n          hidden: true,\n          id: \"file-upload\",\n          onChange: handleFileUpload,\n          ref: fileRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 780,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"upload-btn\",\n          onClick: () => fileRef.current.click(),\n          children: \"\\u4E0A\\u4F20\\u6587\\u4EF6 (.pdf/.txt/.md)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 788,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 779,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 758,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toolbar\",\n        children: fileName && /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"filename\",\n          children: fileName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 799,\n          columnNumber: 24\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 798,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-content\",\n        ref: readerContainerRef,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: content\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 803,\n          columnNumber: 11\n        }, this), totalPages > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bottom-pagination\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => changePage(-1),\n            disabled: currentPage <= 1,\n            className: \"page-btn\",\n            children: \"\\u4E0A\\u4E00\\u9875\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 807,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"page-info\",\n            children: [\"\\u7B2C \", currentPage, \" / \", totalPages, \" \\u9875\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 814,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => changePage(1),\n            disabled: currentPage >= totalPages,\n            className: \"page-btn\",\n            children: \"\\u4E0B\\u4E00\\u9875\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 817,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 806,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 802,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 797,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 757,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"30vVSvpSFJAvy6FB2jPG6oXUPfs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","pdfjsLib","pdfjsViewer","marked","pdfjs","jsxDEV","_jsxDEV","GlobalWorkerOptions","workerSrc","version","window","currentPage","totalPages","changePage","eventTracker","mouseFollowHandlers","autoReader","charPositions","intervalId","currentIndex","speed","pageContainer","isScrolling","isPageChanging","cleanup","rhythmReaderGlobal","active","console","log","defaultSpeed","minSpeed","maxSpeed","speedStep","isActive","charElements","readIndices","Set","currentSpeed","pagesRead","findNextPageButton","selectors","selector","buttons","document","querySelectorAll","btn","offsetParent","e","allButtons","text","textContent","trim","toLowerCase","autoTurnPage","nextButton","showMessage","clearInterval","click","observer","MutationObserver","mutations","contentAdded","some","mutation","type","addedNodes","length","disconnect","setTimeout","startReading","observe","body","childList","subtree","forEach","span","parentNode","replaceChild","createTextNode","error","panel","getElementById","remove","message","alert","addControlPanel","existingPanel","createElement","id","style","cssText","controlButton","onclick","backgroundColor","setInterval","nextChar","appendChild","speedControlContainer","marginBottom","speedLabelContainer","display","justifyContent","speedLabel","speedValue","fontWeight","speedSlider","min","max","step","value","width","height","oninput","newSpeed","parseInt","speedValueEl","addSpeedSlider","existingSlider","container","label","slider","querySelector","textNodes","findText","element","i","childNodes","node","nodeType","nodeValue","push","includes","tagName","fragment","createDocumentFragment","className","dataset","index","updateDisplay","color","has","isInViewport","rect","getBoundingClientRect","top","left","bottom","innerHeight","documentElement","clientHeight","right","innerWidth","clientWidth","add","currentChar","scrollIntoView","behavior","block","handleModeChange","mode","originalFunction","readingModeChanged","addTestButton","button","initialize","speedPanel","innerHTML","addEventListener","manualStartRhythmReading","App","_s","pages","setPages","setCurrentPage","setTotalPages","fileName","setFileName","loading","setLoading","fileRef","file","setFile","pdfInstance","setPdfInstance","extractedTextPages","setExtractedTextPages","readingMode","setReadingMode","posMode","setPosMode","markdownContent","setMarkdownContent","readerContainerRef","content","setContent","pdfDocument","setPdfDocument","isTableOfContents","setIsTableOfContents","handlePdfFile","fileURL","URL","createObjectURL","loadingTask","getDocument","pdf","promise","numPages","handleTxtFile","handleMarkdownFile","html","parse","split","map","p","join","parseError","delta","newPage","handleFileUpload","uploadedFile","target","files","name","endsWith","handleReadingModeChange","newMode","children","_jsxFileName","lineNumber","columnNumber","onChange","accept","hidden","ref","onClick","current","dangerouslySetInnerHTML","__html","disabled","_c","$RefreshReg$"],"sources":["D:/adhd-read-helper/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport * as pdfjsLib from 'pdfjs-dist';\nimport * as pdfjsViewer from 'pdfjs-dist/web/pdf_viewer';\nimport { marked } from 'marked'; // 需要安装: npm install marked\nimport './styles/Reader.css';\nimport { pdfjs } from 'pdfjs-dist';\n\n// 设置 PDF.js worker\npdfjsLib.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjsLib.version}/pdf.worker.min.js`;\n\n// 全局变量定义\nwindow.currentPage = 1;\nwindow.totalPages = 0;\nwindow.changePage = null;\n\n// 添加全局事件跟踪对象\nwindow.eventTracker = window.eventTracker || {\n  mouseFollowHandlers: []\n};\n\n// 自动阅读器全局对象\nwindow.autoReader = {\n  charPositions: [],\n  intervalId: null,\n  currentIndex: 0,\n  speed: 300,\n  pageContainer: null,\n  isScrolling: false,\n  currentPage: 1,\n  isPageChanging: false,\n  cleanup: null\n};\n\n// 添加新的节奏阅读模式代码\n// 全局变量，确保在页面切换后仍然保持状态\nwindow.rhythmReaderGlobal = window.rhythmReaderGlobal || {\n  active: false,\n  speed: 300\n};\n\n// 节奏阅读模式 - 增强控制版\n(function() {\n  console.log(\"节奏阅读模式 - 增强控制版初始化\");\n  \n  // 配置参数\n  const defaultSpeed = 300;  // 默认速度 (ms/字符)\n  const minSpeed = 50;       // 最小速度\n  const maxSpeed = 1500;     // 最大速度\n  const speedStep = 50;      // 速度调整步长\n  \n  // 状态变量\n  let isActive = false;\n  let intervalId = null;\n  let charElements = [];\n  let currentIndex = 0;\n  let readIndices = new Set();\n  let currentSpeed = defaultSpeed;\n  let pagesRead = 0;\n  \n  // 查找下一页按钮\n  const findNextPageButton = function() {\n    const selectors = [\n      '.next-page',\n      '.next',\n      '#next',\n      '[aria-label=\"下一页\"]',\n      '[aria-label=\"Next\"]',\n      'button:contains(\"下一页\")', \n      'button:contains(\"Next\")'\n    ];\n    \n    for (const selector of selectors) {\n      try {\n        const buttons = document.querySelectorAll(selector);\n        for (const btn of buttons) {\n          if (btn.offsetParent !== null) {\n            return btn;\n          }\n        }\n      } catch(e) {}\n    }\n    \n    const allButtons = document.querySelectorAll('button, a, div[role=\"button\"]');\n    for (const btn of allButtons) {\n      const text = (btn.textContent || '').trim().toLowerCase();\n      if (text === '下一页' || text === 'next' || text === '>' || text === '→') {\n        if (btn.offsetParent !== null) {\n          return btn;\n        }\n      }\n    }\n    \n    return null;\n  };\n  \n  // 自动翻页\n  const autoTurnPage = function() {\n    console.log(\"尝试自动翻页...\");\n    \n    const nextButton = findNextPageButton();\n    \n    if (!nextButton) {\n      console.log(\"未找到下一页按钮\");\n      showMessage(\"已读完当前页，但未找到下一页按钮\");\n      return;\n    }\n    \n    if (intervalId) {\n      clearInterval(intervalId);\n      intervalId = null;\n    }\n    \n    pagesRead++;\n    console.log(`已读完第 ${pagesRead} 页，点击下一页按钮`);\n    \n    nextButton.click();\n    \n    const observer = new MutationObserver((mutations) => {\n      const contentAdded = mutations.some(mutation => \n        mutation.type === 'childList' && mutation.addedNodes.length > 0\n      );\n      \n      if (contentAdded) {\n        console.log(\"检测到新内容已加载\");\n        observer.disconnect();\n        \n        setTimeout(() => {\n          console.log(\"在新页面上重新启动节奏阅读模式\");\n          startReading();\n        }, 800);\n      }\n    });\n    \n    observer.observe(document.body, {\n      childList: true,\n      subtree: true\n    });\n  };\n  \n  // 清理\n  const cleanup = function() {\n    console.log(\"执行清理...\");\n    \n    if (intervalId) {\n      clearInterval(intervalId);\n      intervalId = null;\n    }\n    \n    try {\n      document.querySelectorAll('.rhythm-char').forEach(span => {\n        if (span.parentNode) {\n          span.parentNode.replaceChild(document.createTextNode(span.textContent), span);\n        }\n      });\n    } catch(e) {\n      console.error(\"清理文本失败:\", e);\n    }\n    \n    charElements = [];\n    currentIndex = 0;\n    readIndices = new Set();\n    isActive = false;\n    pagesRead = 0;\n    \n    const panel = document.getElementById('rhythm-control-panel');\n    if (panel) panel.remove();\n  };\n  \n  // 简单通知\n  const showMessage = function(message) {\n    console.log(message);\n    alert(message);\n  };\n  \n  // 添加控制面板\n  const addControlPanel = function() {\n    const existingPanel = document.getElementById('rhythm-control-panel');\n    if (existingPanel) existingPanel.remove();\n    \n    const panel = document.createElement('div');\n    panel.id = 'rhythm-control-panel';\n    panel.style.cssText = `\n      position: fixed;\n      bottom: 20px;\n      right: 20px;\n      width: 200px;\n      background-color: rgba(0, 0, 0, 0.9);\n      color: white;\n      padding: 15px;\n      border-radius: 8px;\n      z-index: 999999;\n      box-shadow: 0 4px 12px rgba(0,0,0,0.4);\n      font-family: Arial, sans-serif;\n    `;\n    \n    // 添加暂停/继续按钮\n    const controlButton = document.createElement('button');\n    controlButton.id = 'rhythm-pause-button';\n    controlButton.textContent = isActive ? '暂停' : '启动';\n    controlButton.style.cssText = `\n      width: 100%;\n      padding: 8px 0;\n      background-color: ${isActive ? '#f44336' : '#4CAF50'};\n      color: white;\n      border: none;\n      border-radius: 4px;\n      font-size: 15px;\n      margin-bottom: 15px;\n      cursor: pointer;\n      font-weight: bold;\n      transition: background-color 0.2s;\n    `;\n    \n    controlButton.onclick = function() {\n      if (!isActive) {\n        // 如果未激活，启动\n        startReading();\n        this.textContent = '暂停';\n        this.style.backgroundColor = '#f44336';\n      } else if (intervalId) {\n        // 如果正在运行，暂停\n        clearInterval(intervalId);\n        intervalId = null;\n        this.textContent = '继续';\n        this.style.backgroundColor = '#2196F3';\n      } else {\n        // 如果已暂停，继续\n        intervalId = setInterval(nextChar, currentSpeed);\n        this.textContent = '暂停';\n        this.style.backgroundColor = '#f44336';\n      }\n    };\n    panel.appendChild(controlButton);\n    \n    // 添加速度控制\n    const speedControlContainer = document.createElement('div');\n    speedControlContainer.style.marginBottom = '12px';\n    \n    // 速度标签和值显示\n    const speedLabelContainer = document.createElement('div');\n    speedLabelContainer.style.display = 'flex';\n    speedLabelContainer.style.justifyContent = 'space-between';\n    speedLabelContainer.style.marginBottom = '8px';\n    \n    const speedLabel = document.createElement('span');\n    speedLabel.textContent = '阅读速度:';\n    \n    const speedValue = document.createElement('span');\n    speedValue.id = 'rhythm-speed-value';\n    speedValue.textContent = currentSpeed + 'ms';\n    speedValue.style.fontWeight = 'bold';\n    \n    speedLabelContainer.appendChild(speedLabel);\n    speedLabelContainer.appendChild(speedValue);\n    speedControlContainer.appendChild(speedLabelContainer);\n    \n    // 速度滑块\n    const speedSlider = document.createElement('input');\n    speedSlider.id = 'rhythm-speed-slider';\n    speedSlider.type = 'range';\n    speedSlider.min = minSpeed;\n    speedSlider.max = maxSpeed;\n    speedSlider.step = '50';\n    speedSlider.value = currentSpeed;\n    speedSlider.style.width = '100%';\n    speedSlider.style.height = '20px'; // 增加高度使其更容易点击\n    \n    // 添加变化事件\n    speedSlider.oninput = function() {\n      const newSpeed = parseInt(this.value);\n      currentSpeed = newSpeed;\n      \n      // 更新显示值\n      const speedValueEl = document.getElementById('rhythm-speed-value');\n      if (speedValueEl) speedValueEl.textContent = newSpeed + 'ms';\n      \n      // 如果正在运行，更新计时器\n      if (intervalId) {\n        clearInterval(intervalId);\n        intervalId = setInterval(nextChar, currentSpeed);\n      }\n    };\n    \n    speedControlContainer.appendChild(speedSlider);\n    panel.appendChild(speedControlContainer);\n    \n    document.body.appendChild(panel);\n    return panel;\n  };\n  \n  // 添加速度滑块UI\n  const addSpeedSlider = function() {\n    // 检查是否已存在\n    const existingSlider = document.getElementById('rhythm-speed-container');\n    if (existingSlider) existingSlider.remove();\n    \n    // 创建容器\n    const container = document.createElement('div');\n    container.id = 'rhythm-speed-container';\n    container.style.cssText = `\n      position: fixed;\n      top: 50px;\n      right: 10px;\n      background: red;\n      padding: 10px 15px;\n      border-radius: 5px;\n      z-index: 999999;\n      display: flex;\n      flex-direction: column;\n      width: 200px;\n      box-shadow: 0 2px 8px rgba(0,0,0,0.3);\n      border: 3px solid black;\n    `;\n    \n    // 添加标签\n    const label = document.createElement('div');\n    label.textContent = \"阅读速度: \" + currentSpeed + \"ms\";\n    label.id = 'rhythm-speed-label';\n    label.style.cssText = `\n      color: black;\n      font-size: 14px;\n      font-weight: bold;\n      margin-bottom: 8px;\n    `;\n    container.appendChild(label);\n    \n    // 添加滑块\n    const slider = document.createElement('input');\n    slider.type = 'range';\n    slider.min = '50';\n    slider.max = '800';\n    slider.step = '50';\n    slider.value = currentSpeed;\n    slider.style.width = '100%';\n    slider.style.height = '20px';\n    \n    // 滑块事件\n    slider.oninput = function() {\n      currentSpeed = parseInt(this.value);\n      label.textContent = \"阅读速度: \" + currentSpeed + \"ms\";\n      \n      // 如果正在阅读，更新间隔\n      if (intervalId) {\n        clearInterval(intervalId);\n        intervalId = setInterval(nextChar, currentSpeed);\n      }\n    };\n    \n    container.appendChild(slider);\n    document.body.appendChild(container);\n    console.log(\"速度滑块已添加！位置：测试按钮下方\");\n    return container;\n  };\n  \n  // 启动阅读\n  const startReading = function() {\n    console.log(\"启动节奏阅读...\");\n    \n    // 清理之前的实例\n    cleanup();\n    \n    const container = document.querySelector('.pdf-content') || \n                      document.querySelector('[class*=\"pdf\"]') || \n                      document.querySelector('article') || \n                      document.querySelector('main') || \n                      document.body;\n    \n    const textNodes = [];\n    const findText = function(element) {\n      for (let i = 0; i < element.childNodes.length; i++) {\n        const node = element.childNodes[i];\n        if (node.nodeType === 3 && node.nodeValue.trim() !== '') {\n          textNodes.push(node);\n        } else if (node.nodeType === 1 && \n                  !['SCRIPT', 'STYLE', 'BUTTON', 'INPUT', 'SELECT', 'NOSCRIPT'].includes(node.tagName)) {\n          findText(node);\n        }\n      }\n    };\n    findText(container);\n    \n    if (textNodes.length === 0) {\n      showMessage(\"错误: 未找到文本内容\");\n      return;\n    }\n    \n    try {\n      textNodes.forEach(node => {\n        if (!node.nodeValue || !node.parentNode) return;\n        \n        const text = node.nodeValue;\n        const fragment = document.createDocumentFragment();\n        \n        for (let i = 0; i < text.length; i++) {\n          const span = document.createElement('span');\n          span.textContent = text[i];\n          span.className = 'rhythm-char';\n          span.dataset.index = charElements.length;\n          \n          fragment.appendChild(span);\n          charElements.push(span);\n        }\n        \n        node.parentNode.replaceChild(fragment, node);\n      });\n    } catch(e) {\n      console.error(\"处理文本失败:\", e);\n      showMessage(\"生成节奏阅读效果失败\");\n      return;\n    }\n    \n    if (charElements.length === 0) {\n      showMessage(\"未找到可读内容\");\n      return;\n    }\n    \n    isActive = true;\n    currentIndex = 0;\n    \n    updateDisplay();\n    intervalId = setInterval(nextChar, currentSpeed);\n    \n    addControlPanel();\n    addSpeedSlider(); // 确保滑块被添加\n  };\n  \n  // 更新显示\n  const updateDisplay = function() {\n    charElements.forEach((span, index) => {\n      if (index === currentIndex) {\n        span.style.color = 'green';\n        span.style.fontWeight = 'bold';\n      } else if (readIndices.has(index)) {\n        span.style.color = 'white';\n      } else {\n        span.style.color = 'rgba(200,200,200,0.3)';\n      }\n    });\n  };\n  \n  // 检查是否在视口中\n  const isInViewport = function(element) {\n    const rect = element.getBoundingClientRect();\n    return (\n      rect.top >= 0 &&\n      rect.left >= 0 &&\n      rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&\n      rect.right <= (window.innerWidth || document.documentElement.clientWidth)\n    );\n  };\n  \n  // 下一个字符\n  const nextChar = function() {\n    if (!isActive || !charElements.length) return;\n    \n    readIndices.add(currentIndex);\n    \n    currentIndex++;\n    if (currentIndex >= charElements.length) {\n      if (intervalId) {\n        clearInterval(intervalId);\n        intervalId = null;\n      }\n      console.log(\"当前页已读完，尝试翻页\");\n      autoTurnPage();\n      return;\n    }\n    \n    updateDisplay();\n    \n    // 确保当前字符可见\n    const currentChar = charElements[currentIndex];\n    if (currentChar && !isInViewport(currentChar)) {\n      currentChar.scrollIntoView({\n        behavior: 'smooth',\n        block: 'center'\n      });\n    }\n  };\n  \n  // 处理模式切换\n  const handleModeChange = function(mode) {\n    console.log(\"模式更改为:\", mode);\n    \n    if (mode !== 'rhythm' && mode !== '节奏阅读' && isActive) {\n      cleanup();\n    }\n  };\n  \n  // 重写模式切换函数\n  const originalFunction = window.readingModeChanged;\n  window.readingModeChanged = function(mode) {\n    if (typeof originalFunction === 'function') {\n      try {\n        originalFunction(mode);\n      } catch(e) {}\n    }\n    handleModeChange(mode);\n  };\n  \n  // 添加测试按钮\n  const addTestButton = function() {\n    const button = document.createElement('button');\n    button.id = 'rhythm-test-button';\n    button.textContent = '测试节奏阅读';\n    button.style.cssText = `\n      position: fixed;\n      top: 10px;\n      right: 10px;\n      z-index: 999999;\n      background: red;\n      color: white;\n      padding: 8px 12px;\n      border: none;\n      border-radius: 4px;\n      font-size: 14px;\n      cursor: pointer;\n      border: 3px solid yellow;\n      font-weight: bold;\n    `;\n    \n    button.onclick = startReading;\n    document.body.appendChild(button);\n  };\n  \n  // 初始化\n  const initialize = function() {\n    console.log(\"初始化节奏阅读组件...\");\n    \n    // 添加测试按钮\n    const button = document.createElement('button');\n    button.id = 'rhythm-test-button';\n    button.textContent = '测试节奏阅读';\n    button.style.cssText = `\n      position: fixed;\n      top: 10px;\n      right: 10px;\n      z-index: 999999;\n      background: red;\n      color: white;\n      padding: 8px 12px;\n      border: none;\n      border-radius: 4px;\n      font-size: 14px;\n      cursor: pointer;\n      border: 3px solid yellow;\n      font-weight: bold;\n    `;\n    \n    button.onclick = startReading;\n    document.body.appendChild(button);\n    \n    // 直接创建速度控制面板\n    const speedPanel = document.createElement('div');\n    speedPanel.id = 'rhythm-speed-panel';\n    speedPanel.style.cssText = `\n      position: fixed;\n      top: 50px;\n      right: 10px;\n      width: 200px;\n      background: red;\n      color: white;\n      padding: 10px;\n      border-radius: 4px;\n      z-index: 999999;\n      border: 3px solid yellow;\n    `;\n    \n    speedPanel.innerHTML = `\n      <div style=\"margin-bottom:10px;font-weight:bold;font-size:16px;\">阅读速度控制</div>\n      <div style=\"display:flex;align-items:center;margin-bottom:10px;\">\n        <span style=\"flex:1;\">速度: ${currentSpeed}ms</span>\n        <span id=\"rhythm-speed-value\" style=\"font-weight:bold;\"></span>\n      </div>\n      <input \n        id=\"rhythm-speed-slider\" \n        type=\"range\" \n        min=\"50\" \n        max=\"800\" \n        step=\"50\" \n        value=\"${currentSpeed}\" \n        style=\"width:100%;height:20px;\" \n      />\n    `;\n    \n    document.body.appendChild(speedPanel);\n    \n    // 添加滑块事件监听\n    const slider = document.getElementById('rhythm-speed-slider');\n    const speedValue = document.getElementById('rhythm-speed-value');\n    if (slider && speedValue) {\n      speedValue.textContent = currentSpeed + 'ms';\n      \n      slider.addEventListener('input', function() {\n        currentSpeed = parseInt(this.value);\n        speedValue.textContent = currentSpeed + 'ms';\n        \n        if (intervalId) {\n          clearInterval(intervalId);\n          intervalId = setInterval(nextChar, currentSpeed);\n        }\n      });\n    }\n    \n    console.log(\"测试按钮和速度控制面板已添加\");\n  };\n  \n  // 等待DOM加载完成\n  document.addEventListener('DOMContentLoaded', initialize);\n  \n  // 暴露全局API\n  window.manualStartRhythmReading = startReading;\n  \n  console.log(\"节奏阅读模式初始化完成 - 增强控制版\");\n})();\n\nconst App = () => {\n  // 状态定义\n  const [pages, setPages] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const [fileName, setFileName] = useState('');\n  const [loading, setLoading] = useState(false);\n  const fileRef = useRef(null);\n  const [file, setFile] = useState(null);\n  const [pdfInstance, setPdfInstance] = useState(null);\n  const [extractedTextPages, setExtractedTextPages] = useState([]);\n  const [readingMode, setReadingMode] = useState('normal');\n  const [posMode, setPosMode] = useState('none');\n  const [markdownContent, setMarkdownContent] = useState('');\n  const readerContainerRef = useRef(null);\n  const [content, setContent] = useState('');\n  const [pdfDocument, setPdfDocument] = useState(null);\n  const [isTableOfContents, setIsTableOfContents] = useState(false);\n\n  // 初始化PDF.js\n  useEffect(() => {\n    pdfjsLib.GlobalWorkerOptions.workerSrc = `https://cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjsLib.version}/pdf.worker.min.js`;\n  }, []);\n\n  // 处理PDF文件\n  const handlePdfFile = async (file) => {\n    try {\n      const fileURL = URL.createObjectURL(file);\n      const loadingTask = pdfjsLib.getDocument(fileURL);\n      const pdf = await loadingTask.promise;\n      \n      setPdfDocument(pdf);\n      setTotalPages(pdf.numPages);\n      setCurrentPage(1);\n      \n      // 显示简单的PDF内容\n      setContent('<div class=\"pdf-content\">PDF已加载，请使用下方翻页按钮浏览</div>');\n      \n      console.log('PDF加载成功，页数:', pdf.numPages);\n    } catch (error) {\n      console.error('加载PDF时出错:', error);\n      setContent('<div class=\"error-message\">PDF加载失败</div>');\n    }\n  };\n\n  // 处理TXT文件\n  const handleTxtFile = async (file) => {\n    try {\n      const text = await file.text();\n      setContent(`<div class=\"pdf-content\"><pre>${text}</pre></div>`);\n    } catch (error) {\n      console.error('处理TXT文件出错:', error);\n      setContent('<div class=\"error-message\">TXT文件处理失败</div>');\n    }\n  };\n\n  // 处理Markdown文件\n  const handleMarkdownFile = async (file) => {\n    try {\n      const text = await file.text();\n      // 使用marked库转换markdown为HTML\n      let html = '';\n      try {\n        if (window.marked) {\n          html = window.marked.parse(text);\n        } else {\n          html = `<div>${text.split(\"\\n\\n\").map(p => `<p>${p}</p>`).join(\"\")}</div>`;\n        }\n      } catch (parseError) {\n        console.error('Markdown解析错误:', parseError);\n        html = `<div>${text}</div>`;\n      }\n      \n      setContent(`<div class=\"pdf-content\">${html}</div>`);\n    } catch (error) {\n      console.error('处理Markdown文件出错:', error);\n      setContent('<div class=\"error-message\">Markdown文件处理失败</div>');\n    }\n  };\n\n  // 翻页函数\n  const changePage = (delta) => {\n    const newPage = currentPage + delta;\n    if (newPage < 1 || newPage > totalPages) return;\n    \n    setCurrentPage(newPage);\n    // 这里可以添加加载新页面的逻辑\n    setContent(`<div class=\"pdf-content\">正在显示第 ${newPage} 页</div>`);\n    \n    // 全局变量也更新\n    window.currentPage = newPage;\n  };\n\n  // 在组件挂载时设置全局changePage函数\n  useEffect(() => {\n    window.changePage = changePage;\n    \n    return () => {\n      window.changePage = null;\n    };\n  }, [currentPage, totalPages]);\n\n  // 文件上传处理\n  const handleFileUpload = async (e) => {\n    const uploadedFile = e.target.files[0];\n    if (!uploadedFile) return;\n    \n    setLoading(true);\n    setFileName(uploadedFile.name);\n    \n    try {\n      if (uploadedFile.type === 'application/pdf') {\n        await handlePdfFile(uploadedFile);\n      } else if (uploadedFile.type === 'text/plain' || uploadedFile.name.endsWith('.txt')) {\n        await handleTxtFile(uploadedFile);\n      } else if (uploadedFile.type === 'text/markdown' || uploadedFile.name.endsWith('.md')) {\n        await handleMarkdownFile(uploadedFile);\n      } else {\n        setContent('<div class=\"error-message\">不支持的文件格式</div>');\n      }\n    } catch (error) {\n      console.error('处理文件时出错:', error);\n      setContent('<div class=\"error-message\">处理文件时出错</div>');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 修改阅读模式切换函数\n  const handleReadingModeChange = (e) => {\n    const newMode = e.target.value;\n    setReadingMode(newMode);\n    \n    // 通知节奏阅读模式\n    if (typeof window.readingModeChanged === 'function') {\n      window.readingModeChanged(newMode);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"sidebar\">\n        <div className=\"logo\">\n          <h2>ADHD阅读助手</h2>\n        </div>\n        \n        <div className=\"reading-controls\">\n          <h3>阅读模式</h3>\n          <select \n            id=\"reading-mode-select\" \n            value={readingMode} \n            onChange={handleReadingModeChange}\n            className=\"mode-select\"\n          >\n            <option value=\"normal\">普通模式</option>\n            <option value=\"static\">静态高亮</option>\n            <option value=\"follow-mouse\">鼠标跟随</option>\n            <option value=\"rhythm\">节奏阅读</option>\n            <option value=\"flash-reading\">闪读模式</option>\n          </select>\n        </div>\n        \n        <div className=\"upload-section\">\n          <input\n            type=\"file\"\n            accept=\".pdf,.txt,.md\" \n            hidden\n            id=\"file-upload\"\n            onChange={handleFileUpload}\n            ref={fileRef}\n          />\n          <button \n            className=\"upload-btn\"\n            onClick={() => fileRef.current.click()}\n          >\n            上传文件 (.pdf/.txt/.md)\n          </button>\n        </div>\n      </div>\n      \n      <div className=\"main-content\">\n        <div className=\"toolbar\">\n          {fileName && <h3 className=\"filename\">{fileName}</h3>}\n        </div>\n        \n        <div className=\"page-content\" ref={readerContainerRef}>\n          <div dangerouslySetInnerHTML={{ __html: content }} />\n          \n          {totalPages > 0 && (\n            <div className=\"bottom-pagination\">\n              <button \n                onClick={() => changePage(-1)} \n                disabled={currentPage <= 1}\n                className=\"page-btn\"\n              >\n                上一页\n              </button>\n              <span className=\"page-info\">\n                第 {currentPage} / {totalPages} 页\n              </span>\n              <button \n                onClick={() => changePage(1)} \n                disabled={currentPage >= totalPages}\n                className=\"page-btn\"\n              >\n                下一页\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}