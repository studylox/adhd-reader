{"ast":null,"code":"var _jsxFileName = \"D:\\\\adhd-read-helper\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport * as pdfjsLib from 'pdfjs-dist';\nimport './styles/Reader.css';\n\n// 确保使用正确的 worker 版本\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst workerSrc = require('pdfjs-dist/build/pdf.worker.entry');\npdfjsLib.GlobalWorkerOptions.workerSrc = workerSrc;\nfunction App() {\n  _s();\n  const [isDarkMode, setIsDarkMode] = useState(true);\n  const [content, setContent] = useState('');\n  const [fileName, setFileName] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  // 处理PDF文件\n  const handlePdfFile = async file => {\n    try {\n      setLoading(true);\n      const fileArrayBuffer = await file.arrayBuffer();\n      const pdf = await pdfjsLib.getDocument({\n        data: fileArrayBuffer\n      }).promise;\n\n      // 获取所有页面的文本\n      const numPages = pdf.numPages;\n      let fullText = '';\n\n      // 逐页提取文本\n      for (let i = 1; i <= numPages; i++) {\n        const page = await pdf.getPage(i);\n        const textContent = await page.getTextContent();\n        const pageText = textContent.items.map(item => item.str).join(' ');\n        fullText += pageText + '\\n\\n'; // 每页之间添加空行\n      }\n      console.log('PDF文本提取成功:', fullText.substring(0, 100)); // 调试用\n      setContent(fullText);\n      setLoading(false);\n    } catch (error) {\n      console.error('PDF处理错误:', error);\n      setLoading(false);\n      alert('PDF文件处理失败，请重试');\n    }\n  };\n\n  // 处理TXT文件\n  const handleTxtFile = async file => {\n    try {\n      setLoading(true);\n      const text = await file.text();\n      setContent(text);\n      setLoading(false);\n    } catch (error) {\n      console.error('TXT处理错误:', error);\n      setLoading(false);\n      alert('TXT文件处理失败，请重试');\n    }\n  };\n\n  // 文件上传处理\n  const handleFileUpload = async event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    if (file.size > 100 * 1024 * 1024) {\n      alert('文件大小不能超过100MB');\n      return;\n    }\n    setFileName(file.name);\n    setContent('');\n    if (file.type === 'application/pdf') {\n      await handlePdfFile(file);\n    } else if (file.type === 'text/plain' || file.name.endsWith('.txt')) {\n      await handleTxtFile(file);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App dark\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"app-title\",\n        children: \"ADHD \\u9605\\u8BFB\\u52A9\\u624B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".txt,.pdf\",\n          onChange: handleFileUpload,\n          id: \"file-upload\",\n          className: \"file-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file-upload\",\n          className: \"control-btn\",\n          children: \"\\u9009\\u62E9\\u6587\\u4EF6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), fileName && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"file-info\",\n          children: [\"\\u5F53\\u524D\\u6587\\u4EF6: \", fileName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reader-container\",\n        children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"\\u6B63\\u5728\\u52A0\\u8F7D\\u5185\\u5BB9\\uFF0C\\u8BF7\\u7A0D\\u5019...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this) : content ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"book-view\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"page-content\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-content\",\n              children: content.split('\\n').map((paragraph, index) => paragraph.trim() && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"paragraph\",\n                children: paragraph\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-prompt\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u8BF7\\u4E0A\\u4F20\\u6587\\u4EF6\\u5F00\\u59CB\\u9605\\u8BFB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"supported-formats\",\n            children: \"\\u652F\\u6301\\u7684\\u683C\\u5F0F: PDF, TXT (\\u6700\\u5927100MB)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"fXKQdGS0a5TpeZ1FyUCTkJ0YFdI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","pdfjsLib","jsxDEV","_jsxDEV","workerSrc","require","GlobalWorkerOptions","App","_s","isDarkMode","setIsDarkMode","content","setContent","fileName","setFileName","loading","setLoading","handlePdfFile","file","fileArrayBuffer","arrayBuffer","pdf","getDocument","data","promise","numPages","fullText","i","page","getPage","textContent","getTextContent","pageText","items","map","item","str","join","console","log","substring","error","alert","handleTxtFile","text","handleFileUpload","event","target","files","size","name","type","endsWith","className","children","_jsxFileName","lineNumber","columnNumber","accept","onChange","id","htmlFor","split","paragraph","index","trim","_c","$RefreshReg$"],"sources":["D:/adhd-read-helper/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport * as pdfjsLib from 'pdfjs-dist';\r\nimport './styles/Reader.css';\r\n\r\n// 确保使用正确的 worker 版本\r\nconst workerSrc = require('pdfjs-dist/build/pdf.worker.entry');\r\npdfjsLib.GlobalWorkerOptions.workerSrc = workerSrc;\r\n\r\nfunction App() {\r\n  const [isDarkMode, setIsDarkMode] = useState(true);\r\n  const [content, setContent] = useState('');\r\n  const [fileName, setFileName] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // 处理PDF文件\r\n  const handlePdfFile = async (file) => {\r\n    try {\r\n      setLoading(true);\r\n      const fileArrayBuffer = await file.arrayBuffer();\r\n      const pdf = await pdfjsLib.getDocument({\r\n        data: fileArrayBuffer,\r\n      }).promise;\r\n\r\n      // 获取所有页面的文本\r\n      const numPages = pdf.numPages;\r\n      let fullText = '';\r\n\r\n      // 逐页提取文本\r\n      for (let i = 1; i <= numPages; i++) {\r\n        const page = await pdf.getPage(i);\r\n        const textContent = await page.getTextContent();\r\n        const pageText = textContent.items\r\n          .map(item => item.str)\r\n          .join(' ');\r\n        \r\n        fullText += pageText + '\\n\\n'; // 每页之间添加空行\r\n      }\r\n\r\n      console.log('PDF文本提取成功:', fullText.substring(0, 100)); // 调试用\r\n      setContent(fullText);\r\n      setLoading(false);\r\n\r\n    } catch (error) {\r\n      console.error('PDF处理错误:', error);\r\n      setLoading(false);\r\n      alert('PDF文件处理失败，请重试');\r\n    }\r\n  };\r\n\r\n  // 处理TXT文件\r\n  const handleTxtFile = async (file) => {\r\n    try {\r\n      setLoading(true);\r\n      const text = await file.text();\r\n      setContent(text);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('TXT处理错误:', error);\r\n      setLoading(false);\r\n      alert('TXT文件处理失败，请重试');\r\n    }\r\n  };\r\n\r\n  // 文件上传处理\r\n  const handleFileUpload = async (event) => {\r\n    const file = event.target.files[0];\r\n    if (!file) return;\r\n\r\n    if (file.size > 100 * 1024 * 1024) {\r\n      alert('文件大小不能超过100MB');\r\n      return;\r\n    }\r\n\r\n    setFileName(file.name);\r\n    setContent('');\r\n\r\n    if (file.type === 'application/pdf') {\r\n      await handlePdfFile(file);\r\n    } else if (file.type === 'text/plain' || file.name.endsWith('.txt')) {\r\n      await handleTxtFile(file);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App dark\">\r\n      <div className=\"app-container\">\r\n        <h1 className=\"app-title\">ADHD 阅读助手</h1>\r\n        \r\n        <div className=\"control-panel\">\r\n          <input\r\n            type=\"file\"\r\n            accept=\".txt,.pdf\"\r\n            onChange={handleFileUpload}\r\n            id=\"file-upload\"\r\n            className=\"file-input\"\r\n          />\r\n          <label htmlFor=\"file-upload\" className=\"control-btn\">\r\n            选择文件\r\n          </label>\r\n          \r\n          {fileName && (\r\n            <span className=\"file-info\">\r\n              当前文件: {fileName}\r\n            </span>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"reader-container\">\r\n          {loading ? (\r\n            <div className=\"loading\">\r\n              <div className=\"loading-spinner\"></div>\r\n              <div>正在加载内容，请稍候...</div>\r\n            </div>\r\n          ) : content ? (\r\n            <div className=\"book-view\">\r\n              <div className=\"page-content\">\r\n                <div className=\"text-content\">\r\n                  {content.split('\\n').map((paragraph, index) => (\r\n                    paragraph.trim() && (\r\n                      <p key={index} className=\"paragraph\">\r\n                        {paragraph}\r\n                      </p>\r\n                    )\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"upload-prompt\">\r\n              <p>请上传文件开始阅读</p>\r\n              <p className=\"supported-formats\">支持的格式: PDF, TXT (最大100MB)</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}